<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- This file originates from the project https://github.com/openSUSE/doc-kit -->
<!-- This file can be edited downstream. -->
<!DOCTYPE assembly
[
    <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<!-- refers to legacy doc: <add github link to legacy doc piece, if applicable> -->
<!-- point back to this document with a similar comment added to your legacy doc piece -->
<!-- refer to README.md for file and id naming conventions -->
<assembly version="5.2" xml:lang="en"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:trans="http://docbook.org/ns/transclusion"
          xmlns:its="http://www.w3.org/2005/11/its"
          xmlns="http://docbook.org/ns/docbook">
  <!-- resources section references all topic chunks used in the final article
    -->
  <!-- R E S O U R C E S -->
  
  <!-- Concept files -->
  <resources>
    <resource xml:id="_setroubleshoot-about" href="../concepts/setroubleshoot-about.xml">
      <description>About setroubleshoot</description>
    </resource>
    <resource xml:id="_selinux-audit-log" href="../concepts/selinux-audit-log.xml">
      <description>About the audit log</description>
    </resource>
  </resources>
  <!-- Tasks -->
  <resources>
    
    <resource xml:id="_selinux-audit2allow" href="../tasks/selinux-audit2allow.xml">
      <description>audit2allow</description>
    </resource>
    <resource xml:id="_setroubleshoot-running-analysis" href="../tasks/setroubleshoot-running-analysis.xml">
      <description>Running analysis</description>
    </resource>
  </resources>
  <!-- References -->
  <resources>
    <resource xml:id="_setroubleshoot-congfiguration" href="../references/setroubleshoot-congfiguration.xml">
      <description>Configuring mail notifications</description>
    </resource>
  </resources>
  <!-- Legal -->
  <resources>
    <resource href="../common/legal.xml" xml:id="_legal">
      <description>Legal Notice</description>
    </resource>
    <resource href="../common/license_gfdl1.2.xml" xml:id="_gfdl">
      <description>GNU Free Documentation License</description>
    </resource>
  </resources>
  <!-- S T R U C T U R E -->
  <structure renderas="article" xml:id="setroubleshoot" xml:lang="en">
    <merge>
      <title>Troubleshooting &selnx;</title>
     <!-- <subtitle>Subtitle if necessary</subtitle>-->
      <!-- Create revision history to enable versioning; add most recent entries at the top. -->
      <!-- Check https://documentation.suse.com/style/current/single-html/docu_styleguide/#sec-revhistory for detailed instructions-->
      <revhistory xml:id="rh-USE-ROOT-ID">
        <revision><date>2024-02-29</date>
          <revdescription>
            <itemizedlist>
              <!-- Group by type of change (added/removed/changed)-->
              <listitem><para>Initial version</para>                
              </listitem>
            </itemizedlist>
          </revdescription>
        </revision>
      </revhistory>
      <!-- TODO: provide a listing of possible and validatable meta entry values. Maybe in our geekodoc repo? -->
      <!-- add author's e-mail -->
      <meta name="maintainer" content="jsindelarova@suse.com" its:translate="no"/>
      <!-- ISO date of last update as YYYY-MM-DD -->
      <meta name="updated" content="2037-11-16" its:translate="no"/>
      <!-- this does not work yet. Use the dm tags listed below for now
        <meta name="bugtracker" its:translate="no">
          <phrase role="url">https://bugzilla.suse.com/enter_bug.cgi</phrase>
          <phrase role="component">Non-product-specific documentation</phrase>
          <phrase role="product">Smart Docs</phrase>
          <phrase role="assignee">assignee@suse.com</phrase>
        </meta>
        -->
      <!-- not supported, yet. Use dm: tag for now
        <meta name="translation" its:translate="no">
        <phrase role="trans">yes</phrase>
        <phrase role="language">de-de,cs-cz</phrase>
        </meta>
        -->
      <!-- enter the platform identifier or a list of
        identifiers, separated by ; -->
      <!-- For a full list of meta tags and their values,
	   see https://confluence.suse.com/x/aQDWNg
      -->
      <meta name="architecture" content="x86;power" its:translate="no"/>
      <meta name="productname" its:translate="no">
        <!-- enter product name and version --><productname version="X.Y">&productname;</productname>
      </meta>
      <meta name="title" its:translate="yes">Troubleshooting &selnx;</meta>
      <meta name="description" its:translate="yes">Using setroubleshoot and audit2allow to
      troubleshoot &selnx;.</meta>
      <meta name="social-descr" its:translate="yes">AVC denials, setroubleshoot and audit2allow.</meta>
      <!-- suitable category, comma-separated list of categories -->
      <meta name="category" content="Systems Management" its:translate="no"/>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:bugtracker>
          <dm:url>https://bugzilla.suse.com/enter_bug.cgi</dm:url>
          <dm:component>Smart Docs</dm:component>
          <dm:product>Documentation</dm:product>
          <!-- provide your BUGZILLA e-mail address, otherwise this does not work correctly-->
          <dm:assignee>jsindelarova@suse.com</dm:assignee>
       </dm:bugtracker>
        <dm:translation>yes</dm:translation>
      </dm:docmanager>
      <abstract>
      <variablelist>
        <varlistentry>
          <term>WHAT?</term>
          <listitem>
            <para>
              A system with &selnx; in the <literal>enforcing</literal> mode 
              may cause access denials that may prevent applications from 
              running correctly. You can use <command>audit2allow</command> 
              or <literal>setroubleshoot</literal> to analyze denial messages in a
              user-friendly way.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>WHY?</term>
          <listitem>
            <para>
              This article provides instructions on how to solve access denials 
              caused by &selnx; without decreasing the security of
              your system.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>EFFORT</term>
            <listitem>
              <para>
                It takes approximately 30 minutes to read the article.
              </para>
            </listitem>
        </varlistentry>
        <varlistentry>
          <term>GOAL</term>
            <listitem>
              <para>
                You will be able to use one of the further described tools to debug &selnx; denials.
              </para>
            </listitem>
        </varlistentry>
        <varlistentry>
          <term>REQUIREMENTS</term>
            <listitem>
              <itemizedlist>
                <listitem>
                  <para>
                    A running system with enabled &selnx;.
                  </para>
                </listitem>
              </itemizedlist>
            </listitem>
          </varlistentry>
        </variablelist>
      </abstract>
    </merge>
    <!-- pull in all the topic files you need -->
    <!-- pick the appropriate type of include to match your needs -->
    <!-- pull in a topic as is -->

    <module resourceref="_selinux-audit-log" renderas="section"/>
    <module resourceref="_selinux-audit2allow" renderas="section"/>

   
    <!-- pull in a topic and switch the title -->
    <module renderas="section">
      <merge>
        <title>Analyzing AVC messages using
        <command>setroubleshoot</command></title>
        <abstract>
          <para>
            To analyze AVC denial messages in a user-friendly way, you can use the
            <literal>setroubleshoot</literal> tool.
          </para>
        </abstract>
      </merge>
    <module resourceref="_setroubleshoot-about" renderas="section">
      <merge>
         <abstract>
          <para/>
        </abstract>
      </merge>
      </module>
      
    <module resourceref="_setroubleshoot-congfiguration" renderas="section"/>
    <module resourceref="_setroubleshoot-running-analysis" renderas="section">
      <merge>
        <abstract>
          <para/>
        </abstract>
      </merge>
      </module>
    </module>

   
    <module resourceref="_legal"/>
    <module resourceref="_gfdl">
      <output renderas="appendix"/>
    </module>
  </structure>
</assembly>
