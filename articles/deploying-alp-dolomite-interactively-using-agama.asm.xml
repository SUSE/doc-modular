<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://docbook.org/xml/5.2/rng/assemblyxi.rng" schematypens="http://relaxng.org/ns/structure/1.0"?>
<?xml-model href="http://docbook.org/xml/5.2/sch/assembly.sch" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<!DOCTYPE assembly
[
    <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<assembly version="5.2" xml:lang="en"
    xmlns="http://docbook.org/ns/docbook"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:tr="http://docbook.org/ns/transclusion"
    xmlns:its="http://www.w3.org/2005/11/its">
 <resources>
  <description>Common resources</description>
  <resource href="../common/license_gfdl1.2.xml" xml:id="gfdl">
   <description>GNU Free Documentation License</description>
  </resource>
 </resources>
<!-- R E S O U R C E S -->
 <resources>
  <description>Glue files</description>
  <resource xml:id="_alp-deployment-more-info" href="../glues/alp-deployment-more-info.xml"/>
 </resources>
 <resources>
  <description>Concepts</description>
  <resource xml:id="_concept-alp" href="../concepts/alp.xml"/>
  <resource xml:id="_concept-alp-deployment" href="../concepts/alp-deployment.xml"/>
  <resource xml:id="_concept-configure-ignition" href="../concepts/configure-ignition.xml"/>
  <resource xml:id="_concept-configure-combustion" href="../concepts/configure-combustion.xml"/>
  <resource xml:id="_concept-alp-installer-automated-deployment" href="../concepts/alp-installer-automated-deployment.xml"/>
  <resource xml:id="_concept-alp-installer-profile-based-automated-deployment" href="../concepts/alp-installer-profile-based-automated-deployment.xml"/>
  <resource xml:id="_concept-alp-installer-script-based-automated-deployment" href="../concepts/alp-installer-script-based-automated-deployment.xml"/>
 </resources>
 <resources>
  <description>References</description>
  <resource xml:id="_ref-ignition-configuration" href="../references/ignition-configuration.xml"/>
  <resource xml:id="_ref-combustion-configuration" href="../references/combustion-configuration.xml"/>
  <resource xml:id="_ref-alp-installer-profile-based-automated-deployment-options" href="../references/alp-installer-profile-based-automated-deployment-options.xml"/>
 </resources>
 <resources>
  <description>Tasks</description>
  <resource xml:id="_task-convert-yaml-to-json" href="../tasks/convert-yaml-to-json.xml"/>
  <resource xml:id="_task-deploy-alp-raw-image" href="../tasks/deploy-alp-raw-image.xml"/>
  <resource xml:id="_task-deploy-alp-installer" href="../tasks/deploy-alp-installer.xml"/>
  <resource xml:id="_task-deploy-alp-zseries" href="../tasks/deploy-alp-zseries.xml"/>
  <resource xml:id="_task-prepare-alp-vm" href="../tasks/prepare-alp-vm.xml"/>
  <resource xml:id="_task-alp-post-deployment-considerations" href="../tasks/alp-post-deployment-considerations.xml"/>
 </resources>
 <resources>
  <description>Legals</description>
  <resource href="../common/legal.xml" xml:id="_legal"/>
  <resource href="../common/license_gfdl1.2.xml" xml:id="_gfdl"/>
 </resources>
<!-- / R E S O U R C E S -->
<!-- S T R U C T U R E -->
 <structure xml:lang="en">
  <merge>
   <title>Deploying &productnameshort; interactively using &alp-installer;</title>
   <revhistory xml:id="rh-alp-changelog">
    <revision><date>2023-10-24</date>
     <revdescription>
      <para>
       Initial article setup.
      </para>
     </revdescription>
    </revision>
   </revhistory>
   <meta name="maintainer" content="tbazant@suse.com" its:translate="no"/>
   <meta name="updated" content="2023-10-24" its:translate="no"/>
   <meta name="bugtracker" its:translate="no"><phrase role="url">https://bugzilla.suse.com/enter_bug.cgi</phrase><phrase role="component">Documentation</phrase><phrase role="product">&productnameshort;</phrase><phrase role="assignee">tbazant@suse.com</phrase>
   </meta>
<!--<meta name="translation" its:translate="no">
        <phrase role="trans">no</phrase><phrase role="language">
        <!-\- comma-separated list of languages, for example en-us,de-de,cs-cz -\->
        </phrase>
        </meta>-->
   <meta name="architecture" content="x86;aarch64" its:translate="no"/>
   <meta name="productname" its:translate="no"><productname version="0.1">&productname;</productname>
   </meta>
   <meta name="title" its:translate="no">Deploying &productnameshort;
      interactively using &alp-installer;</meta>
   <meta name="description"  its:translate="yes">Deploying &productnameshort;
      interactively using the &alp-installer; installer</meta>
   <meta name="social-descr" its:translate="yes">Interactive deployment
      using &alp-installer;</meta>
   <meta name="category" content="Systems Management" its:translate="no"/>
   <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
    <dm:bugtracker>
     <dm:url>https://bugzilla.suse.com/enter_bug.cgi</dm:url>
     <dm:component>Documentation</dm:component>
     <dm:product>Dolomite</dm:product>
     <dm:assignee>tbazant@suse.com</dm:assignee>
    </dm:bugtracker>
    <dm:translation>yes</dm:translation>
   </dm:docmanager>
   <abstract>
    <para>
     This article describes how to deploy &productname; (&productnameshort;)
     interactively using the &alp-installer; installer. To enhance this
     &productnameshort; documentation, find its sources at
     <link
      xlink:href="https://github.com/SUSE/doc-modular/edit/main/xml/"/>.
    </para>
    <variablelist>
     <varlistentry>
      <term>TOPIC</term>
      <listitem>
       <para>
        There are several methods you can deploy &productnameshort;. The
        &alp-installer; installer presents an interactive and user friendly way
        to achieve this.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>INTENTION</term>
      <listitem>
       <para>
        To give a detailed overview of the whole &productnameshort; deployment
        process and related contextual information.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>EFFORT</term>
      <listitem>
       <para>
        Although the deployment process takes less than 30 minutes, to learn
        more about &productnameshort;, its deployment methods, and related
        considerations and additional configurations takes significantly
        longer.
       </para>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term>REQUIREMENTS</term>
      <listitem>
       <para>
        The minimum supported hardware requirements for deploying
        &productnameshort; follow:
       </para>
       <variablelist>
        <varlistentry>
         <term>BIOS</term>
         <listitem>
          <para>
           Installing &productnameshort; is supported on hosts with UEFI BIOS
           only. Hosts with the legacy BIOS are not supported.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term>CPU</term>
         <listitem>
          <para>
           &x86-64;, &aarch64; and &zseries; CPU architectures are supported.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term>Maximum number of CPUs</term>
         <listitem>
          <para>
           The maximum number of CPUs supported by software design is 8192.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term>Memory</term>
         <listitem>
          <para>
           &productnameshort; requires at least 1&nbsp;GB RAM. Bear in mind
           that this is a minimal value for the operating system, the actual
           memory size depends on the workload.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term>Hard disk</term>
         <listitem>
          <para>
           The minimum hard disk space is 12&nbsp;GB, while the recommended
           value is 20&nbsp;GB of hard disk space. Adjust the value according
           to the workloads of your containers.
          </para>
         </listitem>
        </varlistentry>
       </variablelist>
      </listitem>
     </varlistentry>
    </variablelist>
   </abstract>
  </merge>
  <module renderas="chapter" resourceref="_concept-alp"/>
  <module renderas="chapter" resourceref="_concept-alp-deployment">
   <merge>
    <title>Deployment</title>
   </merge>
   <module renderas="section" resourceref="_task-prepare-alp-vm"/>
   <module renderas="section" resourceref="_task-deploy-alp-installer">
    <merge>
     <title>Interactive deployment using the &alp-installer; installer</title>
    </merge>
   </module>
   <module renderas="section" resourceref="_concept-alp-installer-automated-deployment">
    <module renderas="section" resourceref="_concept-alp-installer-profile-based-automated-deployment">
     <merge>
      <title>Profile-based installation</title>
      <abstract>
       <para>
        Select the profile-based installation if you prefer fine-tuning
        installation scenarios, using dynamic modifications, or validating the
        installation profile.
       </para>
      </abstract>
     </merge>
     <module renderas="section" resourceref="_ref-alp-installer-profile-based-automated-deployment-options">
      <merge>
       <title>Supported options</title>
       <abstract>
        <para>
         The following options are supported when creating installation
         profiles:
        </para>
       </abstract>
      </merge>
     </module>
    </module>
    <module renderas="section" resourceref="_concept-alp-installer-script-based-automated-deployment">
     <merge>
      <title>Script-based installation</title>
      <abstract>
       <para>
        Select the script-based installation to obtain full control of the
        installation process.
       </para>
      </abstract>
     </merge>
    </module>
   </module>
   <module renderas="section" resourceref="_task-deploy-alp-zseries"/>
   <module renderas="section" resourceref="_task-deploy-alp-raw-image">
    <merge>
     <title>Deployment using a raw disk image</title>
    </merge>
    <module renderas="section" resourceref="_concept-configure-ignition">
     <merge>
      <title>Configuring with &ignition;</title>
     </merge>
     <module renderas="section" resourceref="_task-convert-yaml-to-json"/>
     <module renderas="section" resourceref="_ref-ignition-configuration"/>
    </module>
    <module renderas="section" resourceref="_concept-configure-combustion">
     <merge>
      <title>Configuring with &combustion;</title>
     </merge>
     <module renderas="section" resourceref="_ref-combustion-configuration"/>
    </module>
   </module>
   <module renderas="section" resourceref="_task-alp-post-deployment-considerations"/>
   <module renderas="section" resourceref="_alp-deployment-more-info"/>
  </module>
  <module renderas="chapter" resourceref="_concept-transactional-update">
   <module renderas="section" resourceref="_concept-transactional-update-overlay">
    <merge>
     <abstract>
      <para/>
     </abstract>
    </merge>
   </module>
   <module renderas="section" resourceref="_concept-snapshot-excluded-directories"/>
   <module renderas="section" resourceref="_task-transactional-update-no-reboot">
    <merge>
     <title>Applying multiple changes without reboot</title>
     <abstract>
      <para/>
     </abstract>
    </merge>
   </module>
   <module renderas="section" resourceref="_ref-transactional-update-usage"/>
  </module>
  <module renderas="chapter" resourceref="_concept-containers-podman">
   <module renderas="section" resourceref="_task-enable-podman"/>
   <module renderas="section" resourceref="_task-podman-autostarting-containers">
    <merge>
     <title>Autostarting containers</title>
     <abstract>
      <para/>
     </abstract>
    </merge>
   </module>
   <module renderas="section" resourceref="_ref-podman-usage"/>
  </module>
  <module renderas="chapter" resourceref="_alp-workloads-intro">
   <module renderas="section" resourceref="_task-run-yast-with-podman"/>
   <module renderas="section" resourceref="_task-run-kvm-with-podman">
    <module renderas="section" resourceref="_ref-kvm-server-manage"/>
    <module renderas="section" resourceref="_task-run-kvm-client-with-podman"/>
   </module>
   <module renderas="section" resourceref="_task-run-cockpit-with-podman"/>
   <module renderas="section" resourceref="_task-run-gdm-with-podman"/>
   <module renderas="section" resourceref="_task-run-firewalld-with-podman"/>
   <module renderas="section" resourceref="_task-run-grafana-with-podman">
    <module renderas="section" resourceref="_ref-grafana-container-manage"/>
   </module>
   <module renderas="section" resourceref="_task-run-neuvector-with-podman"/>
   <module renderas="section" resourceref="_task-run-ansible-with-podman">
    <module renderas="section" resourceref="_ref-ansible-playbook-examples"/>
   </module>
   <module renderas="section" resourceref="_task-kea-dhcp-running-with-podman"/>
   <module renderas="section" resourceref="_alp-workloads-more-info"/>
  </module>
  <module renderas="chapter" resourceref="_concept-virt-scenario">
   <module renderas="section" resourceref="_task-virt-scenario-create-vm">
    <merge>
     <title>Creating VMs</title>
    </merge>
    <module renderas="section" resourceref="_ref-virt-scenario-commands">
     <merge>
      <title>Interactive commands</title>
      <abstract>
       <para>
        You can use the following commands when configuring a new VM using the
        &virt-scenario; interactive shell.
       </para>
      </abstract>
     </merge>
    </module>
   </module>
   <module renderas="section" resourceref="_ref-virt-scenarios">
    <merge>
     <title>Predefined scenarios</title>
     <abstract>
      <para>
       When creating a VM, you can specify one of the following scenarios:
      </para>
     </abstract>
    </merge>
   </module>
   <module renderas="section" resourceref="_ref-virt-scenario-manage-vm">
    <merge>
     <title>Managing VMs</title>
    </merge>
   </module>
  </module>
  <module renderas="chapter" resourceref="_concept-keylime">
   <module renderas="section" resourceref="_task-keylime-run-with-podman">
    <merge>
     <title>Setting up the verifier, registrar and tenant</title>
     <abstract>
      <para/>
     </abstract>
    </merge>
   </module>
   <module renderas="section" resourceref="_task-keylime-install-agent">
    <merge>
     <title>Installing the agent</title>
     <abstract>
      <para/>
     </abstract>
    </merge>
   </module>
   <module renderas="section" resourceref="_task-keylime-register-agent">
    <merge>
     <title>Registering the agent</title>
     <abstract>
      <para/>
     </abstract>
    </merge>
   </module>
   <module renderas="section" resourceref="_concept-keylime-payload">
    <merge>
     <title>Secure payloads</title>
     <abstract>
      <para/>
     </abstract>
    </merge>
   </module>
   <module renderas="section" resourceref="_task-keylime-enable-ima-tracking">
    <merge>
     <title>Enabling IMA tracking</title>
     <abstract>
      <para/>
     </abstract>
    </merge>
   </module>
   <module renderas="section" resourceref="_glue-keylime-more-info"/>
  </module>
<!-- systemd timers -->
  <module resourceref="_systemd-timer-concept" renderas="chapter">
   <merge>
    <title>Scheduling jobs using &systemd; timers</title>
   </merge>
   <module resourceref="_systemd-create-timer" renderas="section">
    <merge>
     <title>Creating a timer</title>
    </merge>
   </module>
   <module resourceref="_systemd-timer-manage" renderas="section">
    <merge>
     <title>Managing timers</title>
    </merge>
   </module>
   <module resourceref="_systemd-timer-types" renderas="section">
    <merge>
     <title>Timer types</title>
    </merge>
   </module>
   <module resourceref="_systemd-timer-test" renderas="section">
    <merge>
     <title>Testing calendar entries</title>
    </merge>
   </module>
   <module resourceref="_systemd-mailto" renderas="section">
    <merge>
     <title>Getting e-mail notifications when a timer fails</title>
     <abstract>
      <para>
       &systemd; does not offer a feature similar to cron's MAILTO. The
       procedure below describes a workaround to enable e-mail notifications
       when a timer fails.
      </para>

      <para>
       The procedure consists of the following steps:
      </para>
      <orderedlist>
       <listitem>
        <para>
         Create a script that sends an e-mail.
        </para>
       </listitem>
       <listitem>
        <para>
         Create a &systemd; service file running the e-mail script.
        </para>
       </listitem>
       <listitem>
        <para>
         Test the e-mail service file.
        </para>
       </listitem>
       <listitem>
        <para>
         From the service that the timer controls, call the created e-mail
         service file via <literal>OnFailure</literal>.
        </para>
       </listitem>
      </orderedlist>
     </abstract>
    </merge>
   </module>
   <module resourceref="_systemd-timer-user" renderas="section">
    <merge>
     <title>Using timers as a regular user</title>
    </merge>
   </module>
   <module resourceref="_systemd-timer-cron-migration" renderas="section">
    <merge>
     <title>Migrating from cron to &systemd; timers</title>
    </merge>
   </module>
   <module resourceref="_systemd-timer-troubleshoot" renderas="section">
    <merge>
     <title>Troubleshooting and FAQs</title>
    </merge>
   </module>
   <module resourceref="_systemd-timers-more-info" renderas="section">
    <merge>
     <title>For more information</title>
    </merge>
   </module>
  </module>
<!-- systemd timers -->
  <module resourceref="_legal" renderas="appendix"/>
  <module resourceref="_gfdl" renderas="appendix"/>
 </structure>
<!-- / S T R U C T U R E -->
</assembly>
