<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- This file originates from the project https://github.com/openSUSE/doc-kit -->
<!-- This file can be edited downstream. -->
<!DOCTYPE assembly
[
    <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<!-- refers to legacy doc: <add github link to legacy doc piece, if applicable> -->
<!-- point back to this document with a similar comment added to your legacy doc piece -->
<!-- refer to README.md for file and id naming conventions -->
<assembly version="5.2" xml:lang="en"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:trans="http://docbook.org/ns/transclusion"
          xmlns:its="http://www.w3.org/2005/11/its"
          xmlns="http://docbook.org/ns/docbook">
  <!-- resources section references all topic chunks used in the final article
    -->
  <!-- R E S O U R C E S -->
  <!-- Glue files -->
  <resources>
    <resource xml:id="_glue-example" href="../glues/glue.xml">
      <description>Glue example</description>
    </resource>
    <resource xml:id="_glue-more-info" href="../glues/glue-more-info.xml">
      <description>Glue for more information</description>
    </resource>
    <resource xml:id="_glue-whats-next" href="../glues/glue-whats-next.xml">
      <description>Glue what's next</description>
    </resource>
  </resources>
  <!-- Concept files -->docker-compose-tools
  <resources>
    <resource xml:id="_docker-compose-tools" href="../concepts/docker-compose-tools.xml">
      <description>Intro to tools</description>
    </resource>
    <resource xml:id="_docker-compose-podman-docker" href="../concepts/docker-compose-podman-docker.xml">
      <description>About <literal>podman-docker</literal></description>
    </resource>
    <resource xml:id="_docker-compose-about" href="../concepts/docker-compose-about.xml">
      <description>About &compose;</description>
    </resource>
    <resource xml:id="_podman-about" href="../concepts/podman-about.xml">
      <description>About &podman;</description>
    </resource>
    
  </resources>
  <!-- Tasks -->
  <resources>
    <resource xml:id="_docker-compose-podman-docker-installation" href="../tasks/docker-compose-podman-docker-installation.xml">
      <description>Installing podman-docker</description>
    </resource>
    <resource xml:id="_docker-compose-deploying-application" href="../tasks/docker-compose-deploying-application.xml">
      <description>Deploying a container-based application</description>
    </resource>
    <resource xml:id="_podman-installation" href="../tasks/podman-installation.xml">
      <description>Installing podman-docker</description>
    </resource>
    <resource xml:id="_docker-compose-creating-application" href="../tasks/docker-compose-creating-application.xml">
      <description>Creating containerized applications</description>
    </resource>
    <resource xml:id="_docker-compose-installing-compose" href="../tasks/docker-compose-installing-compose.xml">
      <description>Installing &compose;</description>
    </resource>
    </resources>
  <!-- References -->
  <resources>
    <resource xml:id="_docker-compose-yaml-reference" href="../references/docker-compose-yaml-reference.xml">
      <description>compose.yml</description>
    </resource>
    <resource xml:id="_docker-compose-management" href="../references/docker-compose-management.xml">
      <description>Stack management</description>
    </resource>
  </resources>
  <!-- Legal -->
  <resources>
    <resource href="../common/legal.xml" xml:id="_legal">
      <description>Legal Notice</description>
    </resource>
    <resource href="../common/license_gfdl1.2.xml" xml:id="_gfdl">
      <description>GNU Free Documentation License</description>
    </resource>
  </resources>
  <!-- S T R U C T U R E -->
  <structure renderas="article" xml:id="docker-compose" xml:lang="en">
    <merge>
      <title>Managing multi-container applications using <literal>&compose;</literal></title>
      
      <!-- Create revision history to enable versioning; add most recent entries at the top. -->
      <!-- Check https://documentation.suse.com/style/current/single-html/docu_styleguide/#sec-revhistory for detailed instructions-->
      <revhistory xml:id="rh-USE-ROOT-ID">
        <revision><date>2024-03-14</date>
          <revdescription>
            <itemizedlist>
              <!-- Group by type of change (added/removed/changed)-->
              <listitem><para>Initial version</para></listitem>
                
            </itemizedlist>
          </revdescription>
        </revision>
      </revhistory>
      <!-- TODO: provide a listing of possible and validatable meta entry values. Maybe in our geekodoc repo? -->
      <!-- add author's e-mail -->
      <meta name="maintainer" content="" its:translate="no"/>
      <!-- ISO date of last update as YYYY-MM-DD -->
      <meta name="updated" content="2037-11-16" its:translate="no"/>
      <!-- this does not work yet. Use the dm tags listed below for now
        <meta name="bugtracker" its:translate="no">
          <phrase role="url">https://bugzilla.suse.com/enter_bug.cgi</phrase>
          <phrase role="component">Non-product-specific documentation</phrase>
          <phrase role="product">Smart Docs</phrase>
          <phrase role="assignee">assignee@suse.com</phrase>
        </meta>
        -->
      <!-- not supported, yet. Use dm: tag for now
        <meta name="translation" its:translate="no">
        <phrase role="trans">yes</phrase>
        <phrase role="language">de-de,cs-cz</phrase>
        </meta>
        -->
      <!-- enter the platform identifier or a list of
        identifiers, separated by ; -->
      <!-- For a full list of meta tags and their values,
	   see https://confluence.suse.com/x/aQDWNg
      -->
      <meta name="architecture" content="x86;power" its:translate="no"/>
      <meta name="productname" its:translate="no">
        <!-- enter product name and version --><productname version="X.Y">&productname;</productname>
      </meta>
      <meta name="title" its:translate="yes">Docker-compose application stack</meta>
      <meta name="description" its:translate="yes">Overview of docker-compose and its role in
      creating container-based application steacks.</meta>
      <meta name="social-descr" its:translate="yes">Creating a container-based application stack.</meta>
      <!-- suitable category, comma-separated list of categories -->
      <meta name="category" content="Systems Management" its:translate="no"/>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:bugtracker>
          <dm:url>https://bugzilla.suse.com/enter_bug.cgi</dm:url>
          <dm:component>Smart Docs</dm:component>
          <dm:product>Documentation</dm:product>
          <!-- provide your BUGZILLA e-mail address, otherwise this does not work correctly-->
          <dm:assignee>jsindelarova@suse.com</dm:assignee>
       </dm:bugtracker>
        <dm:translation>yes</dm:translation>
      </dm:docmanager>
      <abstract>
      <variablelist>
        <varlistentry>
          <term>WHAT?</term>
          <listitem>
            <para>
              &compose; enables you to define and manage a multi-container application stack. The
              tool simplifies the deployment of such an application stack by using an easy-to-use
              definition file.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>WHY?</term>
          <listitem>
            <para>
              The article describes how to create a container-based application stack by using &compose;.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>EFFORT</term>
            <listitem>
              <para>
                It takes approx. 20 minutes to read the article.
              </para>
            </listitem>
        </varlistentry>
        <varlistentry>
          <term>GOAL</term>
            <listitem>
              <para>
                You will be able to create your own container-based application stack.
              </para>
            </listitem>
        </varlistentry>
        <varlistentry>
          <term>REQUIREMENTS</term>
            <listitem>              
                   <para>
                    Container images or its source files that are used to form the application.
                  </para>
              </listitem>
          </varlistentry>
        </variablelist>
      </abstract>
    </merge>
    <!-- pull in all the topic files you need -->
    <!-- pick the appropriate type of include to match your needs -->
    <!-- pull in a topic as is -->
    <module resourceref="_docker-compose-tools" renderas="section">
      <merge>
        <abstract>
          <para/>
        </abstract>
      </merge>
    <module resourceref="_podman-about" renderas="section">
      <merge>
        <abstract>
          <para/>
        </abstract>
      </merge>
      <module resourceref="_podman-installation" renderas="section">
      <merge>
        <abstract>
          <para/>
        </abstract>
      </merge>
      </module>
    </module>
    <!-- pull in a topic and switch the title -->
   
    <module resourceref="_docker-compose-podman-docker" renderas="section">
      <merge>
        <abstract>
          <para/>
        </abstract>
      </merge>
      <module resourceref="_docker-compose-podman-docker-installation" renderas="section">
      <merge>
        <abstract>
          <para/>
        </abstract>
      </merge>
      </module>
      </module>
      <module resourceref="_docker-compose-about" renderas="section">
        <merge>
          <abstract>
            <para/>
          </abstract>
        </merge>
        <module resourceref="_docker-compose-installing-compose" renderas="section">
          <merge>
            <abstract>
              <para/>
            </abstract>
          </merge>
          </module>
          </module>
          </module>
        <module resourceref="_docker-compose-creating-application" renderas="section">
          <merge>
            <abstract>
              <para/>
            </abstract>
          </merge>
          <module resourceref="_docker-compose-yaml-reference" renderas="section">
            <merge>
              <abstract>
                <para/>
              </abstract>
            </merge>
            </module>
            <module resourceref="_docker-compose-deploying-application" renderas="section">
              <merge>
                <abstract>
                  <para/>
                </abstract>
              </merge>
              </module>
        </module>
        <module resourceref="_docker-compose-management" renderas="section">
          <merge>
            <abstract>
              <para/>
            </abstract>
          </merge>
          </module>
      
    
    <module resourceref="_legal"/>
    <module resourceref="_gfdl">
      <output renderas="appendix"/>
    </module>
  </structure>
</assembly>
