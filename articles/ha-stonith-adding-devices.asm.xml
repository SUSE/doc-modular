<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- This file originates from the project https://github.com/openSUSE/doc-kit -->
<!-- This file can be edited downstream. -->
<!DOCTYPE assembly
[
    <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>

<!-- refers to legacy doc: https://github.com/SUSE/doc-sleha/blob/main/xml/ha_fencing.xml -->

<assembly version="5.2" xml:lang="en"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:trans="http://docbook.org/ns/transclusion"
          xmlns:its="http://www.w3.org/2005/11/its"
          xmlns:xi="http://www.w3.org/2001/XInclude"
          xmlns="http://docbook.org/ns/docbook">

  <!-- R E S O U R C E S -->
  <!-- Glue files
  <resources>
    <resource xml:id="_" href="../glues/.xml"/>
  </resources> -->
  <!-- Concept files
  <resources>
    <resource xml:id="_ha-stonith-what-is" href="../concepts/ha-stonith-what-is.xml"/>
  </resources> -->
  <!-- Tasks -->
  <resources>


    <resource xml:id="_ha-testing-cluster-failures" href="../tasks/ha-testing-cluster-failures.xml"/>
  </resources>
  <!-- References -->
  <resources>
    <resource xml:id="_ha-glossary" href="../references/ha-glossary.xml"/>
  </resources>
  <!-- Legal -->
  <resources>
    <resource href="../common/legal.xml" xml:id="_legal">
      <description>Legal Notice</description>
    </resource>
    <resource href="../common/license_gfdl1.2.xml" xml:id="_gfdl">
      <description>GNU Free Documentation License</description>
    </resource>
  </resources>
  <!-- S T R U C T U R E -->
  <structure renderas="article" xml:id="ha-stonith-adding-devices" xml:lang="en">
    <merge>
      <title>Adding &stonith; Devices to a &ha; Cluster</title>
      <revhistory xml:id="rh-ha-stonith-adding-devices">
        <revision><date>2025-11-04</date>
          <revdescription>
            <para>
              Initial version
            </para>
          </revdescription>
        </revision>
      </revhistory>
      <meta name="maintainer" content="tahlia.richardson@suse.com" its:translate="no"/>
      <meta name="architecture">
        <phrase>&x86-64;</phrase>
        <phrase>&power;</phrase>
        <phrase>&zseries;</phrase>
      </meta>
      <meta name="productname" its:translate="no">
        <productname version="16.0">&sleha;</productname>
      </meta>
      <meta name="title" its:translate="yes">Adding &stonith; Devices to a &ha; Cluster</meta>
      <meta name="description" its:translate="yes">How to add physical &stonith; devices to manage node fencing in a &sleha; cluster</meta>
      <meta name="social-descr" its:translate="yes">Add physical &stonith; devices to manage HA node fencing</meta>
      <meta name="category" its:translate="no">
        <phrase>Initial Configuration</phrase>
      </meta>
      <meta name="task" its:translate="no">
        <phrase>Administration</phrase>
        <phrase>Clustering</phrase>
        <phrase>Configuration</phrase>
        <phrase>High Availability</phrase>
      </meta>
      <meta name="series" its:translate="no">Products &amp; Solutions</meta>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:bugtracker>
          <dm:url>https://bugzilla.suse.com/enter_bug.cgi</dm:url>
          <dm:component>Documentation</dm:component>
          <dm:product>
            <dm:product condition="16.0">SUSE Linux Enterprise High Availability 16.0</dm:product>
          </dm:product>
          <dm:assignee>tahlia.richardson@suse.com</dm:assignee>
       </dm:bugtracker>
        <dm:translation>yes</dm:translation>
      </dm:docmanager>
      <abstract>
      <variablelist>
        <varlistentry>
          <term>WHAT?</term>
          <listitem>
            <para>
              How to add physical &stonith; devices to manage node fencing in a &sleha; cluster.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>WHY?</term>
          <listitem>
            <para>
              To be supported, all &sleha; clusters <emphasis>must</emphasis> have &stonith;
              (node fencing) configured.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>EFFORT</term>
            <listitem>
              <para>
                TODO
              </para>
            </listitem>
        </varlistentry>
        <varlistentry>
          <term>GOAL</term>
            <listitem>
              <para>
                Protect the cluster from data corruption by fencing failed nodes.
              </para>
            </listitem>
        </varlistentry>
        <varlistentry>
          <term>REQUIREMENTS</term>
            <listitem>
              <itemizedlist>
                <listitem>
                  <para>
                    An existing &sleha; cluster.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    A physical &stonith; device, such as a power switch or network switch.
                  </para>
                </listitem>
              </itemizedlist>
            </listitem>
          </varlistentry>
        </variablelist>
      </abstract>
    </merge>
    <!--module resourceref="_ha-stonith-what-is" renderas="section"/-->
    <!--module resourceref="_ha-stonith-creating-resource-with-crmsh?" renderas="section"/-->
    <!--module resourceref="_ha-stonith-configuring-kdump-resource?" renderas="section"/-->
    <module resourceref="_ha-testing-cluster-failures" renderas="section">
      <merge>
        <title>Testing node fencing</title>
        <abstract>
          <para>
            The <command>crm cluster crash_test</command> command simulates cluster failures and
            reports the results. To test node fencing, you can run one or both of the tests
            <option>--fence-node</option> and <option>--split-brain-iptables</option>.
          </para>
        </abstract>
      </merge>
    </module>
    <module resourceref="_legal"/>
    <module resourceref="_gfdl">
      <output renderas="appendix"/>
    </module>
    <module resourceref="_ha-glossary" renderas="glossary"/>
  </structure>
</assembly>
