<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- This file originates from the project https://github.com/openSUSE/doc-kit -->
<!-- This file can be edited downstream. -->
<!DOCTYPE assembly
[
    <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<!-- refers to legacy doc: <add github link to legacy doc piece, if applicable> -->
<!-- point back to this document with a similar comment added to your legacy doc piece -->
<!-- refer to README.md for file and id naming conventions -->
<assembly version="5.2" xml:lang="en"
          xmlns:xlink="http://www.w3.org/1999/xlink"
          xmlns:trans="http://docbook.org/ns/transclusion"
          xmlns:its="http://www.w3.org/2005/11/its"
          xmlns:xi="http://www.w3.org/2001/XInclude"
          xmlns="http://docbook.org/ns/docbook">
  <!-- resources section references all topic chunks used in the final article
    -->
  <!-- R E S O U R C E S -->
  <resources>
    <!-- Glue files -->
    <resource xml:id="_glue-zypper" href="../glues/zypper.xml">
      <description>Glue topic to introduce packages and zypper</description>
    </resource>
    <resource xml:id="_glue-zypper-more-info" href="../glues/zypper-more-info.xml">
      <description>Glue for more information</description>
    </resource>
    <resource xml:id="_glue-zypper-whats-next" href="../glues/zypper-whats-next.xml">
      <description>Glue what's next</description>
    </resource>
    <!-- Concept files -->
    <resource xml:id="_concept-packages" href="../concepts/packages.xml">
      <description>Packages concept</description>
    </resource>
    <resource xml:id="_concept-zypper" href="../concepts/zypper.xml">
      <description>&zypper; concept</description>
    </resource>
    <!-- Tasks -->
    <!-- none! -->
    <!-- References -->
    <resource xml:id="_reference-zypper-search" href="../references/zypper-search.xml">
      <description>Finding software to install</description>
    </resource>
    <resource xml:id="_reference-zypper-install" href="../references/zypper-install.xml">
      <description>&zypper; install reference</description>
    </resource>
    <resource xml:id="_reference-zypper-update" href="../references/zypper-update.xml">
      <description>&zypper; update/patch reference</description>
    </resource>
    <resource xml:id="_reference-zypper-remove" href="../references/zypper-remove.xml">
      <description>&zypper; remove reference</description>
    </resource>
    <resource xml:id="_reference-zypper-repos" href="../references/zypper-repos.xml">
      <description>&zypper; repository management reference</description>
    </resource>
    <!-- Legal -->
    <resource href="../common/legal.xml" xml:id="_legal">
      <description>Legal Notice</description>
    </resource>
    <resource href="../common/license_gfdl1.2.xml" xml:id="_gfdl">
      <description>GNU Free Documentation License</description>
    </resource>
  </resources>

  <!-- S T R U C T U R E -->
  <structure renderas="article" xml:id="zypper" xml:lang="en">
    <merge>
      <title>Managing software packages</title>
      <subtitle>with &zypper;</subtitle>
      <!-- Create revision history to enable versioning: adjust the placeholder revhistory ID,
           for each entry add the date of when the updated article will be published,
           list most recent date/entry at the top -->
      <!-- Check https://documentation.suse.com/style/current/single-html/docu_styleguide/#sec-revhistory for detailed instructions-->
      <revhistory xml:id="rh-zypper">
        <revision><date>2024-11-11</date>
          <revdescription>
            <!-- briefly sum up the major changes for the reader-->
            <para>
              Updated CONTENT, extended CONTENT, removed CONTENT
            </para>
          </revdescription>
        </revision>
        <revision><date>2024-10-10</date>
          <revdescription>
            <!-- briefly sum up the major changes for the reader-->
            <para>
              Updated CONTENT, extended CONTENT, removed CONTENT
            </para>
          </revdescription>
        </revision>
        <revision><date>2023-11-11</date>
          <revdescription>
            <para>
              Updated for the initial release of &productname; &productnumber;
            </para>
          </revdescription>
        </revision>
      </revhistory>
      <!-- TODO: provide a listing of possible and validatable meta entry values. Maybe in our geekodoc repo? -->
      <!-- add author's e-mail -->
      <meta name="maintainer" content="cwickert@suse.com" its:translate="no"/>
      <meta name="architecture">
        <phrase>&x86-64;</phrase>
        <phrase>&power;</phrase>
      </meta>
      <!-- enter one or more product names and version -->
      <meta name="productname" its:translate="no">
        <productname version="15-SP4">&sles;</productname>
        <productname version="15-SP5">&sles;</productname>
        <productname version="15-SP6">&sles;</productname>
      </meta>
      <!-- title for SEO and social media, max. 55 chars, keep in sync with article title -->
      <meta name="title" its:translate="yes">Managing software packages with &zypper;</meta>
      <!-- short description, max. 150 chars, no full stop: How to perform task xyz -->
      <meta name="description" its:translate="yes">How to manage software packages with &zypper;</meta>
      <!-- ultrashort description for social media, max. 55 chars, no full stop: Perform task xyz -->
      <meta name="social-descr" its:translate="yes">Manage software with &zypper;</meta>
      <!-- suitable categories has to be identical with the category selected in the docserv config -->
      <meta name="category" its:translate="no">
        <phrase>Systems Management</phrase>
      </meta>
      <!-- Determines "filter by task" filter value -->
      <!-- either add link to list or list of tasks-->
      <meta name="task" its:translate="no">
        <phrase>Configuration</phrase>
        <phrase>Installation</phrase>
      </meta>
      <meta name="series">Products &amp; Solutions</meta>
      <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
        <dm:bugtracker>
          <dm:url>https://bugzilla.suse.com/enter_bug.cgi</dm:url>
          <dm:component>Documentation</dm:component>
          <dm:product><!--Bugzilla product string--></dm:product>
          <!--
          if the assembly applies to multiple products/productversions, use profiling:
          <dm:product os="sles" condition="16.0">SUSE Linux Enterprise Server 16.0</dm:product>
          <dm:product os="sles" condition="16.1">SUSE Linux Enterprise Server 16.1</dm:product>
          -->
          <dm:assignee>cwickert@suse.com</dm:assignee>
          <!-- replace with your BUGZILLA e-mail address, otherwise this does not work-->
       </dm:bugtracker>
        <dm:translation>yes</dm:translation>
      </dm:docmanager>
      <abstract>
      <variablelist>
        <varlistentry>
          <term>WHAT?</term>
          <listitem>
            <para>
              This article explains how to use the &zypper; package manager
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>WHY?</term>
          <listitem>
            <para>
              State the reason why one should read this.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>EFFORT</term>
            <listitem>
              <para>
                &zypper; is straight forward. Understanding the basics only takes a few minutes of
                reading, 
                To unleash the full potential of &zypper;, 
                As &zypper; is very comperehensive, learning all options can be
              </para>
            </listitem>
        </varlistentry>
        <varlistentry>
          <term>GOAL</term>
            <listitem>
              <para>
                Learn how to manage software and repositories on &sle;.
              </para>
            </listitem>
        </varlistentry>
        <varlistentry>
          <term>REQUIREMENTS</term>
            <listitem>
              <itemizedlist>
                <listitem>
                  <para>
                    Your system is up and running.
                  </para>
                </listitem>
                <listitem>
                  <para>
                    A network connection to access the package repositories
                  </para>
                </listitem>
              </itemizedlist>
            </listitem>
          </varlistentry>
        </variablelist>
      </abstract>
    </merge>
    <!-- pull in all the topic files you need -->
    <!-- pick the appropriate type of include to match your needs -->
    <!-- pull in a topic as is -->
    <module resourceref="_glue-zypper" renderas="section"/>
    <!-- pull in a topic and switch the title -->
    <module resourceref="_concept-packages" renderas="section">
      <merge>
        <title>Introduction</title>
      </merge>
    </module>
    <module resourceref="_concept-zypper" renderas="section">
      <merge>
        <title>Concept</title>
      </merge>
    </module>
    <module resourceref="_reference-zypper-search" renderas="section">
      <merge>
        <title>Searching software packages</title>
      </merge>
    </module>
    <module resourceref="_reference-zypper-install" renderas="section">
      <merge>
        <title>Installing packages</title>
      </merge>
    </module>
    <module resourceref="_reference-zypper-update" renderas="section">
      <merge>
        <title>Updating packages</title>
      </merge>
    </module>
    <module resourceref="_reference-zypper-remove" renderas="section">
      <merge>
        <title>Removing packages</title>
      </merge>
    </module>
    <module resourceref="_reference-zypper-repos" renderas="section">
      <merge>
        <title>Managing package repositories</title>
      </merge>
    </module>
    <module resourceref="_glue-zypper-more-info" renderas="section"/>
    <module resourceref="_glue-zypper-whats-next" renderas="section"/>
    <module resourceref="_legal"/>
    <module resourceref="_gfdl">
      <output renderas="appendix"/>
    </module>
  </structure>
  <!-- TODO: second structure! -->
</assembly>
