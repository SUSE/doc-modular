<?xml version="1.0" encoding="UTF-8"?>
<!-- This file originates from the project https://github.com/openSUSE/doc-kit -->
<!-- This file can be edited downstream. -->
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<topic xml:id="nvidia-operator" role="concept" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>Introduction to the &nvoperator;</title>
    <meta name="maintainer" content="tbazant@suse.com" its:translate="no"/>
    <abstract>
      <para>
        This article explains the &nvoperator;. It outlines the &nvidia; GPU
        components it manages. It also summarizes the benefits of using it.
      </para>
    </abstract>
  </info>
  <section xml:id="what-is-nvidia-operator">
    <title>What is the &nvoperator;?</title>
    <para>
      The &nvoperator; is a &kube; operator. It simplifies management and
      deployment of &nvidia; GPUs. These resources are in a &kube; cluster. The
      operator automates configuration and monitoring of &nvidia; GPU drivers.
      It also manages associated components. These include CUDA, container
      runtimes, and other GPU-related software.
    </para>
  </section>
  <section xml:id="how-does-nvidia-operator-work">
    <title>How the &nvoperator; works</title>
    <para>
      The &nvoperator; follows this workflow:
    </para>
    <orderedlist>
      <listitem>
        <para>
          <emphasis role="bold">Operator deployment.</emphasis> You can deploy
          the &nvoperator; as a &helm; chart. You can also use &kube; manifests.
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis role="bold">Node labeling and GPU discovery.</emphasis> Once
          installed, the operator deploys the GPU Feature Discovery (GFD)
          daemon. GFD scans node hardware for &nvidia; GPUs. It labels nodes
          with GPU-specific information. This makes it easier for &kube; to
          schedule GPU workloads. Scheduling is based on available hardware.
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis role="bold">&nvidia; Container Toolkit
          configuration.</emphasis> The GPU operator installs and configures the
          &nvidia; Container Toolkit. The toolkit allows GPU-accelerated
          containers to run in &kube;.
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis role="bold">CUDA runtime and libraries.</emphasis> The
          operator ensures the CUDA toolkit is properly installed. This makes it
          easier for applications requiring CUDA to work. Applications work
          seamlessly without manual intervention.
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis role="bold">Validation and health monitoring.</emphasis>
          After setup, the operator monitors the health of GPU resources. It
          also exposes health metrics. Administrators can use these metrics for
          decision-making.
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis role="bold">Scheduling GPU workloads.</emphasis> Once
          configured, you can install workloads that require GPU acceleration.
          &kube; uses node labels and available GPU resources. This automates
          scheduling these jobs on GPU-enabled nodes.
        </para>
      </listitem>
    </orderedlist>
  </section>
  <section xml:id="nvidia-operator-benefits">
    <title>Benefits of the &nvoperator;</title>
    <para>
      Using the &nvoperator; has these key benefits:
    </para>
    <itemizedlist>
      <listitem>
        <para>
          <emphasis role="bold">Automated setup.</emphasis> No manual runtime
          configuration is needed.
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis role="bold">Cluster-wide management.</emphasis> It works
          across the entire &kube; cluster. It scales with node additions or
          removals.
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis role="bold">Simplified updates.</emphasis> It automates
          updates for GPU-related components.
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis role="bold">Optimized GPU usage.</emphasis> It ensures
          efficient allocation and use of GPU resources.
        </para>
      </listitem>
    </itemizedlist>
  </section>
</topic>
