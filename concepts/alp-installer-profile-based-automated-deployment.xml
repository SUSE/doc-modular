<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<topic xml:id="alp-installer-profile-based-automated-deployment"
 role="concept" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <meta name="maintainer" content="tbazant@suse.com" its:translate="no"/>
    <title>Profile-based automated deployment with the &alp-installer;</title>
    <abstract>
      <para>
        The default &productname; (&productnameshort;) installer
        &alp-installer; supports an unattended automated deployment. This
        article describes the profile-based type of an automated deployment.
      </para>
    </abstract>
  </info>
  <section xml:id="alp-installer-automated-deployment-profile">
    <title>Deployment profile</title>
    <para>
      A <emphasis>profile</emphasis> defines which options to use during the
      deployment process. For example, which product to install, localization
      settings, or partitioning layout. Profiles are written in
      <link xlink:href="https://jsonnet.org/">Jsonnet</link>. Jsonnet is a
      superset of JSON that provides additional features, such as creating
      dynamic and more concise profiles.
    </para>
    <example>
      <title>Example profile</title>
<screen>
{
  "localization": {
    "language": "en_US"
  },
  "software": {
    "product": "ALP-Bedrock"
  },
  "storage": {
    "devices": [
      {
        "name": "/dev/sda"
      }
    ]
  },
  "user": {
    "fullName": "Jane Doe",
    "password": "123456",
    "userName": "jane.doe"
  }
}
</screen>
    </example>
  </section>
  <section xml:id="alp-installer-automated-deployment-dynamic-profiles">
    <title>Dynamic profiles</title>
    <para>
      You can adapt the deployment profile at runtime depending on the system
      where the automated deployment is running. The &alp-installer; injects
      the hardware information to the profile to be processed using Jsonnet.
    </para>
    <para>
      The following example profile is adapted to install &productnameshort; on
      the biggest disk discovered. The hardware information provided by the
      <command>lshw</command> command is available as a
      <literal>hw.libsonnet</literal> JSON object.
    </para>
    <important>
      <para>
        Only the storage information is injected for now. You can inspect the
        available data by installing the <package>lshw</package> package and
        running the following command:
      </para>
<screen><command>lshw -json -class disk</command></screen>
    </important>
<screen>
local agama = import 'hw.libsonnet';
local findBiggestDisk(disks) =
  local sizedDisks = std.filter(function(d) std.objectHas(d, 'size'), disks);
  local sorted = std.sort(sizedDisks, function(x) x.size);
  sorted[0].logicalname;

{
  software: {
    product: 'ALP-Bedrock',
  },
  root: {
    password: 'nots3cr3t',
  },
  localization: {
    language: 'en_US',
  },
  storage: {
    devices: [
      {
        name: findBiggestDisk(agama.disks),
      },
    ],
  },
}
</screen>
  </section>
  <section xml:id="alp-installer-automated-deployment-validating-profiles">
    <title>Evaluating and validating profiles</title>
    <para>
      The &alp-installer; includes a command-line interface available from the
      <package>agama-cli</package> package. It handles multiple tasks, such as
      downloading, validating and evaluating profiles. For example, the
      following command checks the result of running the previous profile:
    </para>
<screen>&prompt.sudo;<command>agama profile evaluate example-profile.jsonnet</command></screen>
    <para>
      To validate a JSON profile, run the following command:
    </para>
<screen>&prompt.user;<command>agama profile validate my-profile.json</command></screen>
    <important>
      <para>
        You can only validate JSON profiles. Jsonnet profiles must be evaluated
        first.
      </para>
    </important>
  </section>
  <section xml:id="alp-installer-automated-deployment-generating-profiles">
    <title>Generating profiles</title>
    <para>
      Although writing deployment profiles manually in JSON format is easy, the
      &alp-installer; can export the current setup as a profile:
    </para>
    <procedure>
      <step>
        <para>
          Boot the &alp-installer; image.
        </para>
      </step>
      <step>
        <para>
          Configure all deployment options in the &alp-installer; user
          interface as described in
          <xref linkend="task-deploy-alp-installer"/>.
        </para>
      </step>
      <step>
        <para>
          Open the &alp-installer; built-in terminal and enter the following
          command to dump the current deployment profile:
        </para>
<screen>&prompt.sudo;<command>agama config show</command></screen>
      </step>
    </procedure>
  </section>
</topic>
