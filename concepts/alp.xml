<?xml version="1.0" encoding="UTF-8"?>
<!-- This file originates from the project https://github.com/openSUSE/doc-kit -->
<!-- This file can be edited downstream. -->
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook51-profile.xsl"
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE article
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<topic xml:id="concept-alp" xml:lang="en"
 role="concept"
 xmlns="http://docbook.org/ns/docbook" version="5.1"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink">
  <info>
    <meta name="maintainer" content="tbazant@suse.com" its:translate="no"/>
    <title>What is &productnameshort;?</title>
  </info>
  <para>
    &productnameshort; is a minimal operating system that allows customers to run containerized or
    virtualized workloads. Typically, &productnameshort; is deployed on cloud and virtual
    environments, and runs data center-oriented workloads. Bare metal installations are possible
    and follow the characteristics of &slema;. &productnameshort; is best described by the
    following characteristics:
  </para>
  <variablelist>
    <varlistentry>
      <term>Minimalistic</term>
      <listitem>
        <para>
          &productnameshort; provides the bare minimum to run workloads and services as containers
          or virtual machines. Its default software collection is carefully preselected to include
          only packages required to support its mission.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>Secure</term>
      <listitem>
        <para>
          &productnameshort; is an immutable operating system with a read-only file system. Changes
          to the file system are performed in transactions and can easily be rolled back. Moreover,
          the &selnx; access control makes it a truly secure platform.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>Container-ready</term>
      <listitem>
        <para>
          In &productnameshort;, containerized workloads replace traditional applications. They
          contain all software dependencies required to run a specific application or tool.
          &productnameshort; uses &podman; as the default container engine. &podman; makes it easy
          to find, run, build, share and deploy containerized workloads.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
        <term>Remote management</term>
        <listitem>
          <para>
            &productnameshort; is architected for remote management. It is ready to be integrated
            with the main remote management applications on the market, such as &suma;, &salt;,
            &ansible; or &ranchelemental;.
          </para>
        </listitem>
    </varlistentry>
  </variablelist>
</topic>
