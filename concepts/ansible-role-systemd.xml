<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<!-- refers to legacy doc: <add github link to legacy doc piece, if applicable> -->
<!-- point back to this document with a similar comment added to your legacy doc piece -->
<!-- refer to README.md for file and id naming conventions -->
<!-- metadata is dealt with on the assembly level -->
<topic xml:id="ansible-role-systemd"
 role="concept" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>About the systemd Linux system role</title>
    <meta name="maintainer" content="amrita.sakthivel@suse.com" its:translate="no"/>
    <abstract>
      <para>
       The systemd Linux system role in Ansible automates the full lifecycle management and deployment of &systemd; units and configurations &productname; 16.0 systems.
      </para>
    </abstract>
  </info>
  <para>You can use this role to:</para>
  <itemizedlist>
  <listitem><para>Place custom or templated &systemd; unit files such as <literal>.service</literal>, <literal>.timer</literal> etc. into the correct directories <filename>/etc/systemd/system/</filename>.</para></listitem>
  <listitem><para>Control the execution status of services, allowing you to easily start, stop, restart, or reload specific units.</para></listitem>
  <listitem><para>Control whether units are configured to start automatically at boot or are prevented from doing so.</para></listitem>
  <listitem><para>Use the most aggressive method to prevent a service from ever running or being manually started by setting the unit as <literal>masked</literal>.</para></listitem>
   </itemizedlist>
<example><title>Start and enable a systemd unit</title>
<screen>
---
- name: Deploy and start a systemd unit
  hosts: managed_nodes
  become: true

  tasks:
    - name: Manage a systemd unit
      vars:
        systemd_unit_file_templates:
          - test.service.j2
        systemd_started_units:
          - item: test.service
            user: root
          - item: test1.service
            user: user1
        systemd_enabled_units:
          - test.service
      ansible.builtin.include_role:
        name: suse.linux_system_roles.systemd
</screen>
  <itemizedlist>
   <listitem><para><literal>systemd_unit_file_templates</literal>: specifies a list of Jinja2 template file names residing on the control node that should be rendered and deployed as full &systemd; unit files on the managed nodes.
It is a list of strings or dictionaries. Each item specifies a Jinja2 template file located in the role's <filename>templates/</filename> directory. Default is an empty list <literal>[]</literal> or <literal>null</literal>.</para></listitem>
  <listitem><para><literal>systemd_started_units</literal>: specifies which &systemd; units should be set to the started state on the managed nodes.
    It is a list of strings or dictionaries. Default is an empty list <literal>[]</literal>.</para></listitem>
  <listitem><para><literal>systemd_enabled_units</literal>: specifies which &systemd; unit files should be enabled on the managed nodes, ensuring they start automatically at boot.
    It is a list of strings or dictionaries. Default is an empty list <literal>[]</literal>
  </para></listitem>
     </itemizedlist>
  </example>
<para>For more details about all the variables in the systemd Linux system role,
  refer to the specific <literal>README.md</literal> file on the control node:</para>
  <screen>/usr/share/ansible/collections/ansible_collections/suse/linux_system_roles/docs</screen>
</topic>