<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<!-- refers to legacy doc: <add github link to legacy doc piece, if applicable> -->
<!-- point back to this document with a similar comment added to your legacy doc piece -->
<!-- refer to README.md for file and id naming conventions -->
<!-- metadata is dealt with on the assembly level -->
<topic xml:id="concept-cockpit-authentication"
 role="concept" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>Accessing &cockpit;</title>
    <meta name="maintainer" content="jsindelarova@suse.com" its:translate="no"/>
    <abstract>
      <para>
        The topic covers the HTTP/HTTPS connections, certificates, primary and secondary servers.
      </para>
    </abstract>
  </info> 
    
  <para>
    &cockpit; enables you to log in directly to each machine that can expose the
    9090 port. This machine is sometimes referred to as the primary server. It
    is the primary server that runs the <literal>cockpit-ws</literal> through
    which connections to additional servers are established. By default, &cockpit; listens for both
    HTTP and HTTPS connections. However, most of the HTTP connections are redirected to HTTPS,
    with exceptions like local host access.
  </para>
  <para>
    If the port cannot be accessed on the particular machine, you can still use
    &cockpit; to administer the machine by using it as a secondary server. For a
    procedure of adding a server as secondary, refer to
    <xref linkend="cockpit-logging-adding-secondary"/>.
  </para>
  <note>
    <title>A limited number of secondary servers</title>
    <para>
      The number of secondary servers that you can administer from one primary
      server is limited to 20. If you need to administer more servers, add
      other primary servers or use another tool for cluster administration.
    </para>
  </note>
  <section xml:id="cockpit-authentication-certificates">
    <title>TLS certificates</title>
    <para>
      By default, &cockpit; loads <filename>.cert</filename> or <filename>.crt</filename> certificates from the directory
      <filename>/etc/cockpit/ws-certs.d</filename>. The corresponding private key must be a
      separate file with the
      same file name but with the <filename>.key</filename> suffix. Make sure the key is not encrypted.
    </para>
    <para>
      If no certificate is found in the directory, &cockpit; generates a self-signed 
      certificate (<filename>0-self-signed.cert</filename>) to establish a secure 
      connection.
    </para>
    <para>
      To check which certificate &cockpit; uses, run the command:
    </para>
    <screen>&prompt.sudo;/usr/libexec/cockpit-certificate-ensure --check</screen>
  </section>
  <section xml:id="cockpit-authentication-users">
    <title>Authentication</title>
    <para>
      You do not need separate credentials to log in to &cockpit;. Use
      the same credentials that you use to log in to &productname;. However, 
      login using &rootuser; is not allowed, so make sure to create a non-privileged 
      user. 
    </para>
    <para>
      Non-privileged users log in to &cockpit; with limited access. To perform
      administrative tasks, click <guimenu>Limited access</guimenu> in the 
      top-right menu and unlock the administrative mode by entering 
      &rootuser; password.
    </para>
  </section>
</topic>
