<?xml version="1.0" encoding="UTF-8"?>
<!-- This file originates from the project https://github.com/openSUSE/doc-kit -->
<!-- This file can be edited downstream. -->
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook51-profile.xsl"
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE article
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<topic xml:id="deployment-configuring-with-combustion" xml:lang="en"
 role="concept"
 xmlns="http://docbook.org/ns/docbook" version="5.1"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink">
  <info>
    <meta name="maintainer" content="tbazant@suse.com" its:translate="no"/>
    <title>Configuring &productnameshort; deployment with &combustion;</title>
    <abstract>
      <para>
        &combustion; is a dracut module that enables you to configure your
        system on the first boot. You can use &combustion;, for example, to
        change the default partitions, set user passwords, create files, or
        install packages.
      </para>
    </abstract>
  </info>
  <section xml:id="how-it-works-combustion">
    <title>How does &combustion; work?</title>
    <para>
      &combustion; is invoked after the <literal>ignition.firstboot</literal>
      argument is passed to the kernel command line. &combustion; reads a
      provided file named <filename>script</filename>, executes included
      commands, and thus performs changes to the file system. If
      <filename>script</filename> includes the network flag, &combustion; tries
      to configure the network. After <literal>/sysroot</literal> is mounted,
      &combustion; tries to activate all mount points in
      <filename>/etc/fstab</filename> and then calls
      <command>transactional-update</command> to apply other changes, for
      example, setting &rootuser; password or installing packages.
    </para>
   <para condition="pxe-boot">
    The configuration script must reside on the TFTP server and during the boot, its URL must be
    provided to the kernel using the <literal>combustion.url</literal> parameter. For details,
    refer to <xref linkend="pxe-boot-prepare-tftp"/>.
   </para>
      <para condition="deployment-bare-metal">
        The configuration file <filename>script</filename> must reside in the
        <filename>combustion</filename> subdirectory on the configuration media labeled
        <literal>combustion</literal>. The directory structure must look as follows:
      </para>
<screen condition="deployment-bare-metal">
&lt;root directory&gt;
└── combustion
    └── script
    └── other files
</screen>
    
<para condition="deployment-virtual-machine">
  If you intend to configure a QEMU/KVM virtual machine, provide the path
  to <filename>script</filename> as an attribute of the
  <command>qemu</command> command. For example:
</para>

<screen condition="deployment-virtual-machine">
-fw_cfg name=opt/org.opensuse.combustion/script,file=<replaceable>PATH_TO_script</replaceable>
</screen>

<para condition="deployment-virtual-machine">
  When configuring a virtual machine with &vmm; (&libvirt;),
  provide the path to the <filename>script</filename> file in its XML
  definition, for example:
</para>
<screen condition="deployment-virtual-machine">
&lt;domain ... >
&lt;sysinfo type="fwcfg">
&lt;entry name="opt/org.opensuse.combustion/script" file="/location/of/script"/>
&lt;/sysinfo>
&lt;/domain>
</screen>
<para condition="deployment-virtual-machine">
Alternatively, when using &libvirt;, you can provide the path as an option to the <command>virt-install</command> command:
</para>
<screen condition="deployment-virtual-machine">--sysinfo type=fwcfg,entry0.name="opt/org.opensuse.combustion/script",entry0.file="<replaceable>PATH_TO_script</replaceable>>" </screen>
      <tip>
        <title>Using &combustion; together with &ignition;</title>
        <para>
          &combustion; can be used along with &ignition;. If you intend to do
          so, label your configuration medium <literal>ignition</literal> and
          include the <filename>ignition</filename> directory with the
          <filename>config.ign</filename> to your directory structure as shown
          below:
        </para>
<screen>
&lt;root directory&gt;
└── combustion
    └── script
    └── other files
└── ignition
    └── config.ign
</screen>
        <para>
          In this scenario, &ignition; runs before &combustion;.
        </para>
      </tip>
    
  </section>
</topic>
