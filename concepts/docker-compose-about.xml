<?xml version="1.0" encoding="UTF-8"?>
<!-- This file originates from the project https://github.com/openSUSE/doc-kit -->
<!-- This file can be edited downstream. -->
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<!-- refers to legacy doc: <add github link to legacy doc piece, if applicable> -->
<!-- point back to this document with a similar comment added to your legacy doc piece -->
<!-- refer to README.md for file and id naming conventions -->
<!-- metadata is dealt with on the assembly level -->
<topic xml:id="compose-about"
 role="concept" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>About &compose;</title><!-- can be changed via merge in the assembly -->
    <!--add author's email address-->
    <meta name="maintainer" content="jsindelarova@suse.com" its:translate="no"/>
    <abstract><!-- can be changed via merge in the assembly -->
      <para>
       The topic describes basics of the &compose; tool.
      </para>
    </abstract>
  </info>
     <para>
      &compose; is a tool for managing multi-container applications. &compose; enables you to
      have multiple isolated environment on a single host, while it supports using variables
      between environments. Using &compose; you can recreate only those containers that have
      changed without destroyng the whole application stack.
    </para>
    <important>
      <title><command>docker</command> replaced with the <command>podman</command> command</title>
    <para>
      On &productnameshort; the <literal>podman-docker</literal> script is used to call
      &podman; whenever you run &compose;, as &docker; is not present on &productnameshort;.
    </para>
  </important>
    
</topic>
