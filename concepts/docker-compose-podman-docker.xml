<?xml version="1.0" encoding="UTF-8"?>
<!-- This file originates from the project https://github.com/openSUSE/doc-kit -->
<!-- This file can be edited downstream. -->
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<!-- refers to legacy doc: <add github link to legacy doc piece, if applicable> -->
<!-- point back to this document with a similar comment added to your legacy doc piece -->
<!-- refer to README.md for file and id naming conventions -->
<!-- metadata is dealt with on the assembly level -->
<topic xml:id="compose-podman-docker"
 role="concept" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>About <literal>podman-docker</literal></title><!-- can be changed via merge in the assembly -->
    <!--add author's email address-->
    <meta name="maintainer" content="jsindelarova@suse.com" its:translate="no"/>
    <abstract><!-- can be changed via merge in the assembly -->
      <para>
       The topic covers the purpose of the podmna-docker tool.
      </para>
    </abstract>
  </info>
  <para>
    As &productnameshort; uses &podman; to manage containers, you may face a problem if your
    scripts use &docker;. To avoid  changing your &docker; scripts, you can use
    <literal>podman-docker</literal>. 
   </para>
  <para>
    <literal>podman-docker</literal> is a bash script that changes any <command>docker</command>
    command you run into a corresponding <command>podman</command> command with the same passed
    arguments.Therefore, you can use all your &docker; scripts without any modifications.
  </para>
</topic>
