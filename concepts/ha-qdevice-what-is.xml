<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>

<!-- refers to legacy doc: https://github.com/SUSE/doc-sleha/blob/main/xml/ha_qdevice-qnetd.xml -->

<topic xml:id="ha-qdevice-what-is"
 role="concept" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>What is &qdevice;?</title>
    <meta name="maintainer" content="tahlia.richardson@suse.com" its:translate="no"/>
    <abstract>
    <para>
      When communication fails between one or more nodes and the rest of the cluster (a split-brain
      scenario), a cluster partition occurs. The nodes can only communicate with other nodes in the
      same partition and are unaware of the separated nodes. A cluster partition has
      <emphasis>quorum</emphasis> (or is <quote>quorate</quote>) if it has the majority of nodes
      (or <quote>votes</quote>). This is determined by <emphasis>quorum calculation</emphasis>.
      Quorum must be calculated so the non-quorate nodes can be fenced.
    </para>
    <para>
      &qdevice; and &qnet; participate in quorum calculations. &qdevice; runs on each cluster node
      and communicates with an arbitrator, &qnet;, to provide a configurable number of votes to the
      cluster. This allows the cluster to sustain more node failures than the standard quorum rules
      allow. We recommend using &qdevice; in clusters with an even number of nodes, and especially
      in two-node clusters.
      </para>
    </abstract>
  </info>
  <section xml:id="ha-qdevice-what-is-benefits">
    <title>Benefits</title>
    <para>
      Configuring a cluster to use &qdevice; and &qnet; has the following benefits:
    </para>
    <itemizedlist>
      <listitem>
        <para>
          Clusters with an even number of nodes can make quorum calculations more easily.
        </para>
      </listitem>
      <listitem>
        <para>
          The cluster can sustain more node failures than the standard quorum rules allow.
        </para>
      </listitem>
      <listitem>
        <para>
          Two-node clusters can use diskless &sbd; if &qdevice; is also configured.
        </para>
      </listitem>
      <listitem>
        <para>
          A &qnet; server can provide votes for multiple clusters.
        </para>
      </listitem>
      <listitem>
        <para>
          You can write your own heuristics scripts to affect votes. This is especially useful for
          complex setups.
        </para>
      </listitem>
    </itemizedlist>
  </section>
  <section xml:id="ha-qdevice-what-is-components">
    <title>Components</title>
    <para>
      A &qdevice; setup consists of the following components and mechanisms:
    </para>
    <variablelist>
      <varlistentry>
        <term>&qdevice; (<systemitem>corosync-qdevice</systemitem>)</term>
        <listitem>
          <para>
            A systemd service (a daemon) on each cluster node running together with &corosync;. This is the client of <systemitem>corosync-qnetd</systemitem>. Its primary use is to allow a cluster to sustain more node failures than standard quorum rules allow.
          </para>
          <para>
            &qdevice; is designed to work with different arbitrators. However, currently, only &qnet; is supported.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>&qnet; (<systemitem>corosync-qnetd</systemitem>)</term>
        <listitem>
          <para>
          A systemd service (a daemon, the <quote>&qnet; server</quote>) which is not part of the cluster. The systemd service provides a vote to the <systemitem>corosync-qdevice</systemitem> daemon.
          </para>
          <para>
            By default, the <systemitem>corosync-qnetd</systemitem> service runs the daemon as the user <systemitem>coroqnetd</systemitem> in the group <systemitem>coroqnetd</systemitem>. This avoids running the daemon as &rootuser;.
          </para>
          <para>
            To improve security, <systemitem>corosync-qnetd</systemitem> can work with TLS for client certificate checking.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Algorithms</term>
        <listitem>
          <para>
            &qdevice; supports different algorithms, which determine the behavior of how votes are assigned. FFSplit (<quote>fifty-fifty split</quote>) or LMS (<quote>last man standing</quote>).
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Tiebreaker</term>
        <listitem>
          <para>
            This is used as a fallback if the cluster partitions are equal even with the same heuristics results. It can be configured to be the lowest node ID, the highest node ID, or a specific node ID.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Heuristics</term>
        <listitem>
          <para>
            &qdevice; supports a set of commands (<quote>heuristics</quote>). The commands are executed locally on start-up of cluster services, cluster membership change, successful connection to <systemitem>corosync-qnetd</systemitem>, or, optionally, at regular times. The heuristics can be set with the <parameter>quorum.device.heuristics</parameter> key (in the <filename>corosync.conf</filename> file) or with the <option>--qdevice-heuristics-mode</option> option. Both know the values <literal>off</literal> (default), <literal>sync</literal>, and <literal>on</literal>. The difference between <literal>sync</literal> and <literal>on</literal> is that you can additionally execute the above commands regularly.
          </para>
          <para>
            Only if all commands are executed successfully are the heuristics considered to have passed; otherwise, they failed. The heuristics' result is sent to <systemitem>corosync-qnetd</systemitem> where it is used in calculations to determine which partition should be quorate.
          </para>
        </listitem>
      </varlistentry>
    </variablelist>
  </section>
  <section xml:id="ha-qdevice-what-is-more-info">
    <title>For more information</title>
    <para>
      For more information about &qdevice; and &qnet;, see the man pages
      <literal>corosync-qdevice</literal> and <literal>corosync-qnetd</literal>.
    </para>
  </section>
</topic>
