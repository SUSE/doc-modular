<?xml version="1.0" encoding="UTF-8"?>
<!-- This file originates from the project https://github.com/openSUSE/doc-kit -->
<!-- This file can be edited downstream. -->
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<!-- refers to legacy doc: <add github link to legacy doc piece, if applicable> -->
<!-- point back to this document with a similar comment added to your legacy doc piece -->
<!-- refer to README.md for file and id naming conventions -->
<!-- metadata is dealt with on the assembly level -->
<topic xml:id="kernel-boot-parameters-modify-difference-linuxrc-parameters"
 role="concept" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>Difference between kernel boot parameters and linuxrc parameters</title>
    <!-- can be changed via merge in the assembly -->
    <!--add author's email address-->
    <meta name="maintainer" content="ssarkar@suse.com" its:translate="no"/>
    <abstract>
      <!-- can be changed via merge in the assembly -->
      <para>
        Kernel boot parameters and linuxrc parameters are often similar in appearance, but
        conceptually they are entirely different. It is important that you do not confuse them and
        understand their basic difference.
      </para>
    </abstract>
  </info>
  <section xml:id="kernel-boot-parameters-modify-linuxrc-parameter-introduction">
    <title>What are linuxrc parameters and why are they different from kernel boot parameters?</title>
    <para>
      In &sle;, the <literal>linuxrc</literal> script is executed during the boot process before
      the system's root file system is mounted. It acts as the initial RAM disk (initrd) entry
      point and sets up the environment needed for the kernel to load the root file system.
      <literal>linuxrc</literal> parameters are used to pass configurations that affect this early
      stage of the boot process, such as driver loading, debugging options, or hardware
      initialization.
    </para>
    <para>
      In contrast, kernel boot parameters are passed to the kernel by the boot loader (such as
      &grub;) after the initial RAM disk has handed control to the kernel. The kernel boot
      parameters directly influence how the kernel operates and manages system features such as
      power management, debugging and hardware interaction after the root file system is mounted.
    </para>
    <para>
      The distinction is critical because <literal>linuxrc</literal> parameters are used to
      configure the environment before the kernel fully initializes, whereas kernel boot parameters
      control the behavior of the kernel after this point. Misinterpreting or interchanging the two
      can lead to improper configurations and boot failures.
    </para>
    <para>
      To learn more about the <literal>linuxrc</literal> parameters and their usage, refer to
      <link xlink:href="https://documentation.suse.com/sles/html/SLES-all/appendix-linuxrc.html"></link>.
    </para>
  </section>
  <section xml:id="kernel-boot-parameters-modify-linuxrc-parameter-examples">
    <title>Examples of linuxrc parameters</title>
    <para>
      The following examples highlight common <literal>linuxrc</literal> parameters and their use
      cases to configure the environment before the kernel initializes:
    </para>
    <itemizedlist>
      <listitem>
        <para>
          <literal>rd.driver.blacklist=</literal>: Specifies drivers to be blocked in the initrd.
          For example, <literal>rd.driver.blacklist=nouveau</literal> prevents the
          <literal>nouveau</literal> graphics driver from loading during the early stages of boot.
          This can be useful when troubleshooting driver-related boot issues.
        </para>
      </listitem>
      <listitem>
        <para>
          <literal>rd.break</literal>: Interrupts the boot process and drops the system to a shell
          within the initrd for debugging purposes. This parameter is helpful for diagnosing issues
          related to the early boot process, such as driver loading or file system mounting errors.
        </para>
      </listitem>
      <listitem>
        <para>
          <literal>rd.retry=</literal>: Specifies the number of retries for device scanning in the
          initrd. For example, <literal>rd.retry=3</literal> configures the system to retry
          scanning devices three times before giving up, which can be critical for resolving
          transient hardware initialization issues.
        </para>
      </listitem>
      <listitem>
        <para>
          <literal>rd.luks=1</literal>: Enables support for encrypted devices in the initrd. This
          parameter is essential for systems that use encrypted root file systems, ensuring that
          decryption takes place during the initial boot stage.
        </para>
      </listitem>
    </itemizedlist>
    <para>
      By contrast, equivalent kernel boot parameters such as <parameter>quiet</parameter> or
      <parameter>nomodeset</parameter> are not used in the initrd phase but take effect after the
      kernel is fully initialized. This reinforces the need to distinguish between these two types
      of parameters.
    </para>
  </section>
</topic>
