<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<topic xml:id="keylime-remote-attestation"
 role="concept" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>Remote attestation using &keylime;</title>
    <meta name="maintainer" content="tbazant@suse.com" its:translate="no"/>
    <abstract>
      <para>
        With the growing demand on securing devices against unauthorized
        changes, the use of the security mechanism called <emphasis>remote
        attestation (RA)</emphasis> has been experiencing significant growth.
        Using RA, a host (client) can authenticate its boot chain status and
        running software on a remote host (verifier). RA is often combined with
        public-key encryption (using TPM2), thus the sent information can only
        be read by the services that requested the attestation, and the
        validity of the data can be verified.
      </para>

      <para>
        Remote attestation on &productnameshort; is implemented by
        <emphasis>&keylime;</emphasis>.
      </para>
    </abstract>
  </info>
  <section xml:id="keylime-terminology">
    <title>Terminology</title>
    <para>
      Remote attestation technology uses the following terms:
    </para>
    <variablelist>
      <varlistentry>
        <term>Attestation key (AK)</term>
        <listitem>
          <para>
            A data signing key that proves that the data comes from a real TPM
            and has not been tampered with.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Core root of trust for measurement</term>
        <listitem>
          <para>
            Calculates its own hash and the hash of the next step in the boot process, initiating the chain of measurements.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Endorsement key (EK)</term>
        <listitem>
          <para>
            An encryption key that is permanently embedded in the TPM when it
            is manufactured. The public part of the key and the certification
            stored in the TPM are used to recognize a genuine TPM.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Integrity management architecture (IMA)</term>
        <listitem>
          <para>
            A kernel integrity subsystem that provides a means of detecting
            malicious changes to files.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Measured boot</term>
        <listitem>
          <para>
            A method with which each component in the booting sequence
            calculates a hash of the next one before delegating the execution
            of the next component. The hash extends one or several PCRs of the
            TPM. An event is created with the information about where the
            measurement took place and what was measured. Such events are
            collected in an event log, and, along with the extended PCR values,
            the events can be compared with the expected values representing a
            healthy system.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Platform Configuration Register (PCR)</term>
        <listitem>
          <para>
            A memory location in TPM that, for example, stores hashes of
            booting layers. PCR can be updated only by using the non-reversible
            operation&mdash;<literal>extend</literal>. A signed list of current
            PCR values can be obtained by the <command>quote</command> command
            on TPM, and this quote can be verified by a third party during the
            attestation process.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Secure boot</term>
        <listitem>
          <para>
            Each step of the booting process checks a cryptographic signature
            on the executable of the next step before launching it.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Trusted Platform Module (TPM)</term>
        <listitem>
          <para>
            A self-contained security cryptographic processor present in the
            system as hardware or implemented in the firmware that serves as a
            root of trust. TPM provides a PCR for storing the hashes of booting
            layers. A typical TPM provides several functions, like a random
            number generator, counters or a local clock. It also stores 24 PCRs
            grouped by banks per each supported cryptographic hash function
            (SHA1, SHA256, SHA384 or SHA512).
          </para>
          <note>
            <para>
              By default, TPM usage is disabled. Therefore, the measured boot
              does not take place. To enable the remote attestation, enable TPM
              in the EFI/BIOS menu.
            </para>
          </note>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Secure payload</term>
        <listitem>
          <para>
            A mechanism to deliver encrypted data to healthy agents. Payloads
            are used to provide keys, passwords, certificates, configurations
            or scripts that are further used by the agent.
          </para>
        </listitem>
      </varlistentry>
    </variablelist>
  </section>
  <section xml:id="keylime-what-is">
    <title>What is &keylime;?</title>
    <para>
      &keylime; is a remote attestation solution that enables you to monitor
      the health of remote nodes using a TPM as a root of trust for
      measurement. With &keylime;, you can perform multiple tasks, for example:
    </para>
    <itemizedlist>
      <listitem>
        <para>
          Validate of the PCRs extended during the measured boot.
        </para>
      </listitem>
      <listitem>
        <para>
          Create analysis and make assertions of the event log.
        </para>
      </listitem>
      <listitem>
        <para>
          Make assertion of the value of any PCR in the remote system.
        </para>
      </listitem>
      <listitem>
        <para>
          Monitor the validity of open or executed files.
        </para>
      </listitem>
      <listitem>
        <para>
          Deliver encrypted data to verified nodes via <emphasis>secure
          payloads</emphasis>.
        </para>
      </listitem>
      <listitem>
        <para>
          Execute custom scripts that are triggered when a machine fails the
          attested measurements.
        </para>
      </listitem>
    </itemizedlist>
  </section>
  <section xml:id="keylime-architecture">
    <title>Architecture</title>
    <para>
      &keylime; consists of an agent, a verifier, a registrar, and a
      command-line tool (tenant). Agents are on those systems that need to be
      attested. The verifier and registrar are on remote systems that perform
      the registration and attestation of agents. Keep in mind that only the
      agent role is available on &productnameshort;. For details about each
      component, refer to the following sections.
    </para>
    <section xml:id="keylime-agent">
      <title>&keylime; agent</title>
      <para>
        The agent is a service that runs on the system that needs to be
        attested. The agent sends the event log, IMA hashes, and information
        about the measured boot to the verifier, using the local TPM as a
        certifier of the data validity.
      </para>
      <para>
        When a new agent is started, it needs to register itself in the
        registrar first. To do so, the agent needs a TLS certificate to
        establish the connection. The TLS certificate is generated by the
        registrar, but it needs to be installed manually to the agent. After
        the registration, the agent sends its attestation key and the public
        part of the endorsement key to the registrar. The registrar responds to
        the agent with a challenge in a process called credential activation,
        which validates the TPM of the agent. Once the agent has been
        registered, it is ready to be enrolled for attestation.
      </para>
    </section>
    <section xml:id="keylime-registrar">
      <title>&keylime; registrar</title>
      <para>
        The registrar is used to register agents that should be attested. The
        registrar collects the agent's attestation key, the public part of the
        endorsement key and the endorsement key certification, and verifies
        that the agent attestation key belongs to the endorsement key.
      </para>
    </section>
    <section xml:id="sec-keylime-verifier">
      <title>&keylime; verifier</title>
      <para>
        The verifier performs the actual attestation of agents and continuously
        pulls the required attestation data from agents (amongst others, the
        PCR values, IMA logs, and UEFI event logs).
      </para>
    </section>
  </section>
</topic>
