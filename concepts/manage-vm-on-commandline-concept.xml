<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
[
<!ENTITY % entities SYSTEM "../common/generic-entities.ent">
%entities;
]>
<!-- refers to https://github.com/SUSE/doc-sle/blob/main/xml/systemd.xml [sec-boot-systemd-timer-units] -->
<topic xml:id="manage-vm-on-commandline-concept"
       role="concept" xml:lang="en"
       xmlns="http://docbook.org/ns/docbook" version="5.2"
       xmlns:its="http://www.w3.org/2005/11/its"
       xmlns:xi="http://www.w3.org/2001/XInclude"
       xmlns:xlink="http://www.w3.org/1999/xlink"
       xmlns:trans="http://docbook.org/ns/transclusion">
<info><title>What is &libvirt;?</title>
  <meta name="maintainer" content="shalaka.harne@suse.com" its:translate="no"/>
  <abstract>
    <para>&libvirt; is a collection of software that provides a common API (Application Programming Interface) for managing popular virtualization solutions, for example, &kvm;, &qemu;, &xen;, Virtuozzo, &esx;, and so on. &libvirt; consists of an API library, a system service <command>virtnodedevd</command>, and a command-line utility <emphasis>virsh</emphasis>.</para>
  </abstract>
  </info> 
  <para>The modular architecture of &libvirt; allows developers to extend the functionality. Using &libvirt;, live migration of virtual machines between physical hosts is possible without downtime, and this facilitates load balancing and maintenance.</para>
<para>&libvirt; allows remote management of virtual machines and host resources for multiple VM hosts and is a single tool for different hypervisors. &libvirt; has a graphical user interface and a command line for writing XML configurations. </para>
<para>The &libvirt; versions since <literal>v6 series</literal> use a modular daemon architecture:</para>
<itemizedlist>
<listitem><para><command>virtqemud</command> manages QUEMU/KVM VMs</para></listitem>
<listitem><para><command>virtnetworkd</command> manages virtual networks</para></listitem>
<listitem><para><command>virtstoraged</command> manages storage pools/volumes</para></listitem>
<listitem><para><command>virtnodedevd</command> manages manages host devices</para></listitem>
<listitem><para><command>virtproxyd</command> manages remote connections</para></listitem>
</itemizedlist>

      <section><title>How does &libvirt; work?</title>
       <info><abstract>
        <para>The modular daemon <command>virtnodedevd</command> service runs on the VM host. The &libvirt; client libraries and utilities connect to <command>virtnodedevd</command> and collect configuration information and resources of the host servers.</para></abstract></info>
        <para>The configuration of each virtual machine is stored in an XML file, and you can manage this configuration in different ways. </para>
        <para>You can configure virtual machines managed by &libvirt; using a command line or using &vmm;. Interoperability between &libvirt; and &libvirt;-based applications is tested and is an essential part of SUSE's support stance.</para> 
        <para>&libvirt; tools are designed to work with the &libvirt; API and support virtualization technologies and hypervisors. You can use the &libvirt;-based tools for managing &vmguest;s. Commonly used tools for &libvirt; are <emphasis>virsh</emphasis>, <emphasis>virt-manager</emphasis>, <emphasis>virt-install</emphasis>, <emphasis>virt-clone</emphasis>, <emphasis>virt-image</emphasis>, and so on. &libvirt; supports using graphical user interface and commands to write XML configurations.</para>
          <para> For example, you can use <emphasis>virsh</emphasis> to configure virtual machines (VM) on the command line as an alternative to using the graphical &vmm;. You can also manage virtual disks using this tool.</para>
          <figure xml:id="libvirt-overview"><title>libvirt Overview</title>
            <mediaobject>
              <imageobject role="fo">
                <imagedata fileref="libvirt_overview.png" width="85%"/>
              </imageobject>
              <imageobject role="html">
                <imagedata fileref="libvirt_overview.png" width="85%"/>
              </imageobject>
            </mediaobject></figure>
            <para>The management of virtual machines on the command line provides more control over the host machines than using the graphical interface applications as it allows scripting and automation.</para>
      </section> 

      <section><title>Benefits of using &libvirt;</title>
        <info><abstract><para>The major advantages of using &libvirt; through command-line are listed below:</para></abstract></info>
        <itemizedlist>
          <listitem><para>Allows basic monitoring of host and virtual machines.</para></listitem>
      <listitem><para>Allows automating and scripting complex virtualization tasks and workflows.</para></listitem>
      <listitem><para>Enables remote management of virtualization host. This helps in managing virtualization resources on remote servers over SSH or other secure protocols.</para></listitem>
      <listitem><para>Allows managing headless servers. In server environments, where systems may not have a graphical interface or GUI tools installed, the command-line tool is the only option for managing virtualization.</para></listitem>
      <listitem><para>Allows using scripts and commands to create custom reports.</para></listitem>
      <listitem><para>Supports working with multiple hypervisors.</para></listitem></itemizedlist>
      </section>
</topic>
