<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<!-- refers to legacy doc: <add github link to legacy doc piece, if applicable> -->
<!-- point back to this document with a similar comment added to your legacy doc piece -->
<!-- refer to README.md for file and id naming conventions -->
<!-- metadata is dealt with on the assembly level -->
<topic xml:id="micro-cloud-tools"
 role="concept" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>Tools involved in initializing &productnameshort; in public clouds</title><!-- can be changed via merge in the assembly -->
    <!--add author's email address-->
    <meta name="maintainer" content="jsindelarova@suse.com" its:translate="no"/>
    <abstract><!-- can be changed via merge in the assembly -->
      <para>
       &productnameshort; uses tools that run on the first boot. The tools (&ignition; or Combustion) configure the system according to a provided set of instructions. In the &productnameshort; images for public cloud deployment, there is only  &ignition; by default. However, you may use Combustion too, but you need to proceed as described in <xref linkend="micro-cloud-combustion"/>. Afterburn is another tool used when deploying &productnameshort; in publlic clouds.
      </para>
    </abstract>
  </info>
  <para>
      In the default &ignition; configuration, &ignition; is responsible for
      creating the default user: <literal>suse</literal>. &ignition; interacts
      with the instance metadata service of the cloud provider only to get the
      so-called user data. Other data, like the user specified in Azure
      or SSH key from the GCE, are not parsed from this metadata service.
    </para>
    <para>
      Afterburn writes the SSH key to the <literal>suse</literal> home
      directory using the instance metadata service (IMDS). To transfer the SSH
      key from the IMDS, the <literal>afterburn-sshkeys@suse</literal> is used.
      The service is started automatically by &systemd;.
    </para>
    <para>
      &ignition; runs on the first boot only. To distinguish the first boot
      from succeeding boots, the flag file
      <filename>/boot/writable/firstboot_happened</filename> is created.
      Whenever you want to trigger &ignition; again, you need to remove this
      file.
    </para>
    <para>
      The default &ignition; configuration is stored in the configuration file:
      <filename>/usr/lib/ignition/base.d/base.ign</filename>. You can modify
      this file to perform configuration changes. For details, refer to
      <xref linkend="modifying-ignition-cnfiguration-cloud"/>.
    </para>
    <section xml:id="micro-cloud-combustion">
      <title>Using Combustion in deployment in public clouds</title>
        <para>
        To configure your instance with &combustion;, you need to
        create a separate disk in the cloud framework. The disk must have
        the required directory structure. Then you need to create an instance
        with this configuration disk attached. If the use of &combustion; is
        needed for integration into your environment, you can build your own
        images using keg and keg-recipes. The keg-recipes project contains the
        image description used by SUSE to build the images we publish. For
        details, refer to
        <link xlink:href="https://github.com/SUSE-Enceladus/keg-recipes/">keg-recipes</link>.
      </para>
    </section>
    </topic>
