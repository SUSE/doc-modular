<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<topic xml:id="opensm"
 role="concept" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>What is a &subnetmanager;?</title>
    <meta name="maintainer" content="tbazant@suse.com" its:translate="no"/>
    <abstract>
      <para>
        The following sections introduce &opensm; and its role in networking environment.
      </para>
    </abstract>
  </info>
  <section xml:id="infiniband-what-is">
    <title>What is &infiniband;?</title>
    <para>
      &infiniband; is a standard for computer networking communications. It offers a high-speed,
      low-latency networking technology commonly used in high-performance computing (HPC)
      environments. &infiniband; provides a high-bandwidth interconnect for connecting servers,
      storage and other network devices, for example, network switches. In &infiniband; context,
      the group of connected network devices is called a <emphasis>fabric</emphasis>.
    </para>
  </section>
  <section xml:id="subnet-manager-what-is">
    <title>What is a &subnetmanager;?</title>
    <para>
      A &subnetmanager; is a component of &infiniband; architecture. It manages and configures
      &infiniband; switches and connected devices. The &subnetmanager; is important for discovering
      network devices, assigning addresses to them, and maintaining the overall health and
      configuration of the network.
    </para>
  </section>
  <section xml:id="opensm-what-is">
    <title>What is &opensm;?</title>
    <para>
      &infiniband; switches usually come with a &subnetmanager; embedded in their firmware. Because
      it may be outdated or offer a limited control over network devices, &productnameshort; offers
      &opensm;. &opensm; is an &infiniband; compliant &subnetmanager; that performs all required
      tasks for initializing &infiniband; hardware. At least one &subnetmanager; must be running
      for each &infiniband; subnet.
    </para>
  </section>
  <section xml:id="opensm-how-it-works">
    <title>How does &opensm; work?</title>
    <para>
      The <command>opensm</command> command stores its main configuration in
      <filename>/etc/rdma/opensm.conf</filename>. Because the main configuration file gets updated
      on &opensm; upgrades, we recommend editing <filename>/etc/rdma/opensm</filename> instead to
      prevent the need to merge changes manually.
    </para>
    <para>
      &opensm; attaches to a specific &infiniband; port on the local host and configures only
      devices connected to it. If the local machine has other &infiniband; ports, &opensm; ignores
      devices connected to them them. If no port is specified, &opensm; selects the first available
      port. By default, the &opensm; run is logged to <filename>/var/log/opensm.log</filename>. All
      errors reported in this file should be treated as indicators of &infiniband; fabric health
      issues.
    </para>
  </section>
  <section xml:id="opensm-benefits">
    <title>Responsibilities of &opensm;</title>
    <para>
      Key responsibilities of &opensm; include:
    </para>
    <variablelist>
      <varlistentry>
        <term>Device discovery</term>
        <listitem>
          <para>
            Identifying and managing the devices, such as nodes or switches, within the
            &infiniband; fabric.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Address assignment</term>
        <listitem>
          <para>
            Assigning unique &infiniband; address to each device in the fabric. &infiniband; uses a
            unique addressing scheme known as <emphasis>local ldentifier</emphasis> (LID) to
            identify each device.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Routing</term>
        <listitem>
          <para>
            Determining the optimal paths for data transmission within the fabric. &infiniband;
            supports both direct and routed communication between devices.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Topology management</term>
        <listitem>
          <para>
            Managing the topology of the &infiniband; fabric, including configuring and maintaining
            the connections between switches and devices.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Error handling</term>
        <listitem>
          <para>
            Monitoring the fabric for errors and handling them appropriately to ensure the
            reliability of communication.
          </para>
        </listitem>
      </varlistentry>
    </variablelist>
  </section>
</topic>
