<?xml version="1.0" encoding="UTF-8"?>
<!-- This file originates from the project https://github.com/openSUSE/doc-kit -->
<!-- This file can be edited downstream. -->
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<!-- refers to legacy doc: <add github link to legacy doc piece, if applicable> -->
<!-- point back to this document with a similar comment added to your legacy doc piece -->
<!-- refer to README.md for file and id naming conventions -->
<!-- metadata is dealt with on the assembly level -->
<topic xml:id="package-lifecycle-categories"
 role="concept" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>Types of packages life cycles</title><!-- can be changed via merge in the assembly -->
    <!--add author's email address-->
    <meta name="maintainer" content="jsindelarova@suse.com" its:translate="no"/>
    <abstract><!-- can be changed via merge in the assembly -->
      <para>
       On &sle; 16 components packages are sorted into different lifecycle categories. This section describes
       the criteria for such a sorting.       
      </para>
    </abstract>
  </info>
  <para>
    When a package is to be categorized, impact of the package change on the systems is taken into
    account. Before the impact of the change can be estimated, interfaces of the particular
    component must be identified, as in case of a shared library, a change to its API and ABI may
    be dispruptive to the system. On contrary, a minor backward compatible change may have no or
    a small impact on that component.
  </para>
<para>
  In general, a package falls exactly into one of the categories: <emphasis
  role="bold">stable</emphasis>, <emphasis role="bold">balanced</emphasis>, or <emphasis role="bold">agile</emphasis>. However, some technologies may have
  packages sorted into several different categories, for example, Python. The following sections
  describe the packages categories in detail.  
</para>
  <section xml:id="package-lifecycle-categories-stable">
    <title>Stable</title>
    <para>
      As stable, also called conservative, are marked packages that do not deliver a disruptive change
      while a customer is on any of the 16 minor versions. During the upgrade to another minor
      version, package version may change but the newer version does <emphasis
      role="bold">not</emphasis> introduce imcompatibile behavior.
    </para>
    <para>
      The packages belonging to this category can change, but the following criteria apply:
    </para>
    <itemizedlist>
      <listitem>
        <para>
          changes to functionality is in a completely backward compatible
          manner&ndash;functionality can be added, but not removed
        </para>
      </listitem>
      <listitem>
        <para>
          changes to interfaces is backward compatibile
        </para>
      </listitem>
      <listitem>
        <para>
default behavior of applications does not change in an unexpected way.
        </para>
      </listitem>
    </itemizedlist>
    <para>
      Under exceptional circumstances like serious security issues, the package can be updated even
      at the cost bringing disruptive changes.
    </para>
  </section>
  <section xml:id="package-lifecycle-categories-balanced">
    <title>Balanced</title>
    <para>
      Packages categorized as balanced are changing, but should not cause disruptive changes
      whithin one minor version. A small amount of incompatible changes is possible, but always
      documented in the release notes for that particular minor release.
    </para>
    <para>
      When change is bein introduced, it can be in one of the following ways:
    </para>
    <itemizedlist>
      <listitem>
        <para>
there is only one version in the minor release. New version replaces the previous one while
allowing for smooth transitions between the versions. The new versions are released only with new
minor release.
        </para>
      </listitem>
    </itemizedlist>
    
  </section>
  <section xml:id="package-lifecycle-categories-agile">
    <title>Agile</title>
    <para>
      A paragraph of text, pointing out the benefits of foo bar.
    </para>
  </section>
</topic>
