<?xml version="1.0" encoding="UTF-8"?>
<!-- This file originates from the project https://github.com/openSUSE/doc-kit -->
<!-- This file can be edited downstream. -->
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<!-- refers to legacy doc: <add github link to legacy doc piece, if applicable> -->
<!-- point back to this document with a similar comment added to your legacy doc piece -->
<!-- refer to README.md for file and id naming conventions -->
<!-- metadata is dealt with on the assembly level -->
<topic xml:id="podman-about-containers"
 role="concept" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>Basics about containers</title><!-- can be changed via merge in the assembly -->
    <!--add author's email address-->
    <meta name="maintainer" content="jsindelarova@suse.com" its:translate="no"/>
    <abstract><!-- can be changed via merge in the assembly -->
      <para>
       The topic defines what a container is.
      </para>
    </abstract>
  </info>
  <para>
    Containers offer a lightweight virtualization method to run multiple
    virtual environments (containers) simultaneously on a single host. Unlike
    technologies such as &xen; or &kvm;, where the processor simulates a
    complete hardware environment and a hypervisor controls virtual machines,
    containers provide virtualization on the operating system level, where
    the kernel controls the isolated containers.
  </para>
  <itemizedlist mark="bullet" spacing="normal">
    <title>Advantages of using containers</title>
    <listitem>
      <para>
        Containers make it possible to isolate applications in self-contained
        units.
      </para>
    </listitem>
    <listitem>
      <para>
        Containers provide near-native performance. Depending on the runtime,
        a container can use the host kernel directly, thus minimizing
        overhead.
      </para>
    </listitem>
    <listitem>
      <para>
        It is possible to control network interfaces and apply resources
        inside containers through kernel control groups.
      </para>
    </listitem>
  </itemizedlist>
  <itemizedlist mark="bullet" spacing="normal">
    <title>Limitations of containers</title>
    <listitem>
      <para>
        Containers run on the host system's kernel, so they cannot use
        different kernels or different kernel versions.
      </para>
    </listitem>
    <listitem>
      <para>
        The security of containers depends on the host system. 
        Containerized applications can be secured through 
        &aa; or &selnx; profiles. Securing containers is harder 
        than securing virtual machines because of the larger attack 
        surface.
      </para>
    </listitem>
  </itemizedlist>
</topic>
