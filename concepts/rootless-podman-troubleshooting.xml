<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<topic xml:id="rootless-podman-troubleshooting"
 role="glue" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>Troubleshooting</title>
    <meta name="maintainer" content="dpopov@suse.com" its:translate="no"/>
  </info>
  <section xml:id="rootless-podman-troubleshoot-fix-root">
    <title>Rootless mode fails</title>
    <para>
      In case &podman; fails to launch containers in rootless mode, check
      whether an entry for the current user is present in
      <literal>/etc/subuid</literal>:
    </para>
<screen>&prompt.user;grep $(id -nu) /etc/subuid
  user:10000:65536</screen>
    <para>
      When no entry is found, add the required sub-UID and sub-GID entries via
      the following command:
    </para>
<screen>&prompt.user;sudo usermod --add-subuids 100000-165535 --add-subgids 100000-165535 $(id -nu)</screen>
    <para>
      To enable the change, reboot the machine or stop the session of the
      current user. To do the latter, run <command>loginctl list-sessions |
      grep <replaceable>USER</replaceable></command> and note the session ID.
      Then run <command>loginctl kill-session
      <replaceable>SESSION_ID</replaceable></command> to stop the session.
    </para>
    <para>
      The <command>usermod</command> command above defines a range of local
      UIDs to which the UIDs allocated to users inside the container are mapped
      on the host. Note that the ranges defined for different users must not
      overlap. It is also important that the ranges do not reuse the UID of an
      existing local user or group. By default, adding a user with the
      <command>useradd</command> command on &productname; automatically
      allocates sub-UID and sub-GID ranges.
    </para>
  </section>
  <section xml:id="rootless-podman-troubleshoot-user-remapping">
    <title>Dealing with user remapping</title>
    <para>
      &podman; remaps user IDs with rootless containers. In the following
      example, &podman; remaps the current user to the default user in the
      container:
    </para>
<screen>&prompt.user;podman run --rm -it registry.suse.com/bci/bci-base id
  uid=0(root) gid=0(root) groups=0(root)</screen>
    <para>
      Note that even if you are &rootuser; in the container, you cannot gain
      superuser privileges outside of it.
    </para>
    <para>
      This user remapping can have undesired side effects when sharing data
      with the host, where the shared files belong to different user IDs in the
      container and on the host. The issue can be solved using the command-line
      flag <option>--userns=keep-id</option> that makes it possible to keep the
      current user ID in the container:
    </para>
<screen>&prompt.user;podman run --userns=keep-id --rm -it registry.suse.com/bci/bci-base id
  uid=1000(user) gid=1000(users) groups=1000(users)</screen>
    <para>
      The flag <option>--userns=keep-id</option> has a similar effect when used
      with bind mounts:
    </para>
<screen>&prompt.user;podman run --rm -it -v $(pwd):/share/ registry.suse.com/bci/bci-base stat /share/
    File: /share/
    Size: 318             Blocks: 0          IO Block: 4096   directory
  Device: 2ch/44d Inode: 3506170     Links: 1
  Access: (0755/drwxr-xr-x)  Uid: (    0/    root)   Gid: (    0/    root)
  Access: 2023-05-03 12:52:18.636392618 +0000
  Modify: 2023-05-03 12:52:17.178380923 +0000
  Change: 2023-05-03 12:52:17.178380923 +0000
   Birth: 2023-05-03 12:52:15.852370288 +0000
  
   &prompt.user;podman run --userns=keep-id --rm -it -v $(pwd):/share/ registry.suse.com/bci/bci-base stat /share/
    File: /share/
    Size: 318             Blocks: 0          IO Block: 4096   directory
  Device: 2ch/44d Inode: 3506170     Links: 1
  Access: (0755/drwxr-xr-x)  Uid: ( 1000/     user)   Gid: ( 1000/     users)
  Access: 2023-05-03 12:52:18.636392618 +0000
  Modify: 2023-05-03 12:52:17.178380923 +0000
  Change: 2023-05-03 12:52:17.178380923 +0000
   Birth: 2023-05-03 12:52:15.852370288 +0000</screen>
  </section>
  <section xml:id="rootless-podman-troubleshoot-storage-graph-root">
    <title>Rootless containers and the storage graph root</title>
    <para>
      &podman; stores the containers' data in the storage graph root (default is
      <filename>~/.local/share/containers/storage</filename>). Because of the
      way &podman; remaps user IDs in rootless containers, the graph root may
      contain files that are not owned by your current user but by a user ID in
      the sub-UID region assigned to your user. As these files do not belong to
      your current user, they can be inaccessible to you.
    </para>
    <para>
      To read or modify any file in the graph root, enter a shell as follows:
    </para>
  <screen>&prompt.user;podman unshare bash
  
  &prompt.user;id
  uid=0(root) gid=0(root) groups=0(root),65534(nobody)</screen>
    <para>
      Note that <command>podman unshare</command> performs the same user
      remapping as <command>podman run</command> does when launching a rootless
      container. You cannot gain elevated privileges via <command>podman
      unshare</command>.
    </para>
    <para>
      Do not modify files in the graph root as this can corrupt &podman;'s
      internal state and render your containers, images and volumes inoperable.
    </para>
  </section>
</topic>
