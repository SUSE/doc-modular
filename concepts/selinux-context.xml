<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<!-- refers to legacy doc: <add github link to legacy doc piece, if applicable> -->
<!-- point back to this document with a similar comment added to your legacy doc piece -->
<!-- refer to README.md for file and id naming conventions -->
<!-- metadata is dealt with on the assembly level -->
<topic xml:id="selinux-context"
 role="concept" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>SELinux security context</title><!-- can be changed via merge in the assembly -->
    <!--add author's email address-->
    <meta name="maintainer" content="jsindelarova@suse.com" its:translate="no"/>
    <abstract><!-- can be changed via merge in the assembly -->
      <para>
       The topic covers the &selnx; context parts - type, role, user, level and category.
      </para>
    </abstract>
  </info>
  <para>
   The security context is a set of information assigned to a file or a
   process. It consists of SELinux user, role, type, level and category. This
   information is used to make access control decisions.
  </para>
  <variablelist>
   <title>SELinux context fields</title>
   <varlistentry>
    <term>SELinux user</term>
    <listitem>
     <para>
      is an identity defined in the policy that is authorized for a specific
      set of roles and for a specific <emphasis>level</emphasis> range. Each
      Linux user is mapped to an SELinux user. SELinux does not use the list of
      user accounts maintained by Linux in <filename>/etc/passwd</filename>,
      but uses its own database and mapping. By convention, the identity name
      is suffixed with <literal>_u</literal>, for example:
      <literal>user_u</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>role</term>
    <listitem>
     <para>
      defines a set of permissions that a user can be granted. A role defines
      which <emphasis>types</emphasis> a user assigned to this role can access.
      By convention, the role name is suffixed with <literal>_r</literal>, for
      example: <literal>system_r</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>type</term>
    <listitem>
     <para>
      conveys information on how particular files and processes can interact. A
      process consists of files with a concrete SELinux type, and it cannot
      access files outside of this type. By convention, the type name is
      suffixed with <literal>_t</literal>, for example:
      <literal>var_t</literal>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>level</term>
    <listitem>
     <para>
      is an optional attribute that specifies the range of levels of clearance
      in the multilevel security.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>category</term>
    <listitem>
     <para>
      is an optional attribute that allows you to add categories to processes,
      files, and users. A user can then access files that have the same
      category.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
  <para>
    Let's demonstrate the &selnx; contenxt on an example:
  </para>
  <screen>allow user_t bin_t:file {read execute gettattr};</screen>
  <para>
   This example rule states that the user who has the context type
   <systemitem class="username">user_t</systemitem> (this user is called
   the source object) is allowed to access objects of class "file"
   with the context type <filename>bin_t</filename> (the target), using the
   permissions <literal>read</literal>, <literal>execute</literal>, and <literal>getattr</literal>.
  </para>
</topic>
