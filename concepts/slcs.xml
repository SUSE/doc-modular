<?xml version="1.0" encoding="UTF-8"?>
<!-- This file originates from the project https://github.com/openSUSE/doc-kit -->
<!-- This file can be edited downstream. -->
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<topic xml:id="slcs-introduction"
 role="concept" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>What is &slcs;?</title>
    <meta name="maintainer" content="tbazant@suse.com" its:translate="no"/>
    <abstract>
      <para></para>
    </abstract>
  </info>
  <para>
    &slcs; is a Linux distribution that consists of the following components:
  </para>
  <itemizedlist>
    <listitem>
      <para>
        &slm; as the base operating system. &slm; is a lightweight Linux
        operating system focused on security and optimized to run containerized
        workloads.
      </para>
    </listitem>
    <listitem>
      <para>
        &slcc; as the supported collection of containerized workloads that you
        can deploy and run on top of &slm;.
      </para>
    </listitem>
    <listitem>
      <para>
        Additional enhancements to improve the user experience.
      </para>
    </listitem>
  </itemizedlist>
  <para>
    &slcc; is best described by the following characteristics:
  </para>
  <variablelist>
    <varlistentry>
      <term>Minimalistic</term>
      <listitem>
        <para>
          &productnameshort; provides the bare minimum to run workloads and
          services as containers or virtual machines. Its default software
          collection is carefully preselected to include only packages required
          to support its mission.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>Container-ready</term>
      <listitem>
        <para>
          In &productnameshort;, containerized workloads replace traditional
          applications. They contain all software dependencies required to run a
          specific application or tool. &productnameshort; uses &podman; as the
          default container engine. &podman; makes it easy to find, run, build,
          share and deploy containerized workloads.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>Portable</term>
      <listitem>
        <para>
          It is important that the same applications run in diverse
          environments&mdash;such as development, quality assurance,
          preproduction and production. Containers encapsulate applications and
          their dependencies. This eliminates concerns about variations in
          underlying host systems.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>Secure</term>
      <listitem>
        <para>
          &productnameshort; is an immutable operating system with a read-only
          file system. Changes to the file system are performed in transactions
          and can easily be rolled back. Moreover, the &selnx; access control
          makes it a truly secure platform. By supporting confidential
          computing, &productname; ensures that sensitive data remains encrypted
          even while in use, not just during storage or transmission.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>Reliable</term>
      <listitem>
        <para>
          &productname; is designed to recover gracefully from hardware faults,
          software glitches or unexpected events. By incorporating
          fault-tolerant mechanisms and self-recovery procedures, the
          distribution minimizes downtime and data loss.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>Remote management</term>
      <listitem>
        <para>
          &productnameshort; is designed for remote management. It is ready to
          be integrated with the main remote management applications on the
          market, such as &suma;, &salt;, &ansible; or &ranchelemental;.
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
</topic>
