<?xml version="1.0" encoding="UTF-8"?>
<!-- This file originates from the project https://github.com/openSUSE/doc-kit -->
<!-- This file can be edited downstream. -->
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<!-- refers to legacy doc: <add github link to legacy doc piece, if applicable> -->
<!-- point back to this document with a similar comment added to your legacy doc piece -->
<!-- refer to README.md for file and id naming conventions -->
<!-- metadata is dealt with on the assembly level -->
<topic xml:id="concept-sle16"
 role="concept" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <title>Concept</title>
  <section xml:id="what-is-sle-16">
    <title>What is &productname; 16?</title>
    <para>
      A paragraph of text, answering the question above and explaining the
      aim/function of foo bar.
    </para>
  </section>
  <section xml:id="concept-example-how-it-works">
    <title>How does foo bar work?</title>
    <para>
      A paragraph of text, answering the question above and explaining the
      mechanism behind foo bar.
    </para>
  </section>
  <section xml:id="concept-example-benefits">
    <title>Benefits of foo bar</title>
    <para>
      A paragraph of text, pointing out the benefits of foo bar.
    </para>
  </section>

  <section xml:id="sle16-architecture">
    <title>Architecture</title>
    <itemizedlist>
      <listitem>
        <para>
          SLES 15 supports AMD64 / Intel 64 (x86-64), IBM Power LE (ppc64le), IBM Z (s390x), and ARM64 (aarch64). The required minimum architecture level for x86-64 is x86-64-v1.
        </para>
      </listitem>
      <listitem>
        <para>
          SLES 16 supports AMD and Intel 64-bit architectures (x86-64-v2, preparing to run x86-64-v3), the 64-bit ARM architecture (ARMv8.0-A), IBM Power Systems, Little Endian (POWER9), and 64-bit IBM Z (z14). This leverages HWCAPs of glibc to prepare for v3-compiled libraries. IBM Z support is z14 in RHEL 10, and z16 in SLES 16
        </para>
      </listitem>
    </itemizedlist>
  </section>
  <section xml:id="sle16-versioning">
    <title>Versioning and Release Cycle</title>
    <itemizedlist>
      <listitem>
        <para>
          SLES 15 uses Service Packs (SPs) (e.g., SP1, SP2, SP7). The release cycle is yearly Service Packs.
        </para>
      </listitem>
      <listitem>
        <para>
          SLES 16 uses minor releases (16.0, 16.1, etc.) instead of SPs. Releases are planned yearly, always in November.
        </para>
      </listitem>
    </itemizedlist>
  </section>
  <section xml:id="sle16-lifecycle">
    <title>Lifecycle</title>
    <itemizedlist>
      <listitem>
        <para>
          SLES 15 has general support for 1.5 years per Service Pack (with exceptions) and offers various extended support options like LTSS (Long Term Service Pack Support) and ESPOS (Extended Service Pack Overlap Support). Total support for SLE 15 covers up to 13 years (10 years general support + 3 years LTSS). SLES 15 SP7 general support is until 2031-07-31, with LTSS until 2034-07-31 and LTSS-Core until 2037-12-31. SLES for SAP Applications 15 SPs have a total support of 4.5 years
        </para>
      </listitem>
      <listitem>
        <para>
          SLES 16 is ready for the future - beyond 2038. General Support is expected to end in November 2035, with LTSS and Extreme LTSS beyond 2040. SLES 16 for SAP Applications has general support for 1.5 years plus 3 years extended support
        </para>
      </listitem>
    </itemizedlist>
  </section>
  <section xml:id="sle16-systems-management">
    <title>Systems Management</title>
    <itemizedlist>
      <listitem>
        <para>
          In SLES 15 and earlier, YaST was used for installation, unattended and scripted installation, configuration, systems management, command line, and first boot configuration. Traditional SLES installations prior to 16 were based on YaST, including AutoYaST for deployment and configuration. YaST architecture was considered complex and difficult to contribute to. YaST provided exclusive Qt or ncurses user interfaces
        </para>
      </listitem>
      <listitem>
        <para>
          In SLES 16, systems management sees significant changes:
        </para>
        <itemizedlist>
          <listitem>
            <para>
              Installation (including unattended) transitions to Agama. Agama is a new installer with a web-based frontend, command-line interface, and API for integration. It minimizes what is done during installation in favor of SCM (Software Configuration Management) tools. Agama supports repeated config import.
            </para>
          </listitem>
          <listitem>
            <para>
              Remote management is handled by Cockpit. Cockpit is designed for 1:1 management
            </para>
          </listitem>
          <listitem>
            <para>
              Configuration management uses Salt and Ansible (via SUSE Multi-Linux Manager). This supports customers with ready-to-run automation
            </para>
          </listitem>
        </itemizedlist>
        <para>
          These changes in SLES 16 aim to provide better integration with Salt and Ansible, allow remote installation via a web browser, and offer different interfaces (web, CLI, HTTP API) for controlling the process
        </para>
      </listitem>
    </itemizedlist>
  </section>

  <section>
    <title>Security Framework</title>
    <itemizedlist>
      <listitem>
        <para>
          SLES 15 used AppArmor or SELinux (with no policies provided by default)
        </para>
      </listitem>
      <listitem>
        <para>
          SLES 16 ships with SELinux with policies. SELinux has gained more traction, and SUSE plans to ship with very good coverage, enabling over 400 modules by default, confining almost the whole system. Parts of the system can run unconfined if desired. SLES for SAP Applications 16 has improved workload isolation with SELinux, providing isolation for data and data flows, and for containers.
       </para>
      </listitem>
    </itemizedlist>
  </section>

  <section>
    <title>Networking Stack</title>
    <itemizedlist>
      <listitem>
        <para>
          SLES 15 used wicked and NetworkManager.
        </para>
      </listitem>
      <listitem>
        <para>
          SLES 16 focuses on a single stack using NetworkManager.
        </para>
      </listitem>
    </itemizedlist>
  </section>

  <section>
    <title>Deployment</title>
    <itemizedlist>
      <listitem>
        <para>
          SLES 15 offered ready-to-run images for VM, public cloud, and manual deployment (YaST, AutoYaST). It used a special installation environment with linuxrc-driven configuration. AutoYaST profile import was a one-off task only.
        </para>
      </listitem>
      <listitem>
        <para>
          SLES 16 uses ready-to-run images for VM, public cloud, and manual/automated installation with Agama. The installer is a systemd service accessible via web-interface, command line, or HTTP API. Agama allows repeated config import. It uses a standard Live CD with Dracut, systemd, and NetworkManager. There is a backward-compatibility layer with selected linuxrc options.
        </para>
      </listitem>
    </itemizedlist>

  </section>
  
</topic>
