<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
  <!ENTITY snapper "Snapper">
]>
<!-- refers to legacy doc: <add github link to legacy doc piece, if applicable> -->
<!-- point back to this document with a similar comment added to your legacy doc piece -->
<!-- refer to README.md for file and id naming conventions -->
<!-- metadata is dealt with on the assembly level -->
<topic xml:id="snapper-basic-concept"
 role="concept" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
  <title>What is &snapper;?</title>    
    <meta name="maintainer" content="daria.vladykina@suse.com" its:translate="no"/>
  </info>
  <para>&snapper; is a tool that helps create and manage file system snapshots.
    File system snapshots allow keeping a copy of the state of a file system
    at a certain point of time. &snapper; can create and compare snapshots, revert
    between snapshots, and supports automatic snapshot timelines. &snapper; never
    modifies the content of snapshots.</para>
    <para>The standard setup of &snapper; is designed to allow rolling back system
    changes. However, you can also use it to create on-disk backups of user data.
    As the basis for this functionality, &snapper; uses two types of file systems:</para>
     <itemizedlist>
      <listitem>
       <para>
        Btrfs, a copy-on-write file system for Linux that natively supports
        file system snapshots of subvolumes.
       </para>
       </listitem>
      <listitem>
       <para>
        Thinly provisioned LVM volumes formatted with XFS and ext4.
       </para>
      </listitem>
    </itemizedlist>
    <note>
      <para>
        You can also boot from <literal>Btrfs</literal> snapshots. <!-- For more
        information, see <xref linkend="sec-snapper-snapshot-boot"/>.-->
       </para>
      </note>

  <section xml:id="snapper-basic-tasks">
    <title>What can &snapper; do?</title>
    <para>&snapper; has a command-line interface that allows you to create,
     delete and compare snapshots, as well as undo changes made between snapshots.</para>
    <para>
      Using &snapper;, you can perform the following tasks:</para>
      <itemizedlist mark="bullet" spacing="normal">
        <listitem>
         <para>
          Undo system changes made by <command>zypper</command>. <!-- See
          <xref linkend="sec-snapper-undo"/> for details.-->
         </para>
        </listitem>
        <listitem>
         <para>
          Restore files from previous snapshots. <!-- See
          <xref linkend="sec-snapper-undo-delete-file"/> for details.-->
         </para>
        </listitem>
        <listitem>
         <para>
          Do a system rollback by booting from a snapshot. <!--See
          <xref linkend="sec-snapper-snapshot-boot"/> for details.-->
         </para>
        </listitem>
        <listitem>
         <para>
          Manually create and manage snapshots, within the running system. <!-- See
          <xref linkend="sec-snapper-manage"/> for details.-->
         </para>
        </listitem>
        <listitem>
          <para>
          Perform automatic snapshot cleanup. <!-- See
           <xref linkend="sec-snapper-snapshot-boot"/> for details.--> 
          </para>
         </listitem>
       </itemizedlist>   
</section>

<section os="sles" xml:id="snapshot-types">
  <title>Types of snapshots</title>
   <para>There are two aspects according to which snapshots can be classified: 
     snapshot-triggering events and the time of snapshot creation.</para>
<variablelist>
  <title>Snapshot types based on triggering events</title>
    <para>Although snapshots themselves do not differ in a technical sense, we 
      distinguish between three types of snapshots, based on the events that trigger them.</para>
   <varlistentry>
     <term>Installation snapshots</term>
     <listitem>
    <para>
        Whenever one or more packages are installed, snapshots are created in this manner:</para>
      <itemizedlist>
        <listitem><para>Snapshot <literal>0 single</literal>
        always exists in &snapper;. It always refers to the current system state, as 
        indicated in the <literal>Description</literal> column. This snapshot 
        captures the state of the system right after the installation process 
        has concluded.</para></listitem>
        <listitem><para>Snapshot <literal>1 single</literal> for root partition 
        (/) is taken automatically with the name <literal>first root filesystem</literal>.
        This snapshot is taken after the first set of system updates or 
        configurations.</para></listitem>
        <listitem><para>Snapshot <literal>2 single</literal> is taken automatically
        with the name <literal>after installation</literal>. This snapshot is created 
        towards the end of the installation process and marked as <literal>important</literal>.
        It represents the state of the system after all initial setup has been 
        completed.</para></listitem>  
      </itemizedlist>
    <para>Old snapshots are automatically deleted. By default, the last ten 
        important snapshots and the last ten <quote>regular</quote> ones 
        (including administration snapshots) are kept. Installation snapshots 
        are enabled by default. To manually disable installation snapshots, uninstall
        the package <package>snapper-zypp-plugin</package>.</para>
    </listitem>
    </varlistentry>
    <varlistentry>
     <term>Administration snapshots</term>
     <listitem>
      <para>
       Whenever you make changes to the system, a 
       pair of snapshots is created: one prior to the system change 
       (<quote>pre</quote>) and the other one after the system change 
       (<quote>post</quote>). Old snapshots are automatically deleted.
       By default, the last ten important snapshots and the last ten 
       <quote>regular</quote> snapshots (including installation snapshots) 
       are kept. Administration snapshots are enabled by default.    
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
      <term>Timeline snapshots</term>
   <listitem>
    <para>A single snapshot is created every hour. Timeline snapshots are 
    enabled by default, except for the root file system. 
    The default intervals for timeline snapshots are hourly, daily, weekly, 
    monthly and yearly. To modify these intervals, users must modify 
    the systemd timers of &snapper; directly, as this cannot be configured within 
    &snapper; itself. Old snapshots are automatically deleted. By default, the 
    first snapshot of the last ten days, months and years is kept.
    </para>
   </listitem>
  </varlistentry>
  </variablelist>
  <important>
    <title>Exception for installation and administration snapshot types</title>
    <para>Installation and administration snapshot types do not apply to transactional 
      systems.</para>
  </important>
  <note>
    <para>Timeline and administration snapshots can be enabled or disabled independently.<!--For more information, see: Add 
      link to section in article "Customizing the setup"--></para>
  </note>

  <variablelist>
    <title>Snapshot types based on the time of creation</title>
    <para>
      Among administration and installation snapshots, &snapper; recognizes 
      three different types: pre, post and single. These do not differ physically,
      but &snapper; handles them differently.</para>
  <varlistentry>
   <term><literal>pre</literal>
    </term>
     <listitem>
      <para>
       Snapshot of a file system <emphasis>before</emphasis> a modification.
       Each <literal>pre</literal> snapshot corresponds to a
       <literal>post</literal> snapshot.
       For example, this is used for automatic snapshots.
      </para>
     </listitem>
  </varlistentry>
  <varlistentry>
     <term><literal>post</literal>
     </term>
     <listitem>
      <para>
       Snapshot of a file system <emphasis>after</emphasis> a modification.
       Each <literal>post</literal> snapshot corresponds to a
       <literal>pre</literal> snapshot.
       For example, this is used for automatic snapshots.
      </para>
     </listitem>
  </varlistentry>
  <varlistentry>
     <term><literal>single</literal>
     </term>
     <listitem>
      <para>
       Stand-alone snapshot. For example, this is used for automatic hourly snapshots.
       This is the default type when creating snapshots.
      </para>
     </listitem>
  </varlistentry>
 </variablelist>
<para>This is the list of snapshots directly after a fresh installation of a system 
  with a root partition &gt; 16&nbsp;GB:</para>
<screen>
# | Type   | Pre # | Date                     | User | Used Space | Cleanup | Description           | Userdata     
-----+--------+-------+--------------------------+------+------------+---------+-----------------------+--------------
0  | single |       |                          | root |            |         | current               |              
1  | single |       | Thu Mar 24 12:14:34 2022 | root |  32.44 MiB |         | first root filesystem |              
2  | single |       | Thu Mar 24 12:25:55 2022 | root | 280.40 MiB | number  | after installation    | important=yes
45 | pre    |       | Mon Apr 25 17:58:45 2022 | root |  27.52 MiB | number  | zypp(zypper)          | important=yes
46 | post   |    45 | Mon Apr 25 18:00:07 2022 | root |  39.04 MiB | number  |                       | important=yes
</screen>
</section>

<section xml:id="snapper-snapshot-creation"> 
  <title>Snapshot creation</title>
   <para>
   When a snapshot is created, both the snapshot and the original point to the
   same blocks in the file system. So, initially a snapshot does not occupy
   additional disk space. If data in the original file system is modified,
   changed data blocks are copied while the old data blocks are kept for the
   snapshot. Therefore, a snapshot occupies the same amount of space as the
   data modified. So, over time, the amount of space a snapshot allocates
   constantly grows. As a consequence, deleting files from a
   <literal>Btrfs</literal> file system containing snapshots may
   <emphasis>not</emphasis> free disk space!</para>
   <note>
     <title>Snapshot location</title>
     <para>
      Snapshots always reside on the same partition or subvolume on which the
      snapshot has been taken. It is not possible to store snapshots on a
      different file system.
     </para>
    </note>
    <para>
     As a result, partitions containing snapshots need to be larger than
     partitions not containing snapshots. The exact amount depends strongly on the
     number of snapshots you keep and the amount of data modifications. As a rule
     of thumb, give partitions twice as much space as you normally would.
     To prevent disks from running out of space, old snapshots are automatically
     cleaned up.<!--Refer to <xref linkend="sec-snapper-setup-customize-archiving"/>
     Section 10.1.4.4, “Controlling snapshot archiving” for details.-->
    </para>  
 </section>
</topic>
