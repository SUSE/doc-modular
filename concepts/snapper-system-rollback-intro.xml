<?xml version="1.0" encoding="UTF-8"?>
<!-- This file originates from the project https://github.com/openSUSE/doc-kit -->
<!-- This file can be edited downstream. -->
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<!-- refers to legacy doc: <add github link to legacy doc piece, if applicable> -->
<!-- point back to this document with a similar comment added to your legacy doc piece -->
<!-- refer to README.md for file and id naming conventions -->
<!-- metadata is dealt with on the assembly level -->
<topic xml:id="snapper-system-rollback-intro"
 role="concept" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>System rollback with &snapper;</title><!-- can be changed via merge in the assembly -->
    <!--add author's email address-->
    <meta name="maintainer" content="daria.vladykina@suse.com" its:translate="no"/>
    <abstract><!-- can be changed via merge in the assembly -->
      <para>
        &snapper;'s rollback feature that allows rolling back your system by 
        booting from snapshots is a powerful tool for system recovery and maintenance.
      </para>
    </abstract>
  </info>
  <para>The main use case for a rollback is recovery from misconfigurations. If a 
    system is misconfigured due to a faulty update or manual changes, rolling 
    back to a previous snapshot can save the day. By booting into a previous 
    snapshot, you can restore the system to its previous state and identify 
    the cause of the issue.</para>
    <para>The &grub; version included on &productname; can boot 
    from <literal>Btrfs</literal> snapshots. Together with &snapper;'s rollback feature, this allows 
    to recover a misconfigured system. Please note that only snapshots created 
    for the default &snapper; configuration (&rootuser;) are bootable.</para>
   <para>Rollback can be useful when testing new configurations. Before making 
    significant changes to a live system, it is often safer to test them in a 
    controlled environment. By creating a snapshot, you can boot into a copy 
    of the system that reflects the current state. You can then make changes, 
    test them, and if something goes wrong, simply roll back to the snapshot 
    without affecting the live system.</para>
    <para>If you make a change to the system that causes issues, instead of 
    trying to fix it immediately, you can simply roll back to a previous snapshot. 
    This can save time and prevent further complications.</para>
      
    <important>
      <title>Supported configuration</title>
      <para>
       As of &productname; &productnumber;, system rollbacks are only supported if
       the default subvolume configuration of the root partition has not been
       changed.
      </para>
     </important>
   
     <para>
      When booting a snapshot, the parts of the file system included in the
      snapshot are mounted read-only. This means that you can view and read 
      the files, but you cannot modify them. All other file systems and parts 
      that are excluded from snapshots are mounted read-write and can be modified.
     </para>

<important>
  <title>Restoring to the identical state is not possible</title>
      <para>While a system rollback using snapshots can restore a system to a 
        previous state, it does not guarantee a complete rollback to the exact 
        state as it was in when the snapshot was taken. Some limitations exist, 
        such as certain directories being excluded from snapshots. <!--For more information, see Limitations.-->
  </para>
</important>

</topic>
