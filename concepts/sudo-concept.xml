<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook51-profile.xsl"
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<!-- refers to legacy doc: https://github.com/SUSE/doc-sle/blob/main/xml/adm_sudo.xml -->
<!-- point back to this document with a similar comment added to your legacy doc piece -->
<!-- refer to README.md for file and id naming conventions -->
<!-- metadata is dealt with on the assembly level -->
<topic xml:id="sudo-basic-concepts" role="concept" xml:lang="en"
  xmlns="http://docbook.org/ns/docbook" version="5.2"
  xmlns:its="http://www.w3.org/2005/11/its"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink"
  xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>Basic concepts of &sudo;</title>
    <meta name="maintainer" content="amrita.sakthivel@suse.com"
      its:translate="no"/>
  <abstract>
    <!--Remove later: Please do an editorial and structural review of this module, irrespective of
     whether you see much changes in this module-->
    <para>
      Learn about the basic concepts of &sudo; and how it works.
      </para>
   </abstract>
  </info>
  <!--Remove later: Please do an editorial and structural review of this module, irrespective of
    whether you see much changes in this module-->
    <para>
    &sudo; is a Linux command that is used to temporarily execute programs as
    another user.
    It is the abbreviation for <literal>super user do</literal> and can be used
    to run a command with the elevated privileges of the superuser as
    &rootuser;.
  </para>
  <section xml:id="sudo-basic-concepts-general">
    <title>&sudo; on Linux systems in general</title>
  <para>
    As a normal user on Linux, you have reduced permissions which is sufficient
    for most of the tasks. The &rootuser; user is the Linux superuser and the
    equivalent to the administrator. &sudo; has the ability to run privileged
    tasks like calling system functions which are only allowed for &rootuser;.
  </para>
</section>
<section xml:id="sudo-basic-concepts-suse">
  <title>&sudo; on &productname; sytems</title>
  <para>
    For security reasons, all &productname; systems separate the normal user
    from the &rootuser; user. 
    As a normal user, you cannot write to system directories or install programs.
    Any user with access to the &rootuser; password can gain this privileges and
    accidentally or maliciously break the system.
  </para>
  <para>
    For example, you are logged in as normal user and accidentally browsing to
    a malicious website. An attacker cannot install malware on your system
    behind your back, as you are logged in as normal user without admin
    permissions.
  </para>
  <para>
    It is not recommended to be logged in as root permanently. A safer approach
    is logging in as a normal user and running a restricted command prefaced
    with &sudo;.
  </para>
  <note>
    <title>&sudo; requires administrator rights</title>
    <para>
      On a single-user machine, where you have set your own root password, you
      have the required rights to administrate your system by using the &sudo;
      command and to configure &sudo; settings yourself.
      For more information about how to configure &sudo; refer to ???.
    </para>
    <para>
      In a multi-user environment, such as in companies, the &sudo; privileges
      are managed by a system administrator and the permissions of the
      &rootuser; user can be restricted. You may not be allowed to change
      certain system directories or files, even when executing the command with
      &sudo;.
    </para>
  </note>
  </section>
  <section xml:id="sudo-basic-concepts-how-works">
    <title>How &sudo; works</title>
  <para>
    To run a command with &sudo;, this syntax is used:
  </para>
  <screen>
    &prompt.user;<command>sudo [command]</command>
      </screen>
  <para>The following example explains, how the &sudo; command is used, to open
    the <guilabel>&yast; Control Center</guilabel> in the terminal directly. To
    open &yast;, administrator rights are needed and therefore, it only works
    with the &sudo; command.
  </para>
  <example>
    <title>Opening the &yast; control center with &sudo;</title>
    <screen>
&prompt.user;<command>yast</command>
Absolute path to 'yast' is '/usr/sbin/yast', so running it may require superuser privileges (eg. root).<co xml:id="co-sudo-usage-yast-answer"/>
&prompt.sudo;<command>sudo yast</command>
&prompt.sudo; password for root:<co xml:id="co-sudo-usage-pw"/>
         </screen>
         <calloutlist>
          <callout arearefs="co-sudo-usage-yast-answer">
           <para>
            When only the <command>yast</command> command is entered, the system
            returns, that superuser privileges are required.
           </para>
          </callout>
          <callout arearefs="co-sudo-usage-pw">
           <para>
            Starting the <command>yast</command> command with &sudo;, prompts
            you for the &rootuser; password. The password is not shown during
            input, neither as clear text nor as masking characters.
           </para>
           <para>
            After successful authentication, the
            <guimenu>&yast; Control Center</guimenu> is opened.
           </para>
          </callout>
          </calloutlist>
         <para>
            The elevated privileges persist for a certain period of time, so you
            do not have to provide the &rootuser; password again for the next
            &sudo; command.
           </para>
  </example>
  <note>
    <para>
      To use the &sudo; command, the &sudo; package needs to be available on
      your system. This package is installed on all &productname; distributions
      by default.
    </para>
  </note>
</section>
</topic>
