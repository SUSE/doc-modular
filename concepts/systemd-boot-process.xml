<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<!-- refers to legacy doc: <add github link to legacy doc piece, if applicable> -->
<!-- point back to this document with a similar comment added to your legacy doc piece -->
<!-- refer to README.md for file and id naming conventions -->
<!-- metadata is dealt with on the assembly level -->
<topic xml:id="boot-process"
 role="concept" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>About the &systemd; boot process </title>
      <meta name="maintainer" content="amrita.sakthivel@suse.com" its:translate="no"/>
    <abstract>
     <para>
&systemd; manages the boot process on a Linux system. The boot process loads the Linux kernel, which is the core of the
operating system. The loaded kernel initializes hardware and starts the &systemd; process. This is the first process that runs
on the system. &systemd; starts the other system services, such as networking service, the login manager, etc. that
are required to bring the system up and running. Theses services also include mounting filesystems, probing hardware
initiating and terminating services, etc. </para>
<para>&systemd; runs these services parallelly. The login manager is displayed when all the required services are
  started and running. You can log in and start using the system. &systemd; runs in the background, managing and
  controlling the system services as required. </para>
    </abstract>   </info>
 <sect1>
  <title>System boot performance analysis</title>
  <para>You can use the <command>systemd-analyze</command> command to analyze the performance of the system
    boot process using &systemd;. The command can also be used to retrieve other state and trace information
    from the system and service manager. It is also used to check that unit files are correct and access special functions
    useful for advanced system manager debugging. </para>
    <para>Some examples include:</para>
    <variablelist>
      <varlistentry>
        <term><emphasis>View the time it takes for the system to boot</emphasis></term>
        <listitem>
<screen>&prompt.user;systemd-analyze time
Startup finished in 3.404s (kernel) + 2.415s (initrd) + 13.125s (userspace) = 18.945s
graphical.target reached after 13.117s in userspace
</screen>
        </listitem>
      </varlistentry>
      <varlistentry>
      <term><emphasis>View a high level overview of the boot process, which includes
        services that are started and the time it takes for each service to start.</emphasis></term>
      <listitem>
<screen>&prompt.user;systemd-analyze critical-chain
  The time when unit became active or started is printed after the "@" character.
  The time the unit took to start is printed after the "+" character.

  graphical.target @13.117s
  └─multi-user.target @13.117s
    └─getty.target @13.117s
      └─getty@tty1.service @13.116s
        └─plymouth-quit-wait.service @10.775s +2.338s
          └─systemd-user-sessions.service @10.769s +3ms
            └─remote-fs.target @10.764s
              └─iscsi.service @10.747s +16ms
                └─network-online.target @10.744s
                  └─NetworkManager-wait-online.service @1.547s +9.197s
                    └─NetworkManager.service @1.507s +37ms
                      └─network-pre.target @1.504s
                        └─wpa_supplicant.service @2.341s +5ms
                          └─dbus.service @1.042s
                            └─basic.target @1.036s
                              └─sockets.target @1.036s
                                └─snapd.socket @1.035s +590us
                                  └─sysinit.target @1.030s
                                    └─systemd-update-utmp.service @1.025s +5ms
                                      └─auditd.service @976ms +47ms
                                        └─systemd-tmpfiles-setup.service @964ms +9ms
                                          └─local-fs.target @962ms
                                            └─snapd.mounts.target @961ms
                                              └─snap-core18-2796.mount @417ms +543ms
                                                └─dev-loop9.device @961ms +628us
</screen>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term><emphasis>View a list of services started during the boot process and displayed according to
        the time taken by each service</emphasis></term>
      <listitem>
<screen>&prompt.user;systemd-analyze blame
  9.197s NetworkManager-wait-online.service
  4.002s fwupd.service
  2.338s plymouth-quit-wait.service
  1.282s dracut-pre-udev.service
  1.062s sys-devices-platform-serial8250-tty-ttyS0.device
  1.062s dev-ttyS0.device
  1.061s dev-ttyS1.device
  1.061s sys-devices-platform-serial8250-tty-ttyS1.device
  1.060s dev-ttyS11.device
  1.060s sys-devices-platform-serial8250-tty-ttyS11.device
  1.059s sys-devices-platform-serial8250-tty-ttyS13.device
  1.059s dev-ttyS13.device
  1.059s sys-devices-platform-serial8250-tty-ttyS10.device
  1.059s dev-ttyS10.device
  1.058s sys-devices-platform-serial8250-tty-ttyS14.device
  1.058s dev-ttyS14.device
  1.058s dev-ttyS12.device
  1.058s sys-devices-platform-serial8250-tty-ttyS12.device
  1.056s sys-devices-platform-serial8250-tty-ttyS17.device
</screen>
      </listitem>
    </varlistentry>
      </variablelist>
 </sect1>

</topic>
