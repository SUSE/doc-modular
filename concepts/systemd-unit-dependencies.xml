<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<!-- refers to legacy doc: <add github link to legacy doc piece, if applicable> -->
<!-- point back to this document with a similar comment added to your legacy doc piece -->
<!-- refer to README.md for file and id naming conventions -->
<!-- metadata is dealt with on the assembly level -->
<topic xml:id="concept-unit-dependencies"
 role="concept" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>Unit dependencies and order</title><!-- can be changed via merge in the assembly -->
    <!--add author's email address-->
    <meta name="maintainer" content="amrita.sakthivel@suse.com" its:translate="no"/>
    <abstract><!-- can be changed via merge in the assembly -->
      <para>
&systemd; has two types of dependencies: requirement and order dependencies. Requirement dependencies specify
which other units must be either started or stopped when activating a unit.
Order dependencies specify the order in which units must be started.
      </para>
    </abstract>
  </info>
  <para> <emphasis>Unit dependencies</emphasis></para>
  <para>Unit files have the dependencies feature. A unit may want or require one or more other units before it can run.
    These dependencies are set in unit files with the directives <literal>Wants</literal> and <literal>Requires</literal>.</para>
    <variablelist>
      <varlistentry>
        <term><literal>Wants</literal></term>
        <listitem><para>For example, if unit A has <literal>Wants=unit B</literal>, when unit A is
          run, unit B runs as well. But if unit B starts successfully or not, does not have an influence on unit A running
          successfully.
        </para></listitem>
      </varlistentry>
      <varlistentry>
        <term><literal>Requires</literal></term>
        <listitem><para>If unit A has <literal>Requires=unit B</literal>, both units run but if unit B does not run successfully,
         unit A is deactivated. It does not matter if the processes of unit A would have run successfully.
        </para></listitem>
      </varlistentry>
    </variablelist>
    <para><emphasis>Unit order</emphasis> </para>
    <para>Without proper instructions, &systemd; can run a group of units at the same time. Starting services in the right order
      is important for a good functioning of the Linux system. You can arrange the order with the unit file directives <literal>Before</literal>
       and <literal>After</literal>.</para>
       <variablelist>
        <varlistentry>
          <term><literal>Before</literal></term>
          <listitem><para>For example, if unit A has <literal>Before=unit B</literal>, when both units are run, unit A is executed fully
            before unit B.
          </para></listitem>
        </varlistentry>
        <varlistentry>
          <term><literal>After</literal></term>
          <listitem><para>If unit A has <literal>After=unit B</literal>, when both units are run, unit B is executed fully
            before unit A.
          </para></listitem>
        </varlistentry>
      </variablelist>
</topic>
