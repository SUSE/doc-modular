<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<!-- refers to legacy doc: <add github link to legacy doc piece, if applicable> -->
<!-- point back to this document with a similar comment added to your legacy doc piece -->
<!-- refer to README.md for file and id naming conventions -->
<!-- metadata is dealt with on the assembly level -->
<topic xml:id="type-unit-file"
 role="concept" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>Unit file types</title>
      <meta name="maintainer" content="amrita.sakthivel@suse.com" its:translate="no"/>
    <abstract>
     <para>
      You can determine the type of a unit by its file extension. &systemd; categorizes units according to the type of resource they describe.
      </para>
    </abstract>
      </info>

  <para>Types of unit files available for &systemd;:</para>
  <variablelist>
    <varlistentry>
      <term><literal>.service</literal></term>
      <listitem>
        <para>
          Describes how to manage a service or application.
          This includes how to start or stop the service, reload its configuration file (if applicable),
          under what conditions the service starts automatically,and the dependency or the hierarchy information for related unit files.
         </para>
               </listitem>
    </varlistentry>
    <varlistentry>
      <term><literal>.scope</literal></term>
      <listitem>
        <para>
         Automatically created by &systemd; from the information received from the D-Bus interface.
         and is used manage sets of system processes that are created externally.
         </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term><literal>.path</literal></term>
      <listitem>
        <para>
       Defines a path for path based activation.
        By default, a <literal>.service</literal> unit file of the same base name is started
        when the path reaches a specified state.
        <literal>inotify</literal> is a kernel API that is used by programs
        that want to be notified about changes to files.
         </para>
              </listitem>
    </varlistentry>
    <varlistentry>
      <term><literal>.snapshot</literal></term>
      <listitem>
        <para>
        The <command>systemctl snapshot</command> command automatically creates a <literal>.snapshot</literal> unit file.
        This command creates temporary snapshots of the current state of the system.
        You can modify the current state of the system after making changes. Snapshots are used for rolling back temporary states.
        </para>
              </listitem>
    </varlistentry>
    <varlistentry>
      <term><literal>.timer</literal></term>
      <listitem>
        <para>
        Defines a timer that is managed by &systemd;. This is similar to a cron job for delayed or scheduled activation.
        A unit file with the same name, but with file extension <filename>.service</filename> is started when the timer is reached.
        </para>
              </listitem>
    </varlistentry>
    <varlistentry>
      <term><literal>.slice</literal></term>
      <listitem>
        <para>
        Associate Linux Control Group nodes, which allow resources
        to be either assigned or restricted to any processes associated with the slice.
         The name indicates the hierarchy within the control group tree. Units are placed in slices by default depending on their type.
         </para>
              </listitem>
    </varlistentry>
    <varlistentry>
      <term><literal>.target</literal></term>
      <listitem>
        <para>
         Provides synchronization for other units during a boot up,
          a change in state or brings the system to a new state. Other units specify their relation to targets
          in order to sync with the target's operations.
                </para>
              </listitem>
    </varlistentry>
    <varlistentry>
      <term><literal>.socket</literal></term>
      <listitem>
        <para>
         Describes a network, an IPC socket, or a FIFO buffer that &systemd; uses for socket-based activation.
          There is an associated <literal>.service</literal> file that starts when an activity is seen on the socket that this unit defines.
                </para>
              </listitem>
    </varlistentry>
    <varlistentry>
      <term><literal>.device</literal></term>
      <listitem>
        <para>
        Defines a device that has been designated for &systemd; management by <literal>udev</literal>
        or <literal>sysfs</literal> file system. Not all devices have the <literal>.device</literal> file.
        This unit file is required when ordering, mounting, or accessing a device.
         </para>
              </listitem>
    </varlistentry>
    <varlistentry>
      <term><literal>.swap</literal></term>
      <listitem>
        <para>
          Defines the swap space on the system.
          The name of the unit file must reflect the device or file path of the space.
          </para>
              </listitem>
    </varlistentry>
    <varlistentry>
      <term><literal>.mount</literal></term>
      <listitem>
        <para>
         Defines a mount point on the system to be managed by &systemd;.
          This file is named after the mount path, with the slashes changed to dashes.
          Entries within <filename>/etc/fstab</filename> can have units created automatically.
                </para>
              </listitem>
    </varlistentry>
    <varlistentry>
      <term><literal>.automount</literal></term>
      <listitem>
        <para>
         Defines a mount point that is automatically mounted. Name the file after
         the mount point that it refers to. A matching <literal>.mount</literal> unit file is required
         to define the specifics of the mount.
         </para>
              </listitem>
    </varlistentry>
    </variablelist>
</topic>
