<?xml version="1.0" encoding="UTF-8"?>
<!-- This file originates from the project https://github.com/openSUSE/doc-kit -->
<!-- This file can be edited downstream. -->
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<!-- refers to legacy doc: <add github link to legacy doc piece, if applicable> -->
<!-- point back to this document with a similar comment added to your legacy doc piece -->
<!-- refer to README.md for file and id naming conventions -->
<!-- metadata is dealt with on the assembly level -->
<topic xml:id="understanding-agama-installation-profiles"
 role="concept" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>Understanding &agama; installation profiles</title>
    <!-- can be changed via merge in the assembly -->
    <!--add author's email address-->
    <meta name="maintainer" content="souvik.sarkar@suse.com" its:translate="no"/>
    <abstract>
      <!-- can be changed via merge in the assembly -->
      <para>
        For automated installations, &agama; relies on a <emphasis>profile</emphasis>, which is a
        configuration file that specifies how the system should be set up. This profile describes
        various aspects of the installation, including partitioning, networking, software
        selection, and other options. The concept of using a profile for automated installation is
        similar to Auto&yast;. &agama; focuses specifically on the installation process itself and
        delegates further system configuration to other tools. &agama; aims for a high level of
        backward compatibility with Auto&yast; profiles for automated installations.
      </para>
      <note>
        <title>Difference between &agama; and Auto&yast; profiles</title>
        <para>
          &agama; and Auto&yast; profiles are largely compatible for all common use cases. However,
          &agama; profiles are not fully compatible with Auto&yast; profiles, and cannot be used as
          a drop-in replacement without checking the compatibility. There are certain aspects of
          the Auto&yast; profiles that are currently supported in &agama; profiles, or may be
          supported in the future. However, there are certain other aspects that are neither
          currently supported in &agama; profiles, nor will be supported in the future. For more
          information, refer to <xref linkend="autoyast-agama-compatibility-reference"></xref>.
        </para>
      </note>
    </abstract>
  </info>
  <section xml:id="introduction-agama-installation-profile-structure">
    <title>Introduction to the &agama; profile structure</title>
    <para>
      The &agama; profile configuration is defined using a JSON document. It contains several sections
      that are necessary for describing the installation parameters for a customized system. At a
      high level, the profile consists of the following sections:
    </para>
<screen>
{
  "product": {}, <co xml:id="product"/>
  "root": {}, <co xml:id="root"/>
  "user": {}, <co xml:id="user"/>
  "localization": {}, <co xml:id="localization"/>
  "hostname": {}, <co xml:id="hostname"/>
  "software": {}, <co xml:id="software"/>
  "storage": {}, <co xml:id="storage"/>
  "bootloader": {}, <co xml:id="bootloader"/>
  "network": {}, <co xml:id="network"/>
  "security": {}, <co xml:id="security"/>
  "scripts": {}, <co xml:id="scripts"/>
  "files": {}, <co xml:id="files"/>
  "legacyAutoyastStorage": {}, <co xml:id="legacyAutoyastStorage"/>
  "iscsi": {}, <co xml:id="iscsi"/>
  "dasd": {} <co xml:id="dasd"/>
}
</screen>
    <calloutlist>
      <callout arearefs="product">
        <para>
          <literal>product</literal>: Identifies the OS/product to be installed.
        </para>
      </callout>
      <callout arearefs="root">
        <para>
          <literal>root</literal>: Root credentials for administrative access.
        </para>
      </callout>
      <callout arearefs="user">
        <para>
          <literal>user</literal>: First non-root user account.
        </para>
      </callout>
      <callout arearefs="localization">
        <para>
          <literal>localization</literal>: Language, keyboard, and time zone settings.
        </para>
      </callout>
      <callout arearefs="hostname">
        <para>
          <literal>hostname</literal>: Static/transient hostname settings.
        </para>
      </callout>
      <callout arearefs="software">
        <para>
          <literal>software</literal>: Packages and patterns to be installed.
        </para>
      </callout>
      <callout arearefs="storage">
        <para>
          <literal>storage</literal>: Partitioning and mount configuration.
        </para>
      </callout>
      <callout arearefs="bootloader">
        <para>
          <literal>bootloader</literal>: Bootloader config and kernel params.
        </para>
      </callout>
      <callout arearefs="network">
        <para>
          <literal>network</literal>: Network interface configuration.
        </para>
      </callout>
      <callout arearefs="security">
        <para>
          <literal>security</literal>: SSL certs and other security settings.
        </para>
      </callout>
      <callout arearefs="scripts">
        <para>
          <literal>scripts</literal>: Pre/post install scripting.
        </para>
      </callout>
      <callout arearefs="files">
        <para>
          <literal>files</literal>: Inject additional files post-install.
        </para>
      </callout>
      <callout arearefs="legacyAutoyastStorage">
        <para>
          <literal>legacyAutoyastStorage</literal>: Support for the legacy &ay; JSON-style storage.
        </para>
      </callout>
      <callout arearefs="iscsi">
        <para>
          <literal>iscsi</literal>: iSCSI disk/target configuration.
        </para>
      </callout>
      <callout arearefs="dasd">
        <para>
          <literal>dasd</literal>: DASD disk support for IBM Z (s390x).
        </para>
      </callout>
    </calloutlist>
    <para>
      You can also describe profiles using Jsonnet, which is a superset of JSON. Jsonnet offers
      features like variables, functions and more convenient syntax, making profiles more readable,
      concise, and dynamic for injecting hardware information at runtime.
    </para>
    <para>
      For more information on the JSON and Jsonnet profiles, refer to the resources mentioned in
      <xref linkend="more-info-automated-installation-agama"></xref>. The upstream
      resources usually contain most updated information and examples about the profiles.
    </para>
  </section>
  <section xml:id="minimal-example-agama-installation-profile">
    <title>A minimal example of an &agama; profile</title>
    <para>
      A minimal &agama; JSON profile must at least include sections for product identification,
      product registration, and credentials for the root user. &agama; uses the defaults for the
      rest of the profile. As a best practice, you should also configure the following:
    </para>
    <simplelist><member>A host name</member><member>
      A non-root user
     </member><member>
      Minimal localization settings
     </member>
    </simplelist>
    <example xml:id="agama-minimal-profile">
      <title>A minimal &agama; profile for automated installation</title>
<screen>
{
  "product": {
    "id": "<replaceable>&productname; &productnumber;</replaceable>",
    "registrationCode": "<replaceable>REGISTRATION-CODE</replaceable>",
    "registrationEmail": "<replaceable>EMAIL</replaceable>",
  },
  "hostname": {
    "static": "<replaceable>STATIC-HOSTNAME</replaceable>",
    "transient": "<replaceable>TRANSIENT-HOSTNAME</replaceable>"
  },
  "root": {
    "hashedPassword": true,
    "password": "<replaceable>HASHED-ROOT-PASSWORD</replaceable>", <co xml:id="hashed-password"></co>
    "sshPublicKey": "<replaceable>SSH-PUBLIC-KEY</replaceable>", <co xml:id="ssh-pub-key"></co>
  },
  "user": {
    "hashedPassword": false,
    "autologin": false,
    "fullName": "<replaceable>FULL-NAME</replaceable>",
    "userName": "<replaceable>USERNAME</replaceable>",
    "password": "<replaceable>PLAINTEXT-PASSWORD</replaceable>"
  },
  "localization": {
    "language": "<replaceable>LANGUAGE</replaceable>",
    "keyboard": "<replaceable>KEYBOARD-LAYOUT</replaceable>",
    "timezone": "<replaceable>TIMEZONE</replaceable>"
  }
}
</screen>
      <calloutlist>
        <callout arearefs="hashed-password">
          <para>
            You can generate a hashed password by running the following command:
          </para>
<screen>&prompt.sudo;<command>openssl passwd -6</command></screen>
        </callout>
        <callout arearefs="ssh-pub-key">
          <para>
            You can generate an SSH public key by running the following command:
          </para>
<screen>&prompt.sudo;<command>ssh-keygen -t rsa -b 4096 -C "<replaceable>YOUR-EMAIL@EXAMPLE.COM</replaceable>"
</command></screen>
          <para>
            Based on your requirements, choose the key type and the key size. However, it is better
            to adopt stronger security.
          </para>
        </callout>
      </calloutlist>
    </example>
    <para>
      To evaluate the correctness of the profile, run the following command:
    </para>
<screen>&prompt.sudo;<command>agama profile validate <replaceable>AGAMA-PROFILE</replaceable>.json</command></screen>
  </section>
</topic>
