<?xml version="1.0" encoding="UTF-8"?>
<!-- This file originates from the project https://github.com/openSUSE/doc-kit -->
<!-- This file can be edited downstream. -->
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<!-- replaces https://susedoc.github.io/doc-sle/main/html/SLES-virtualization/chap-virtualization-introduction.html -->
<topic xml:id="virtualization-introduction"
 role="concept" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>Introduction to virtualization</title>
    <meta name="maintainer" content="tbazant@suse.com" its:translate="no"/>
    <abstract>
      <para>
        Virtualization is a technology that provides a way for a machine (&vmhost;) to run another
        operating system (&vmguest;) on top of the host operating system.
      </para>
    </abstract>
  </info>
  <section xml:id="how-it-works-virtualization">
    <title>How does virtualization work?</title>
    <para>
      The primary component of &vmhost; that enables virtualization is a
      <emphasis>hypervisor</emphasis>. A hypervisor is a layer of software that runs directly on
      &vmhost;'s hardware. It controls platform resources, sharing them among multiple &vmguest;s
      and their operating systems by presenting virtualized hardware interfaces to each &vmguest;.
      &productname; offers two types of hypervisors: &kvm; and &xen;.
    </para>
    <figure xml:id="virtualization-schema">
      <title>A general schema of virtualization</title>
      <mediaobject>
        <imageobject role="html">
          <imagedata fileref="virtualization-schema.png"/>
        </imageobject>
        <imageobject role="fo">
          <imagedata fileref="virtualization-schema.png" width="85%"/>
        </imageobject>
      </mediaobject>
    </figure>
    <section xml:id="virtualization-modes">
<!-- replaces https://susedoc.github.io/doc-sle/main/html/SLES-virtualization/chap-virtualization-introduction.html#sec-virtualization-introduction-fvpv -->
      <title>Virtualization modes</title>
      <para>
        There are two basic modes of hosting &vmguest;s on virtual machines&mdash;full
        virtualization mode and paravirtual mode.
      </para>
      <variablelist>
        <varlistentry xml:id="virtualization-mode-full">
          <term>Full virtualization (FV)</term>
          <listitem>
            <para>
              FV lets virtual machines run unmodified operating systems. It uses either Binary
              Translation or hardware-assisted virtualization technology, such as AMD*
              Virtualization or Intel* Virtualization Technology, to improve performance on
              processors that support it. In FV mode, &vmguest; is also called the <emphasis>Hardware
              Virtual Machine</emphasis> (HVM).
            </para>
            <tip>
              <para>
                Certain guest operating systems hosted in full virtualization mode can be
                configured to use drivers from the SUSE Virtual Machine Drivers Pack (VMDP) instead
                of drivers included in the operating system. Running virtual machine drivers
                improves performance on guest operating systems, such as Windows Server 2003.
              </para>
            </tip>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Paravirtualization (PV)</term>
          <listitem>
            <para>
              PV normally requires that guest operating systems are modified for the virtualization
              environment. &vmguest;s running in paravirtual mode have better performance than
              those running under full virtualization. Operating systems currently modified to run
              in paravirtual mode are called <emphasis>paravirtualized</emphasis> operating systems
              and include &productnameshort;.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>PV on HVM (PVHVM)</term>
          <listitem>
            <para>
              PVHVM enhances HVM (see <xref linkend="virtualization-mode-full"/>) with
              paravirtualized drivers, and handling of paravirtualized interrupts and timers.
            </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
    <section xml:id="virtualization-scenarios">
<!-- replaces https://susedoc.github.io/doc-sle/main/html/SLES-virtualization/cha-virtualization-scenarios.html -->
      <title>Virtualization scenarios</title>
      <para>
        Virtualization can provide the following capabilities:
      </para>
      <variablelist>
        <varlistentry>
          <term>Server consolidation</term>
          <listitem>
            <para>
              Many servers can be replaced by one physical server, so that hardware is
              consolidated, and guest operating systems are converted to virtual machines. This
              also supports running legacy software on new hardware.
            </para>
            <itemizedlist>
              <listitem>
                <para>
                  Better use of not fully utilized resources.
                </para>
              </listitem>
              <listitem>
                <para>
                  Fewer server locations needed.
                </para>
              </listitem>
              <listitem>
                <para>
                  More efficient use of computer resources with multiple workloads on the same
                  server.
                </para>
              </listitem>
              <listitem>
                <para>
                  Simplifies data center infrastructure.
                </para>
              </listitem>
              <listitem>
                <para>
                  Simplifies moving workloads to other hosts, avoiding service downtime.
                </para>
              </listitem>
              <listitem>
                <para>
                  Faster and more agile virtual machine provisioning.
                </para>
              </listitem>
              <listitem>
                <para>
                  Multiple guest operating systems can run on a single host.
                </para>
              </listitem>
            </itemizedlist>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Isolation</term>
          <listitem>
            <para>
              Guest operating systems are fully isolated from the host running them. Therefore, if
              there are problems inside virtual machines, the host is not harmed. Also, problems
              inside one VM do not affect other VMs. No data is shared between VMs.
            </para>
            <itemizedlist>
              <listitem>
                <para>
                  Secure Boot can be used for VMs.
                </para>
              </listitem>
              <listitem>
                <para>
                  KSM should be avoided.
                </para>
              </listitem>
              <listitem>
                <para>
                  Individual CPU cores can be assigned to VMs.
                </para>
              </listitem>
              <listitem>
                <para>
                  Hyper-threading (HT) should be disabled to avoid potential security issues.
                </para>
              </listitem>
              <listitem>
                <para>
                  VMs should not share networks, storage, or network hardware.
                </para>
              </listitem>
              <listitem>
                <para>
                  Using advanced hypervisor features, such as PCI pass-through or NUMA, adversely
                  affects VM migration capabilities.
                </para>
              </listitem>
              <listitem>
                <para>
                  Using paravirtualization and <literal>virtio</literal> drivers generally
                  improves VM performance and efficiency.
                </para>
              </listitem>
            </itemizedlist>
            <para>
              AMD provides specific features regarding the security of virtualization.
<!-- link to the SEV doc? -->
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Disaster recovery</term>
          <listitem>
            <para>
              The hypervisor can make snapshots of VMs, enabling restoration to a known good state,
              or to any desired earlier state. Since virtualized operating systems are less
              dependent on hardware configuration than those running directly on bare metal, these
              snapshots can be restored onto different server hardware so long as it is running the
              same hypervisor.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Dynamic load balancing</term>
          <listitem>
            <para>
              Live migration can be used to load balance your services across your infrastructure
              by moving VMs from busy hosts to those with spare capacity, on demand.
            </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
  </section>
  <section xml:id="benefits-virtualization">
    <title>Benefits of virtualization</title>
    <para>
      Virtualization brings a lot of advantages while providing the same service as a hardware
      server.
    </para>
    <para>
      Virtualization reduces the cost of your infrastructure. Servers are mainly used to provide a
      service to a customer. A virtualized operating system can provide the same service but with
      the following advantages:
    </para>
    <itemizedlist mark="bullet" spacing="normal">
      <listitem>
        <para>
          Less hardware: you can run several operating systems on one host, therefore all hardware
          maintenance is reduced.
        </para>
      </listitem>
      <listitem>
        <para>
          Less power/cooling: less hardware means you do not need to invest more in electric power,
          backup power, and cooling if you need more service.
        </para>
      </listitem>
      <listitem>
        <para>
          Save space: your data center space is saved because you do not need more hardware servers
          (fewer servers than services running).
        </para>
      </listitem>
      <listitem>
        <para>
          Less management: using a &vmguest; simplifies the administration of your infrastructure.
        </para>
      </listitem>
      <listitem>
        <para>
          Agility and productivity: virtualization provides <emphasis>migration</emphasis>
          capabilities, <emphasis>live migration</emphasis> and <emphasis>snapshots</emphasis>.
          These features reduce downtime and bring an easy way to move your service from one place
          to another without any service interruption.
        </para>
      </listitem>
    </itemizedlist>
  </section>
</topic>
