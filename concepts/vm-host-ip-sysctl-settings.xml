<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
[
<!ENTITY % entities SYSTEM "../common/generic-entities.ent">
%entities;
]>
<!-- refers to https://github.com/SUSE/doc-sle/blob/main/xml/systemd.xml [sec-boot-systemd-timer-units] -->
<topic xml:id="vm-host-ip-sysctl-settings"
       role="concept" xml:lang="en"
       xmlns="http://docbook.org/ns/docbook" version="5.2"
       xmlns:its="http://www.w3.org/2005/11/its"
       xmlns:xi="http://www.w3.org/2001/XInclude"
       xmlns:xlink="http://www.w3.org/1999/xlink"
       xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>IP <command>sysctl</command> settings for the multihome host</title>
    <meta name="maintainer" content="shalaka.harne@suse.com" its:translate="no"/>
    <abstract>
      <para>
        System-level networking parameters in Linux are stored in <filename>/proc/sys/net/</filename> and can be managed using the <command>sysctl</command> command or by modifying configuration files.</para>
    </abstract>
  </info>
  <section xml:id="vm-host-ipsysctl">
    <title>The <command>sysctl</command> command variables</title>
  <para>The <command>sysctl</command> variables offered by the Linux kernel are documented  <link xlink:href="https://www.kernel.org/doc/Documentation/networking/ip-sysctl.txt">here</link>.</para>
<para>The following <literal>net.ipv4.conf.all.arp_*</literal> variables affect the
<literal>arp</literal> behavior on a multihome host.</para> 
<para><literal>arp_announce = 0</literal></para>
<itemizedlist>
<listitem>
  <para> Define different restriction levels for announcing the local source IP address 
from IP packets in ARP requests sent on the interface:</para>
    <orderedlist>
      <listitem><para><literal>0</literal> (default) Use any local address, configured on any interface.</para></listitem>
      <listitem><para><literal>1</literal> Try to avoid local addresses that are not in the target's
        subnet for this interface. This mode is useful when target hosts reachable via this interface 
        require the source IP address in ARP requests to be part of their logical network configured
        on the receiving interface. When generating the request, all subnets that include the target 
        IP are checked. If such a subnet exists, the source address is preserved. Otherwise,
        the source address is selected according to the rules for level 2.</para></listitem>
      <listitem><para><literal>2</literal> Always use the best local address for this target.
        In this mode, the source address in the IP packet is ignored, and the preferred local 
        address is selected from the outgoing interface that includes the target IP address. 
        If no suitable address is found, the first local address on the outgoing interface or 
        other interfaces is used, hoping to receive a reply.</para></listitem>
    </orderedlist>
      <para>The max value from <literal>conf/{all,interface}/arp_announce</literal> is used.</para>
      <para>Increasing the restriction level gives a better chance of
        receiving an answer from the resolved target, while decreasing
        the level announces more valid sender information.</para>
</listitem>
<listitem><para><literal>aarp_ignore = 0</literal></para>
<para>Define different modes for sending replies in response to received ARP requests 
that resolve local target IP addresses:</para>
    <orderedlist>
      <listitem><para><literal>0</literal> (default) Reply to requests for any local target IP address,
        configured on any interface.</para></listitem>
      <listitem><para><literal>1</literal> Reply only if the target IP address is configured
        on the incoming interface.</para></listitem>
      <listitem><para><literal>2</literal> Reply only if the target IP address is configured
        on the incoming interface and both it and the sender's IP address are in the same 
        subnet on this interface.</para></listitem>
      <listitem><para><literal>3</literal>Do not reply to requests for local addresses configured with
        scope host; only resolutions for global and link addresses are replied.</para></listitem>
      <listitem><para><literal>4â€“7</literal> Reserved.</para></listitem>
      <listitem><para><literal>8</literal>Do not reply to requests for any local address.</para></listitem>
    </orderedlist>
        <para>The max value from <literal>conf/{all,interface}/arp_ignore</literal> is used
        when ARP requests are received on the {interface}.</para>
      </listitem>
      <listitem><para><literal>arp_filter = 0</literal></para>
<para>Controls ARP response behavior for interfaces on the same subnet:</para>
    <orderedlist>
      <listitem><para><literal>0</literal> (default) The kernel can respond to ARP requests
        with addresses from other interfaces. This increases the chance of successful 
        communication. IP addresses are owned by the complete host on Linux, not by 
        particular interfaces. In more complex setups like load-balancing, this behavior 
        can cause problems.</para></listitem>
      <listitem><para><literal>1</literal> Each interface responds only if the kernel would
        route the packet through it. Requires source-based routing and ensures ARP replies 
        are interface-specific.</para></listitem>
    </orderedlist>
    
        <para><literal>arp_filter</literal> for the interface will be enabled if at least one of
      <literal>conf/{all,interface}/arp_filter</literal> is set to TRUE;
      otherwise it is disabled.</para>
      </listitem>
</itemizedlist>
<para>Additionally, the <literal>net.ipv4.conf.all.rp_filter</literal> settings permit filtering
of L3 / IPv4 packets using reverse routing table lookups:</para>
<itemizedlist>
  <listitem><para><literal>rp_filter = 0</literal></para>
   <para>Modes for source validation:</para>
    <orderedlist>
      <listitem><para><literal>0</literal> No source validation.</para></listitem>
      <listitem><para><literal>1</literal> Strict mode (RFC3704). Each incoming
        packet is tested against the FIB. If the interface is not the best reverse path, 
        the packet check fails, and the packet is discarded.</para></listitem>
      <listitem><para><literal>2</literal> Loose mode (RFC3704). Each incoming
        packet's source address is tested against the FIB, and if it is not
        reachable via any interface, the packet check fails.</para></listitem>
    </orderedlist>
    <para>Current recommended practice in RFC3704 is to enable strict mode
      to prevent IP spoofing from DDoS attacks. If using asymmetric routing
      or other complicated routing, loose mode is recommended.</para>
    <para>The max value from <literal>conf/{all,interface}/rp_filter</literal> is used
      when doing source validation on the interface.</para>
    <para>The default value is <literal>0</literal>. Note that some distributions enable it
      in startup scripts.</para>
  </listitem>
</itemizedlist>
<para>On &suse; systems, <literal>net.ipv4.conf.all.rp_filter = 2</literal> (RFC3704 Loose Reverse Path)
is enabled by default instead of the kernel default to disable it (<literal>rp_filter = 0</literal>).
Unlike the strict <literal>rp_filter = 1</literal> mode, <literal>rp_filter = 2</literal> permits asymmetric routing,
using the same subnet on multiple interfaces (considers <literal>arp_announce=0</literal>, <literal>arp_ignore=0</literal> and <literal>arp_filter=0</literal> defaults).</para>
<para>The <literal>net.ipv4.conf.all.log_martians</literal> enables logging of packets filtered/dropped by
<literal>rp_filter</literal>:</para>
<screen>
log_martians = 0
</screen>
<para>This logs packets with impossible addresses to the kernel log.
        The <literal>log_martians</literal> setting for an interface will be enabled 
        if at least one of <literal>conf/{all,interface}/log_martians</literal> is set to
  <literal>TRUE</literal>. Otherwise, it will be disabled.</para>
</section>
</topic>