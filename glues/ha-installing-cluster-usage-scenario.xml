<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>

<!-- refers to legacy doc: https://github.com/SUSE/doc-sleha/blob/main/xml/article_installation.xml -->

<topic xml:id="ha-installing-cluster-usage-scenario"
 role="glue" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>Usage scenario</title>
    <meta name="maintainer" content="tahlia.richardson@suse.com" its:translate="no"/>
  </info>
  <para>
    This guide describes the setup of a minimal &ha; cluster with the
    following properties:
  </para>
  <itemizedlist>
    <listitem>
      <para condition="threenode">
        Three cluster nodes with passwordless SSH access to each other. Three nodes are required for
        this setup so that diskless &sbd; can handle split-brain scenarios without the help of &qdevice;.
      </para>
      <para condition="twonode">
        Two cluster nodes with passwordless SSH access to each other.
      </para>
    </listitem>
    <listitem>
      <para>
        A floating, virtual IP address that allows clients to connect to the graphical management
        tool &hawk;, no matter which node the service is running on.
      </para>
    </listitem>
    <listitem>
      <para>
        Diskless &sbd; (&sbd.long;) and a software watchdog used as the node fencing mechanism
        to avoid split-brain scenarios.
      </para>
    </listitem>
    <listitem condition="twonode">
      <para>
        &qdevice; working with &qnet; to participate in cluster quorum decisions. &qdevice; and
        &qnet; are required for this setup so that diskless SBD can handle split-brain scenarios
        for the two-node cluster.
      </para>
    </listitem>
    <listitem>
      <para>
        Failover of resources from one node to another if the active host breaks down
        (<emphasis>active/passive</emphasis> setup).
      </para>
    </listitem>
  </itemizedlist>
  <para>
    This is a simple cluster setup with minimal external requirements. You can use this cluster
    for testing purposes or as a basic cluster configuration that you can extend for a production
    environment later.
  </para>
  <orderedlist>
    <title>Overview of procedures</title>
    <listitem>
      <para>
        Review <xref linkend="ha-requirements"/> to make sure you have everything you need.
      </para>
    </listitem>
    <listitem>
      <para>
        Install &sleha; on the cluster nodes with <xref linkend="ha-enabling-extension"/>.
      </para>
    </listitem>
    <listitem condition="twonode">
      <para>
        Install &qnet; on a non-cluster server with <xref linkend="ha-qdevice-setting-up-qnetd"/>.
      </para>
    </listitem>
    <listitem>
      <para>
        Initialize the cluster on the first node with <xref linkend="ha-setting-up-first-node"/>.
      </para>
    </listitem>
    <listitem>
      <para>
        Add more nodes to the cluster with <xref linkend="ha-adding-nodes"/>.
      </para>
    </listitem>
    <listitem>
      <para>
        Log in to the &hawk; Web interface to monitor the cluster with
        <xref linkend="ha-logging-in-hawk"/>.
      </para>
    </listitem>
    <listitem condition="twonode">
      <para>
        Check the status of &qdevice; and &qnet; with <xref linkend="ha-qdevice-showing-quorum-status"/>.
      </para>
    </listitem>
    <listitem>
      <para>
        Perform basic tests to make sure the cluster works as expected with
        <xref linkend="ha-testing-the-cluster-basic"/>.
      </para>
    </listitem>
        <listitem>
      <para>
        Review <xref linkend="ha-installing-cluster-next-steps"/> for advice on expanding the
        cluster for a production environment.
      </para>
    </listitem>
  </orderedlist>
</topic>
