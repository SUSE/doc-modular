<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<!-- refers to legacy doc: <add github link to legacy doc piece, if applicable> -->
<!-- point back to this document with a similar comment added to your legacy doc piece -->
<!-- refer to README.md for file and id naming conventions -->
<!-- metadata is dealt with on the assembly level -->
<topic xml:id="firewalld-troubleshooting"
 role="concept" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>&firewalld; troubleshooting</title>
    <meta name="maintainer" content="amrita.sakthivel@suse.com" its:translate="no"/>
    <abstract>
      <para>
       Troubleshooting &firewalld; involves checking its status, verifying rules, and restarting or reloading the service.
       If you encounter issues, you can enable debugging, examine logs and adjust firewall rules as needed.
      </para>
    </abstract>
  </info>

  <section xml:id="check-firewall-status">
<title>Check &firewalld; status</title>
<itemizedlist><listitem><para>Use the <command>systemctl status</command> command, for example:</para>
<screen>&prompt.sudo;<command>systemctl status  firewalld.service</command>
● firewalld.service - firewalld - dynamic firewall daemon
Loaded: loaded (/usr/lib/systemd/system/firewalld.service; enabled; preset: enabled)
Active: active (running) since Thu 2025-07-17 09:47:36 CEST; 5min ago
Invocation: a7ea482f16d2431fa92d6204c297ebd9
Docs: man:firewalld(1)
Main PID: 921 (firewalld)
Tasks: 2
CPU: 262ms
CGroup: /system.slice/firewalld.service
        └─921 /usr/bin/python3.13 /usr/sbin/firewalld --nofork --nopid</screen>
     </listitem>
     <listitem><para>The <command>firewall-cmd --state</command> command gives a quick status check with <literal>running</literal>,
      <literal>not running</literal> or <literal>RUNNING_BUT_FAILED</literal> outputs. For example:</para>
<screen>&prompt.sudo;<command>firewall-cmd --state</command>
running </screen>
      </listitem>
      <listitem><para>If &firewalld; is not running, use the <command>systemctl start firewalld</command> command.</para>
      <screen>&prompt.sudo; systemctl start firewalld </screen>
        </listitem>
        <listitem><para>If the &firewalld; service is masked, unmask it first, then enable and start it, for example:</para>
         <screen>&prompt.sudo;<command>systemctl unmask --now firewalld</command></screen>
         <screen>&prompt.sudo;<command>systemctl enable firewalld</command> </screen>
         <screen>&prompt.sudo;<command>systemctl start firewalld</command> </screen>
            </listitem>
    </itemizedlist>
    </section>
    <section xml:id="verify-firewall-rules">
      <title>Check &firewalld; rules </title>
      <itemizedlist><listitem><para> The <command>firewall-cmd --list-all-zones</command> command displays all zones and their rules, for example:</para>
<screen>&prompt.sudo;<command>firewall-cmd --list-all-zones</command>
        block
          target: %%REJECT%%
          ingress-priority: 0
          egress-priority: 0
          icmp-block-inversion: no
          interfaces:
          sources:
          services:
          ports:
          protocols:
          forward: yes
          masquerade: no
          forward-ports:
          source-ports:
          icmp-blocks:
          rich rules:

        dmz
          target: default
          ingress-priority: 0
          egress-priority: 0
          icmp-block-inversion: no
          interfaces:
          sources:
          services: ssh
          ports:
          protocols:
          forward: yes
          masquerade: no
          forward-ports:
          source-ports:
          icmp-blocks:
          rich rules:

        docker (active)
          target: ACCEPT
          ingress-priority: 0
          egress-priority: 0
          icmp-block-inversion: no
          [...]
        </screen>
           </listitem>
           <listitem><para>The <command>firewall-cmd --list-ports</command> command shows open ports,for example:</para>
<screen>&prompt.sudo;<command>firewall-cmd --list-ports</command>
22/tcp
</screen>
            </listitem>
            <listitem><para>The <command>firewall-cmd --zone=<replaceable>YOUR_ZONE</replaceable> --list-all.
            </command> command lists ports for specific zones, for example:</para>
<screen>&prompt.sudo;<command>firewall-cmd --zone=dmz --list-all</command>
                dmz
                  target: default
                  ingress-priority: 0
                  egress-priority: 0
                  icmp-block-inversion: no
                  interfaces:
                  sources:
                  services: ssh
                  ports:
                  protocols:
                  forward: yes
                  masquerade: no
                  forward-ports:
                  source-ports:
                  icmp-blocks:
                  rich rules:
                                </screen>
                </listitem>
                    </itemizedlist>
          </section>
          <section xml:id="debug-firewall">
            <title>Debugging &firewalld; </title>
            <itemizedlist><listitem><para> Enable debugging in <filename>/etc/sysconfig/firewalld</filename> by adding <literal>--debug=[level]</literal>
              to <literal>FIREWALLD_ARGS</literal>, for example:</para>
<screen>
&prompt.sudo; vi /etc/sysconfig/firewalld
# firewalld command line args
# possible values: --debug
FIREWALLD_ARGS=--debug=[level]
              </screen>
                 </listitem>
                 <listitem><para>Start &firewalld; with the <literal>--debug</literal>option, for example:</para>
<screen>&prompt.sudo;<command>firewalld --nofork --debug</command>
2025-07-23 11:10:05 DEBUG1: start()
2025-07-23 11:10:05 DEBUG1: Loading firewalld config file '/etc/firewalld/firewalld.conf'
2025-07-23 11:10:05 DEBUG1: CleanupOnExit is set to 'True'
2025-07-23 11:10:05 DEBUG1: CleanupModulesOnExit is set to 'False'
2025-07-23 11:10:05 DEBUG1: IPv6 rpfilter is enabled
2025-07-23 11:10:05 DEBUG1: LogDenied is set to 'off'
2025-07-23 11:10:05 DEBUG1: FirewallBackend is set to 'nftables'
2025-07-23 11:10:05 DEBUG1: FlushAllOnReload is set to 'False'
2025-07-23 11:10:05 DEBUG1: RFC3964_IPv4 is set to 'True'
2025-07-23 11:10:05 DEBUG1: NftablesFlowtable is set to 'off'
2025-07-23 11:10:05 DEBUG1: NftablesCounters is set to 'False'
2025-07-23 11:10:05 DEBUG1: Loading lockdown whitelist
2025-07-23 11:10:05 ipset not usable, disabling ipset usage in firewall. Other set backends (nftables) remain usable.
2025-07-23 11:10:05 iptables-restore and iptables are missing, IPv4 direct rules won't be usable.
2025-07-23 11:10:05 ip6tables-restore and ip6tables are missing, IPv6 direct rules won't be usable.
2025-07-23 11:10:05 ebtables-restore and ebtables are missing, eb direct rules won't be usable.
2025-07-23 11:10:05 DEBUG1: Loading icmptype file '/usr/lib/firewalld/icmptypes/address-unreachable.xml'
2025-07-23 11:10:05 DEBUG1: Loading icmptype file '/usr/lib/firewalld/icmptypes/bad-header.xml'
2025-07-23 11:10:05 DEBUG1: Loading icmptype file '/usr/lib/firewalld/icmptypes/beyond-scope.xml'
2025-07-23 11:10:05 DEBUG1: Loading icmptype file '/usr/lib/firewalld/icmptypes/communication-prohibited.xml'
2025-07-23 11:10:05 DEBUG1: Loading icmptype file '/usr/lib/firewalld/icmptypes/destination-unreachable.xml'
[...]
</screen>
                <para>All log files are available at <filename>/var/log/firewalld</filename>.</para>
                  </listitem>
                  </itemizedlist>
                </section>

  </topic>