<?xml version="1.0" encoding="UTF-8"?>
<!-- This file originates from the project https://github.com/openSUSE/doc-kit -->
<!-- This file can be edited downstream. -->
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook51-profile.xsl"
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE article
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<topic xml:id="reference-ignition-configuration" xml:lang="en"
 role="reference"
 xmlns="http://docbook.org/ns/docbook" version="5.1"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink">
  <info>
    <meta name="maintainer" content="tbazant@suse.com" its:translate="no"/>
    <title>&ignition; configuration examples</title>
  </info>
  <section xml:id="sec-ignition-examples">
    <title>Configuration examples</title>
    <para>
      This section provides several examples of the &ignition; configuration in
       the built-in JSON format.
    </para>
    <important>
      <para>
        <xref linkend="deployment-default-partitioning"/> lists subvolumes that
        are mounted by default when running the pre-built image. If you want to
        add a new user or modify any of the files on a subvolume that is not
        mounted by default, you need to declare such subvolume first so that it
        is mounted as well. Find more details about mounting file systems in
        <xref linkend="sec-storage-filesystem"/>.
      </para>
    </important>
    <note>
      <title>The <literal>version</literal> attribute is mandatory</title>
      <para>
        Each <filename>config.fcc</filename> must include version 1.4.0 or
        lower that is then converted to the corresponding &ignition;
        specification.
      </para>
    </note>
    <section xml:id="sec-ignition-storage">
      <title>Storage configuration</title>
      <para>
        The <literal>storage</literal> attribute is used to configure
        partitions, RAID, define file systems, create files, etc. To define
        partitions, use the <literal>disks</literal> attribute. The
        <literal>filesystems</literal> attribute is used to format partitions
        and define mount points of particular partitions. The
        <literal>files</literal> attribute can be used to create files in the
        file system. Each of the mentioned attributes is described in the
        following sections.
      </para>
      <section xml:id="sec-storage-disks">
        <title>The <literal>disks</literal> attribute</title>
        <para>
          The <literal>disks</literal> attribute is a list of devices that
          enables you to define partitions on these devices. The
          <literal>disks</literal> attribute must contain at least one
          <literal>device</literal>, other attributes are optional. The
          following example uses a single virtual device and divides the
          disk into four partitions:
        </para>
        
<screen>
{
  "ignition": {
    "version": "3.0.0"
  },
  "storage": {
    "disks": [
      {
        "device": "/dev/vda",
        "partitions": [
          {
            "label": "root",
            "number": 1,
            "typeGuid": "4F68BCE3-E8CD-4DB1-96E7-FBCAF984B709"
          },
          {
            "label": "boot",
            "number": 2,
            "typeGuid": "BC13C2FF-59E6-4262-A352-B275FD6F7172"
          },
          {
            "label": "swap",
            "number": 3,
            "typeGuid": "0657FD6D-A4AB-43C4-84E5-0933C84B4F4F"
          },
          {
            "label": "home",
            "number": 4,
            "typeGuid": "933AC7E1-2EB4-4F13-B844-0E14E2AEF915"
          }
        ],
        "wipeTable": true
      }
    ]
  }
}
</screen>
       
      </section>
      <section xml:id="sec-storage-raid">
        <title>The <literal>raid</literal> attribute</title>
        <para>
          The <literal>raid</literal> is a list of RAID arrays. The following
          attributes of <literal>raid</literal> are mandatory:
        </para>
        <variablelist>
          <varlistentry>
            <term>level</term>
            <listitem>
              <para>
                a level of the particular RAID array (linear, raid0, raid1,
                raid2, raid3, raid4, raid5, raid6)
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>devices</term>
            <listitem>
              <para>
                a list of devices in the array referenced by their absolute
                paths
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>name</term>
            <listitem>
              <para>
                a name that will be used for the md device
              </para>
            </listitem>
          </varlistentry>
        </variablelist>
        <para>
         For example:
        </para>
<screen>
{
  "ignition": {
    "version": "3.0.0"
  },
  "storage": {
    "raid": [
      {
        "devices": [
          "/dev/sda",
          "/dev/sdb"
        ],
        "level": "raid1",
        "name": "system"
      }
    ]
  }
}
</screen>        
      </section>
      <section xml:id="sec-storage-filesystem">
        <title>The <literal>filesystems</literal> attribute</title>
        <para>
          <literal>filesystems</literal> must contain the following attributes:
        </para>
        <variablelist>
          <varlistentry>
            <term>device</term>
            <listitem>
              <para>
                the absolute path to the device, typically
                <literal>/dev/sda</literal> in case of physical disk
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term>format</term>
            <listitem>
              <para>
                the file system format (Btrfs, Ext4, xfs, vfat or swap)
              </para>
              <note>
                <para>
                  In case of &productnameshort;, the <literal>root</literal>
                  file system must be formatted to Btrfs.
                </para>
              </note>
            </listitem>
          </varlistentry>
        </variablelist>
        <para>
          The following example demonstrates using the
          <literal>filesystems</literal> attribute. The
          <filename>/opt</filename> directory will be mounted to the
          <literal>/dev/sda1</literal> partition, which is formatted to Btrfs.
          The device will not be erased.
        </para>
        <para>
          For example:
        </para>
<screen>
{
  "ignition": {
    "version": "3.0.0"
  },
  "storage": {
    "filesystems": [
      {
        "device": "/dev/sda1",
        "format": "btrfs",
        "path": "/opt",
        "wipeFilesystem": false
      }
    ]
  }
}
</screen>
        
        <para>
          Normally, a regular user's home directory is located in the
          <filename>/home/<replaceable>USER_NAME</replaceable></filename>
          directory. Since <filename>/home</filename> is not mounted by default
          in the initrd, the mount has to be explicitly defined for the user
          creation to succeed:
        </para>
       
<screen>
{
  "ignition": {
    "version": "3.1.0"
  },
  "passwd": {
    "users": [
      {
        "name": "root",
        "passwordHash": "<replaceable>PASSWORD_HASH</replaceable>",
        "sshAuthorizedKeys": [
          "ssh-rsa <replaceable>SSH_KEY_HASH</replaceable>"
        ]
      }
    ]
  },
  "storage": {
    "filesystems": [
      {
        "device": "/dev/sda3",
        "format": "btrfs",
        "mountOptions": [
          "subvol=/@/home"
        ],
        "path": "/home",
        "wipeFilesystem": false
      }
    ]
  }
}
</screen>       
      </section>
      <section xml:id="sec-storage-files">
        <title>The <literal>files</literal> attribute</title>
        <para>
          You can use the <literal>files</literal> attribute to create any
          files on your machine. Bear in mind that to create files
          outside the default partitioning schema, you need to define the
          directories by using the <literal>filesystems</literal> attribute.
        </para>
        <para>
          In the following example, a host name is created by using the
          <literal>files</literal> attribute. The file
          <filename>/etc/hostname</filename> will be created with the
          <emphasis>sl-micro1</emphasis> host name:
        </para>
        <important>
          <para>
            Keep in mind that JSON accepts file modes in decimal numbers, for
            example, <literal>420</literal>.
          </para>
        </important>
        <para>
          JSON:
        </para>
<screen>
{
  "ignition": {
    "version": "3.0.0"
  },
  "storage": {
    "files": [
      {
        "overwrite": true,
        "path": "/etc/hostname",
        "contents": {
          "source": "data:,sl-micro1"
        },
        "mode": 420
      }
    ]
  }
}
</screen>        
      </section>
      <section xml:id="sec-storage-directories">
        <title>The <literal>directories</literal> attribute</title>
        <para>
          The <literal>directories</literal> attribute is a list of directories
          that will be created in the file system. The
          <literal>directories</literal> attribute must contain at least one
          <literal>path</literal> attribute.
        </para>
        <para>
          For example:
        </para>
<screen>
{
  "ignition": {
    "version": "3.0.0"
  },
  "storage": {
    "directories": [
      {
        "path": "/home/tux",
        "user": {
          "name": "tux"
        }
      }
    ]
  }
}
</screen>        
      </section>
    </section>
    <section xml:id="sec-ignition-users">
      <title>Users administration</title>
      <para>
        The <literal>passwd</literal> attribute is used to add users. As some services, such as &cockpit;, require login using a non-root user, define at
        least one unprivileged user here. Alternatively, you can create such a user from a running
        system as described in <xref linkend="deployment-postinstall-adding-users"/>.
      </para>
      <para>
        To log in to your system, create &rootuser; and a regular user and set their
        passwords. You need to hash the passwords, for example, by
        using the <command>openssl</command> command:
      </para>
<screen>
 openssl passwd -6
 </screen>
      <para>
        The command creates a hash of the password you chose. Use this hash as
        the value of the <literal>password_hash</literal> attribute.
      </para>
      <para>
       For example:
      </para>
<screen>
{
  "ignition": {
    "version": "3.0.0"
  },
  "passwd": {
    "users": [
      {
        "name": "root",
        "passwordHash": "<replaceable>PASSWORD_HASH</replaceable>",
        "sshAuthorizedKeys": [
          "ssh-rsa <replaceable>SSH_KEY_HASH</replaceable> <replaceable>USER</replaceable>@<replaceable>HOST</replaceable>"
        ]
      }
    ]
  }
}
</screen>      
      <para>
        The <literal>users</literal> attribute must contain at least one
        <literal>name</literal> attribute.
        <literal>ssh_authorized_keys</literal> is a list of ssh keys for the
        user.
      </para>
    </section>
    <section xml:id="sec-ignition-systemd">
      <title>Enabling <literal>systemd</literal> services</title>
      <para>
        You can enable &systemd; services by specifying them in the
        <literal>systemd</literal> attribute.
      </para>
      <para>
        For example:
      </para>
<screen>
{
  "ignition": {
    "version": "3.0.0"
  },
  "systemd": {
    "units": [
      {
        "enabled": true,
        "name": "sshd.service"
      }
    ]
  }
}
</screen>      
    </section>
  </section>
</topic>
