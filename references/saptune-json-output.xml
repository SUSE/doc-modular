<?xml version="1.0" encoding="UTF-8"?>
<!-- This file originates from the project https://github.com/openSUSE/doc-kit -->
<!-- This file can be edited downstream. -->
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<!-- refers to legacy doc: <add github link to legacy doc piece, if applicable> -->
<!-- point back to this document with a similar comment added to your legacy doc piece -->
<!-- refer to README.md for file and id naming conventions -->
<!-- metadata is dealt with on the assembly level -->
<topic xml:id="reference-saptune-json-output"
 role="reference" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
   <title>&saptune; machine-readable output</title><!-- can be changed via merge in the assembly -->
    <!--add author's email address-->
    <meta name="maintainer" content="" its:translate="no"/>
    <abstract><!-- can be changed via merge in the assembly -->
      <para>
       Overview of &saptune;'s machine-readable output in the JSON format.
      </para>
    </abstract>
  </info>
  <section xml:id="reference-example-section">
<title>Machine-readable output</title>
    <para>
      Starting with version 3.1, &saptune; supports machine-readable output (JSON) for the following commands:
      </para>
      <itemizedlist>
        <listitem>
          <para>
            <command>saptune [daemon|service] status</command>
          </para>
        </listitem>
        <listitem>
          <para>
            <command>saptune note list|verify|enabled|applied</command>
          </para>
        </listitem>
        <listitem>
          <para>
            <command>saptune solution list|verify|enabled|applied</command>
          </para>
        </listitem>
        <listitem>
          <para>
            <command>saptune status</command>
          </para>
        </listitem>
        <listitem>
          <para>
            <command>saptune version</command>
          </para>
        </listitem>
       <listitem>
          <para>
            <command>saptune check</command> (only starting with &saptune; 3.2)
          </para>
        </listitem>
      </itemizedlist>
    <para>
      The machine-readable output makes it possible to integrate &saptune; into scripts and configuration management solutions.
    </para>
    <para>
      To generate JSON output, add <option>--format json</option> as the first option, for example:
    </para>
<screen>&prompt.user;saptune --format json note applied | jq
{
"$schema": "file:///usr/share/saptune/schemas/1.0/saptune_note_applied.schema.json",
"publish time": "2023-08-29 17:05:45.627",
"argv": "saptune --format json note applied",
"pid": 1538,
"command": "note applied",
"exit code": 0,
"result": {
    "Notes applied": [
    "941735",
    "1771258",
    "1980196",
    "2578899",
    "2684254",
    "2382421",
    "2534844",
    "2993054",
    "1656250"
    ]
},
"messages": []
}</screen>

<para>
  If a command does not yet support JSON output, the command fails with the <literal>result</literal> block set to <literal>"implemented": false</literal>:
</para>
<screen>[+]
&prompt.user;saptune --format json staging status | jq
{
"$schema": "file:///usr/share/saptune/schemas/1.0/saptune_staging_status.schema.json",
"publish time": "2023-08-29 17:08:16.708",
"argv": "saptune --format json staging status",
"pid": 1653,
"command": "staging status",
"exit code": 1,
"result": {
    "implemented": false
},
"messages": []
}</screen>
  </section>
</topic>
