<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<!-- refers to legacy doc: <add github link to legacy doc piece, if applicable> -->
<!-- point back to this document with a similar comment added to your legacy doc piece -->
<!-- refer to README.md for file and id naming conventions -->
<!-- metadata is dealt with on the assembly level -->
<topic xml:id="sudo-best-practices"
 role="reference" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
<info>
  <title>&sudo; best practices</title>
    <meta name="maintainer" content="amrita.sakthivel@suse.com" its:translate="no"/>
    <abstract>
      <para>
      Learn about some of the best practices of &sudo; to control system access and enable users to be productive.
      </para>
    </abstract>
  </info>
   <variablelist>
      <varlistentry>
        <term>Keep custom &sudo; configurations in separate files</term>
        <listitem>
          <para>
            The main policy configuration file for &sudo; is
            <filename>/etc/sudoers</filename>. This file is supplied by the
            system packages, and changes made to it may break updates. Therefore,
            create separate configuration files holding your custom settings
            under the<filename>/etc/sudoers.d/</filename> directory. These are
            pulled in by default by a directive in
            <filename>/etc/sudoers</filename>. For more information, refer to
            <xref linkend="sudo-edit-configuration-custom"/>.
          </para>
        </listitem>
      </varlistentry>
        <varlistentry>
        <term>Limit the &sudo; time-out</term>
        <listitem>
          <para>
            For security reasons you should not give unlimited access to
            &rootuser; privileges. Instead, set a reasonable time-out instead to prevent
            misuse of the &rootuser; account by any intruder. For more
            information, refer to <xref linkend="sudo-change-pw-timeout"/>.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Use the <command>visudo</command> command</term>
        <listitem>
          <para>
           Use the <command>visudo</command> command to safely edit the <filename>/etc/sudoers</filename> file, as it checks the syntax of the file
           before saving the changes. This is a preventive way to correct any errors that can break the system.
           For more information, refer to <xref linkend="sudo-edit-configuration-visudo"/>

          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Manage users in groups rather than individually</term>
        <listitem>
          <para>
            Keep your &sudo; configuration as lean and manageable as possible.
            Manage users by adding them to groups and then granting privileges
            to these groups rather than to the individuals. This allows you to
            add or remove users by simply changing the group settings
            instead of having to look for the user across your configuration.
          </para>
          <para>
            An example rule that allows all users in an example 
            <systemitem>%admingrp</systemitem> group to execute all commands:
          </para>
          <screen>
%admingrp ALL = (ALL) ALL
          </screen>
        </listitem>
      </varlistentry>
      <!-- this is not useful with the current default config. Keep around in case that changes.
      <varlistentry>
        <term>Limit access to &sudo; users</term>
        <listitem>
          <para>
            A good practice is to configure &sudo; to enable users to execute specific commands as required.
            For example, if there is a user or a group of
            users who need to install software, but do
            not need to perform any other task that requires elevated
            privileges, let your settings reflect that. The following rule
            allows &exampleuser_plain; to use any kind of software installation
            utility on &productname;.
          </para>
          <screen>
&exampleuser_plain; ALL = (ALL) PASSWD : /usr/bin/zypper, /usr/bin/rpm, /usr/bin/yast /usr/bin/yast2
          </screen>
        </listitem>
      </varlistentry>
      -->
      <varlistentry>
        <term>Restrict the path for binaries</term>
        <listitem>
          <para>
            Restrict the areas where users can execute commands using the
            <literal>secure_path</literal> directive. The following example
            is the default setting that ships with &productname;.
          </para>
          <screen>
Defaults secure_path="/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/bin:/usr/local/sbin"
          </screen>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Keep &sudo; logging transparent</term>
        <listitem>
          <para>
            &sudo; logs to the standard log file where its log entries may easily
            get overlooked. Add the following rule to your configuration to
            specify a dedicated &sudo; log file.
          </para>
          <screen>
Defaults logfile=/var/log/sudo.log
          </screen>
        </listitem>
      </varlistentry>
    </variablelist>
    </topic>