<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<!-- refers to legacy doc: https://github.com/SUSE/doc-sle/blob/main/xml/adm_sudo.xml -->
<!-- point back to this document with a similar comment added to your legacy doc piece -->
<!-- refer to README.md for file and id naming conventions -->
<!-- metadata is dealt with on the assembly level -->
<topic xml:id="systemctl-commands"
 role="reference" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title><command>systemctl</command> commands</title>
    <!--add author's email address-->
    <meta name="maintainer" content="amrita.sakthivel@suse.com"/>
    <abstract>
      <para>
      The <command>systemctl</command> command is used to examine and control the state of
      &systemd; and service manager.
      </para>
    </abstract>
    </info>
      <para>You can use the following <command>systemctl</command> common commands and refer to
      the <emphasis>man systemctl</emphasis> page.</para>
          <variablelist>
            <title>Viewing &systemd; information</title>
         <varlistentry>
        <term>systemctl list-units</term>
        <listitem>
          <para>
            Lists the &systemd; units. You can use the optional arguments;
            <command>--state=running</command> to show the active units and <command>--type=service</command> to
            show the exited and active units.
          </para>
          <para><emphasis>Example output</emphasis></para>
          <screen>UNIT                                                                 LOAD   ACTIVE SUB       DESCRIPTION           >
proc-sys-fs-binfmt_misc.automount                                                      loaded active running   Arbitrary Executable F>
sys-devices-pci0000:00-0000:00:02.0-drm-card0-card0\x2deDP\x2d1-intel_backlight.device loaded active plugged   /sys/devices/pci0000:0>
sys-devices-pci0000:00-0000:00:0d.2-domain0-0\x2d0.device                              loaded active plugged   /sys/devices/pci0000:0>
sys-devices-pci0000:00-0000:00:0d.2-domain0.device                                     loaded active plugged   /sys/devices/pci0000:0>
sys-devices-pci0000:00-0000:00:14.0-usb3-3\x2d14-3\x2d14:1.0-bluetooth-hci0.device     loaded active plugged   /sys/devices/pci0000:0>
sys-devices-pci0000:00-0000:00:14.3-net-wlan0.device                                   loaded active plugged   Tiger Lake PCH CNVi Wi>
sys-devices-pci0000:00-0000:00:1d.0-0000:05:00.0-nvme-nvme0-nvme0n1-nvme0n1p1.device   loaded active plugged   KBG5AZNV1T02 LA KIOXIA>
sys-devices-pci0000:00-0000:00:1d.0-0000:05:00.0-nvme-nvme0-nvme0n1-nvme0n1p2.device   loaded active plugged   KBG5AZNV1T02 LA KIOXIA>
sys-devices-pci0000:00-0000:00:1d.0-0000:05:00.0-nvme-nvme0-nvme0n1-nvme0n1p3.device   loaded active plugged   KBG5AZNV1T02 LA KIOXIA>
sys-devices-pci0000:00-0000:00:1d.0-0000:05:00.0-nvme-nvme0-nvme0n1-nvme0n1p4.device   loaded active plugged   KBG5AZNV1T02 LA KIOXIA>
. . .</screen>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>systemctl list-unit-files</term>
        <listitem>
          <para>
            Lists the &systemd; units and the status, such as static, generated, disabled, alias, masked, and enabled.
          </para>
          <para><emphasis>Example output</emphasis></para>
          <screen>UNIT FILE                                                           STATE           VENDOR PRESET
            proc-sys-fs-binfmt_misc.automount                                         static          -
            -.mount                                                                   generated       -
            \x2esnapshots.mount                                                       generated       -
            boot-efi.mount                                                            generated       -
            boot-grub2-i386\x2dpc.mount                                               generated       -
            boot-grub2-x86_64\x2defi.mount                                            generated       -
            dev-hugepages.mount                                                       static          -
            dev-mqueue.mount                                                          static          -
            home.mount                                                                generated       -
            opt.mount                                                                 generated       -
            proc-fs-nfsd.mount                                                        static          -
            proc-sys-fs-binfmt_misc.mount                                             disabled        disabled
            root.mount                                                                generated       -
            snap-bare-5.mount                                                         enabled         disabled
            snap-bitwarden-95.mount                                                   enabled         disabled
            snap-bitwarden-96.mount                                                   enabled         disabled
            snap-core18-2785.mount                                                    enabled         disabled
          . . .</screen>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>systemctl list-dependencies</term>
        <listitem>
          <para>
            Lists the dependency tree.
          </para>
          <para><emphasis>Example output</emphasis></para>
          <screen>default.target
            ● ├─ca-certificates.path
            ● ├─display-manager.service
            ● ├─issue-generator.path
            ○ ├─issue-generator.service
            ○ ├─nvmefc-boot-connections.service
            ● ├─smartd_generate_opts.path
            ○ ├─systemd-update-utmp-runlevel.service
            ○ ├─YaST2-Firstboot.service
            ○ ├─YaST2-Second-Stage.service
            ● └─multi-user.target
            ○   ├─after-local.service
            ●   ├─apparmor.service
            ○   ├─appstream-sync-cache.service
            ●   ├─auditd.service
            ●   ├─avahi-daemon.service
            ●   ├─btrfsmaintenance-refresh.path
            ●   ├─chronyd.service
            . . .</screen>
        </listitem>
      </varlistentry>
      <varlistentry>
      <term>systemctl list-dependencies <replaceable>UNIT_FILE</replaceable></term>
      <listitem>
        <para>
          Lists the dependencies of a unit file.
        </para>
        <para><emphasis>Example output</emphasis></para>
        <screen>proc-sys-fs-binfmt_misc.automount
          ● └─-.mount</screen>
      </listitem>
    </varlistentry>
  </variablelist>

    <variablelist>
      <title>Managing &systemd; services</title>
      <varlistentry>
    <term>systemctl status <replaceable>SERVICE</replaceable></term>
  <listitem>
    <para>
      Checks the status of the specific service.
    </para>
    <para><emphasis>Example output</emphasis></para>
    <screen>FOSSLinux.service - FOSSLinux Service
      Loaded: loaded (/etc/systemd/system/FOSSLinux.service; enabled; vendor preset: disabled)
      Active: inactive (dead) since Thu 2023-10-05 04:02:42 EDT; 27s ago
    Main PID: 3409 (code=exited, status=0/SUCCESS)</screen>
  </listitem>
</varlistentry>
<varlistentry>
  <term>systemctl show <replaceable>SERVICE</replaceable></term>
<listitem>
  <para>
    Displays the service information.
  </para>
  <para><emphasis>Example output</emphasis></para>
  <screen>Type=simple
    Restart=no
    NotifyAccess=none
    RestartUSec=100ms
    TimeoutStartUSec=1min 30s
    TimeoutStopUSec=1min 30s
    TimeoutAbortUSec=1min 30s
    TimeoutStartFailureMode=terminate
    TimeoutStopFailureMode=terminate
    RuntimeMaxUSec=infinity
    WatchdogUSec=0
    WatchdogTimestamp=n/a
    WatchdogTimestampMonotonic=0
    RootDirectoryStartOnly=no
    RemainAfterExit=no
    GuessMainPID=yes
    MainPID=0
    ControlPID=0
    FileDescriptorStoreMax=0
    NFileDescriptorStore=0
    StatusErrno=0
    Result=success
    ReloadResult=success
    </screen>
</listitem>
</varlistentry>
<varlistentry>
  <term>systemctl start <replaceable>SERVICE</replaceable></term>
<listitem>
  <para>
    Instead of manually starting the service , use the <command>start</command>command.
    When a change is made to the configuration file, the related service must be started again.
  </para>
</listitem>
</varlistentry>
<varlistentry>
  <term>systemctl stop <replaceable>SERVICE</replaceable></term>
<listitem>
  <para>
    Stops a specific running service.
  </para>
</listitem>
</varlistentry>
<varlistentry>
  <term>systemctl restart <replaceable>SERVICE</replaceable></term>
<listitem>
  <para>
    Instead of manually restarting the service, use the <command>restart</command> command.
    When a change is made to the configuration file, the related service must be restarted again.
  </para>
</listitem>
</varlistentry>
<varlistentry>
  <term>systemctl enable <replaceable>SERVICE</replaceable></term>
<listitem>
  <para>
    Enables the service on boot.
  </para>
</listitem>
</varlistentry>
<varlistentry>
  <term>systemctl disable <replaceable>SERVICE</replaceable></term>
<listitem>
  <para>
    Disables the service at boot.
  </para>
  <para><emphasis>Example output</emphasis></para>
  <screen>Removed /etc/systemd/system/multi-user.target.wants/FOSSLinux.service.</screen>
</listitem>
</varlistentry>
<varlistentry>
  <term>systemctl reload-or-restart <replaceable>SERVICE</replaceable></term>
<listitem>
  <para>
    Reload the service if it supports reloading, otherwise it restarts the service.
    If the service is not running, it is restarted .
  </para>
</listitem>
</varlistentry>
<varlistentry>
  <term>systemctl mask <replaceable>SERVICE</replaceable></term>
<listitem>
  <para>
    When a service is masked, this means the unit file is symlinked to <filename>/dev/null</filename>.
  A symlink for a masked service is created from <filename>/etc/systemd/system</filename> to point to <filename>/dev/null</filename>.
  This makes it impossible to load the service even if another enabled service requires it. It must be stopped manually or
  it continues to run in the background. You can use <command>--runtime</command> option to only mask temporarily until the next
  reboot of the system.
  </para>
  <screen>Created symlink /etc/systemd/system/FOSSLinux.service → /dev/null.</screen>
</listitem>
</varlistentry>
<varlistentry>
  <term>systemctl unmask <replaceable>SERVICE</replaceable></term>
<listitem>
  <para>
   Unmasks the service. It is effective when the system restarts, or starts manually.
  </para>
</listitem>
</varlistentry>
  </variablelist>
  <variablelist>
    <title>Managing system states</title>
    <varlistentry>
      <term>systemctl reboot</term>
      <listitem><para>Reboots the system <literal>reboot.target</literal>.</para></listitem>
    </varlistentry>
    <varlistentry>
      <term>systemctl poweroff</term>
      <listitem><para>Powers off the system <literal>poweroff.target</literal>.</para></listitem>
    </varlistentry>
    <varlistentry>
      <term>systemctl emergency</term>
      <listitem><para>Goes into the emergency mode<literal>emergency.target</literal>.</para></listitem>
    </varlistentry>
    <varlistentry>
      <term>systemctl default</term>
      <listitem><para>Goes back to default target <literal>multi-user.target</literal>.</para></listitem>
    </varlistentry>
      </variablelist>
  </topic>
