<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<topic xml:id="systemd-managing-targets"
 role="reference" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>Managing &systemd; targets with the <command>systemctl</command> command</title>
    <meta name="maintainer" content="amrita.sakthivel@suse.com" its:translate="no"/>
    <abstract>
      <para>
       &systemd;targets are special unit files that describe a system or synchronization state.
       They are used to group units together in order or bring the system to a certain state, just like other init systems use runlevels.
You can use the <command>systemctl</command> command to manage &systemd; targets.
      </para>
    </abstract>
  </info>
  <variablelist>
    <varlistentry>
      <term>Getting and setting the default target</term>
      <listitem>
        <para>
&systemd; has a default target that is used when booting the system. To find the default target for your system:
        </para>
<screen>&prompt.sudo;systemctl get-default
  multi-user.target</screen>
        <para>You can also change the default target:</para>
       <screen>&prompt.sudo;systemctl set-default graphical.target</screen>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term>Listing the available targets</term>
      <listitem>
        <para>
To get the available targets on your system:
        </para>
<screen>&prompt.sudo;systemctl list-unit-files --type=target
           STATE                     VENDOR PRESET
        basic.target                  static   -
        blockdev@.target              static   -
        bluetooth.target              static   -
        boot-complete.target          static   -
        cryptsetup-pre.target         static   -
        cryptsetup.target             static   -
        ctrl-alt-del.target           alias    -
        cvs.target                    static   -
        default.target                alias    -
        emergency.target              static   -
        exit.target                   disabled disabled
        final.target                  static   -
        first-boot-complete.target    static   -
        getty-pre.target              static   -
        getty.target                  static   -
        .....
        </screen>
        <para>Multiple targets can be active at the same time. An active target is when &systemd; attempts to
          start all the units in a specific target. To see a list of the active targets:</para>
<screen>&prompt.sudo;systemctl list-units --type=target
        UNIT              LOAD   ACTIE SUB    DESCRIPTION                     >
  basic.target            loaded active active Basic System
  bluetooth.target        loaded active active Bluetooth Support
  cryptsetup.target       loaded active active Local Encrypted Volumes
  getty.target            loaded active active Login Prompts
  graphical.target        loaded active active Graphical Interface
  local-fs-pre.target     loaded active active Preparation for Local File Syste>
  local-fs.target         loaded active active Local File Systems
  multi-user.target       loaded active active Multi-User System
  network-online.target   loaded active active Network is Online
  network-pre.target      loaded active active Preparation for Network
  network.target          loaded active active Network
  nss-lookup.target       loaded active active Host and Network Name Lookups
  nss-user-lookup.target  loaded active active User and Group Name Lookups
  paths.target            loaded active active Path Units
  remote-fs.target        loaded active active Remote File Systems
  slices.target           loaded active active Slice Units
  snapd.mounts-pre.target loaded active active Mounting snaps
  .....
</screen>
      </listitem>
    </varlistentry>
<varlistentry>
      <term>Isolating targets</term>
      <listitem>
        <para>
You can start all the units associated with a target and stop all units that are not part of the dependency tree.
For example, if you are using a graphical environment with an active <literal>graphical.target</literal> target, you can stop
the graphical system and enable a multi-user command line system by isolating the <literal>multi-user.target</literal> target.
Since the <literal>graphical.target</literal> target depends on the <literal>multi-user.target</literal> target, all the graphical
units are stopped.</para>
<para>To take a look at the dependencies of the target you are isolating:</para>
<screen>&prompt.sudo;systemctl list-dependencies multi-user.target</screen>
        <para>Output:</para>
<screen>multi-user.target
  ○ ├─after-local.service
  ● ├─apparmor.service
  ○ ├─appstream-sync-cache.service
  ● ├─auditd.service
  ● ├─avahi-daemon.service
  ● ├─btrfsmaintenance-refresh.path
  ● ├─chronyd.service
  ● ├─cron.service
  ● ├─cups.path
  ● ├─dbus.service
  ● ├─fail2ban.service
  ● ├─firewalld.service
  ● ├─irqbalance.service
  ● ├─kbdsettings.service
  ● ├─libvirtd.service
  ● ├─mcelog.service
  ● ├─ModemManager.service
  ● ├─NetworkManager.service
  ● ├─nscd.service
  ● ├─plymouth-quit-wait.service
  ○ ├─plymouth-quit.service
  ● ├─postfix.service
</screen>
       <para>You can isolate the specific target:</para>
       <screen>&prompt.sudo;sudo systemctl isolate multi-user.target</screen>
      </listitem>
    </varlistentry>
  </variablelist>
</topic>