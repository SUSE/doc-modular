<?xml version="1.0" encoding="UTF-8"?>
<!-- This file originates from the project https://github.com/openSUSE/doc-kit -->
<!-- This file can be edited downstream. -->
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<!-- refers to legacy doc: <add github link to legacy doc piece, if applicable> -->
<!-- point back to this document with a similar comment added to your legacy doc piece -->
<!-- refer to README.md for file and id naming conventions -->
<!-- metadata is dealt with on the assembly level -->
<topic xml:id="zypper-reference-manage-repos"
 role="reference" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>&zypper; reference</title>
    <!--add author's email address-->
    <meta name="maintainer" content="cwickert@suse.com" its:translate="no"/>
    <abstract><!-- can be changed via merge in the assembly -->
      <para>
       Introductory text
      </para>
    </abstract>
  </info>
  <section xml:id="reference-example-section">
    <title>Managing repositories with Zypper</title>
    <para>
      All installation or patch commands of Zypper rely on a list of known
      repositories. To list all repositories known to the system, use the command:
    </para>
    <screen>&prompt.user;zypper repos</screen>
    <para>
      The result will look similar to the following output:
    </para>
    <example xml:id="ex-zypper-repos">
      <title>Zypper&mdash;list of known repositories</title>
<screen>&prompt.user;zypper repos
# | Alias        | Name          | Enabled | Refresh
--+--------------+---------------+---------+--------
1 | SLEHA-15-GEO | SLEHA-15-GEO  | Yes     | No
2 | SLEHA-15     | SLEHA-15      | Yes     | No
3 | SLES15       | SLES15        | Yes     | No</screen>
    </example>
    <para>
      When specifying repositories in various commands, an alias, URI or
      repository number from the <command>zypper repos</command> command output
      can be used. A repository alias is a short version of the repository name
      for use in repository handling commands. Note that the repository numbers
      can change after modifying the list of repositories. The alias will never
      change by itself.
    </para>
    <para>
      By default, details such as the URI or the priority of the repository are
      not displayed. Use the following command to list all details:
    </para>
    <screen>&prompt.user;zypper repos -d</screen>
    <section xml:id="sec-zypper-instrepo-add">
      <title>Adding repositories</title>
      <para>
        To add a repository, run
      </para>
      <screen>&prompt.sudo;zypper addrepo <replaceable>URI</replaceable> <replaceable>ALIAS</replaceable></screen>
      <para>
        <replaceable>URI</replaceable> can either be an Internet repository, a
        network resource, a directory or a CD or DVD (see
        <link xlink:href="https://en.opensuse.org/openSUSE:Libzypp_URIs"/> for
        details). The <replaceable>ALIAS</replaceable> is a shorthand and unique
        identifier of the repository. You can freely choose it, with the only
        exception that it needs to be unique. Zypper will issue a warning if you
        specify an alias that is already in use.
      </para>
    </section>
    <section xml:id="sec-zypper-instrepo-refresh">
      <title>Refreshing repositories</title>
      <para>
        <command>zypper</command> enables you to fetch changes in packages from
        configured repositories. To fetch the changes, run:
      </para>
      <screen>&prompt.sudo;zypper refresh</screen>
      <note>
        <title>Default behavior of <command>zypper</command></title>
        <para>
          By default, some commands perform <command>refresh</command>
          automatically, so you do not need to run the command explicitly.
        </para>
      </note>
      <para>
        The <command>refresh</command> command enables you to view changes also in
        disabled repositories, by using the <literal>--plus-content</literal>
        option:
      </para>
      <screen>&prompt.sudo;zypper --plus-content refresh</screen>
      <para>
        This option fetches changes in repositories, but keeps the disabled
        repositories in the same state&mdash;disabled.
      </para>
    </section>
    <section xml:id="sec-zypper-instrepo-rm">
      <title>Removing repositories</title>
      <para>
        To remove a repository from the list, use the command <command>zypper
          removerepo</command> together with the alias or number of the repository
        you want to delete. For example, to remove the repository
        <literal>SLEHA-12-GEO</literal>
        from <xref linkend="ex-zypper-repos"/>, use one of the following commands:
      </para>
<screen>&prompt.sudo;zypper removerepo 1
&prompt.sudo;zypper removerepo "SLEHA-12-GEO"</screen>
    </section>
    <section xml:id="sec-zypper-instrepo-modify">
      <title>Modifying repositories</title>
      <para>
        Enable or disable repositories with <command>zypper modifyrepo</command>.
        You can also alter the repository's properties (such as refreshing
        behavior, name or priority) with this command. The following command will
        enable the repository named <literal>updates</literal>, turn on
        auto-refresh and set its priority to 20:
      </para>
      <screen>&prompt.sudo;zypper modifyrepo -er -p 20 'updates'</screen>
      <para>
        Modifying repositories is not limited to a single repository&mdash;you can
        also operate on groups:
      </para>
      <simplelist><member><option>-a</option>: all repositories</member><member><option>-l</option>: local repositories</member><member><option>-t</option>: remote repositories</member><member><option>-m <replaceable>TYPE</replaceable></option>: repositories
        of a certain type (where <replaceable>TYPE</replaceable> can be one of the
        following: <literal>http</literal>, <literal>https</literal>, <literal>ftp</literal>,
        <literal>cd</literal>, <literal>dvd</literal>, <literal>dir</literal>, <literal>file</literal>,
        <literal>cifs</literal>, <literal>smb</literal>, <literal>nfs</literal>, <literal>hd</literal>,
        <literal>iso</literal>) </member>
      </simplelist>
      <para>
        To rename a repository alias, use the <literal>renamerepo</literal>
        command. The following example changes the alias from <literal>Mozilla
          Firefox</literal> to <literal>firefox</literal>:
      </para>
      <screen>&prompt.sudo;zypper renamerepo 'Mozilla Firefox' firefox</screen>
    </section>
  </section>
</topic>
