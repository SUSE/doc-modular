<?xml version="1.0" encoding="UTF-8"?>
<!-- This file originates from the project https://github.com/openSUSE/doc-kit -->
<!-- This file can be edited downstream. -->
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<!-- refers to legacy doc: <add github link to legacy doc piece, if applicable> -->
<!-- point back to this document with a similar comment added to your legacy doc piece -->
<!-- refer to README.md for file and id naming conventions -->
<!-- metadata is dealt with on the assembly level -->
<topic xml:id="reference-zypper-search"
 role="reference" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>Seaching software packages with &zypper;</title><!-- can be changed via merge
in the assembly -->
    <meta name="maintainer" content="" its:translate="no"/>
    <abstract><!-- can be changed via merge in the assembly -->
      <para>
       Introductory text
      </para>
    </abstract>
  </info>
  <section xml:id="zypper-search-introduction">
    <title>Introduction</title>
    <para>
      A paragraph of text.
    </para>
  </section>
  <section xml:id="zypper-query">
    <title>Querying repositories and packages with Zypper</title>
    <para>
      Zypper offers various methods to query repositories or packages. To get
      lists of all products, patterns, packages or patches available, use the
      following commands:
    </para>
    <screen>&prompt.user;zypper products
      &prompt.user;zypper patterns
      &prompt.user;zypper packages
      &prompt.user;zypper patches</screen>
    <para>
      To query all repositories for certain packages, use
      <literal>search</literal>. To get information regarding particular packages,
      use the <literal>info</literal> command.
    </para>
    <section xml:id="zypper-query-search">
      <title>Searching for software</title>
      <para>
        The <command>zypper search</command> command works on package names, or,
        optionally, on package summaries and descriptions. Strings wrapped in
        <literal>/</literal> are interpreted as regular expressions. By default,
        the search is not case-sensitive.
      </para>
      <variablelist>
        <varlistentry>
          <term>Simple search for a package name containing <literal>fire</literal></term>
          <listitem>
            <screen>&prompt.user;zypper search "fire"</screen>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Simple search for the exact package <literal>MozillaFirefox</literal></term>
          <listitem>
            <screen>&prompt.user;zypper search --match-exact "MozillaFirefox"</screen>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Also search in package descriptions and summaries</term>
          <listitem>
            <screen>&prompt.user;zypper search -d fire</screen>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Only display packages not already installed</term>
          <listitem>
            <screen>&prompt.user;zypper search -u fire</screen>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term>Display packages containing the string <literal>fir</literal> not followed be <literal>e</literal></term>
          <listitem>
            <screen>&prompt.user;zypper se "/fir[^e]/"</screen>
          </listitem>
        </varlistentry>
      </variablelist>
    </section>
    <section xml:id="zypper-query-search-packages" os="sles;sled">
      <title>Searching for packages across all &slea; modules</title>
      <para>
        To search for packages both within and outside of currently enabled &slea;
        modules, use the <command>search-packages</command> subcommand. This
        command contacts the &scc; and searches all modules for matching packages,
        for example:
      </para>
      <screen>&prompt.user;zypper search-packages <replaceable>package1</replaceable> <replaceable>package2</replaceable></screen>
      <para>
        <command>zypper search-packages</command> provides the following options:
      </para>
      <itemizedlist>
        <listitem>
          <para>
            Search for an exact match of your search string: <option>-x</option>,
            <option>--match-exact</option>
          </para>
        </listitem>
        <listitem>
          <para>
            Group the results by module (default: group by package):
            <option>-g,</option> <option>--group-by-module</option>
          </para>
        </listitem>
        <listitem>
          <para>
            Display more detailed information about packages: <option>-d</option>,
            <option>--details</option>
          </para>
        </listitem>
        <listitem>
          <para>
            Output search results in XML: <option>--xmlout</option>
          </para>
        </listitem>
      </itemizedlist>
    </section>
    <section xml:id="zypper-query-what-provides">
      <title>Searching for specific capability</title>
      <para>
        To search for packages which provide a special capability, use the command
        <literal>what-provides</literal>. For example, if you want to know which
        package provides the Perl module <literal>SVN::Core</literal>, use the
        following command:
      </para>
      <screen>&prompt.user;zypper what-provides 'perl(SVN::Core)'</screen>
      <para>
        The <literal>what-provides
          <replaceable>PACKAGE_NAME</replaceable></literal> is similar to
        <command>rpm -q --whatprovides</command>
        <replaceable>PACKAGE_NAME</replaceable>, but RPM is only able to query the
        RPM database (that is the database of all installed packages). Zypper, on
        the other hand, will tell you about providers of the capability from any
        repository, not only those that are installed.
      </para>
    </section>
    <section xml:id="sec-zypper-query-info">
      <title>Showing package information</title>
      <para>
        To query single packages, use <command>info</command> with an exact package
        name as an argument. This displays detailed information about a package. In
        case the package name does not match any package name from repositories,
        the command outputs detailed information for non-package matches. If you
        request a specific type (by using the <literal>-t</literal> option) and the
        type does not exist, the command outputs other available matches but
        without detailed information.
      </para>
      <para>
        If you specify a source package, the command displays binary packages built
        from the source package. If you specify a binary package, the command
        outputs the source packages used to build the binary package.
      </para>
      <para>
        To also show what is required/recommended by the package, use the options
        <option>--requires</option> and <option>--recommends</option>:
      </para>
      <screen>&prompt.user;zypper info --requires MozillaFirefox</screen>
    </section>
  </section>
</topic>
