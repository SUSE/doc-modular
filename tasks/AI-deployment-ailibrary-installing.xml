<?xml version="1.0" encoding="UTF-8"?>
<!-- This file originates from the project https://github.com/openSUSE/doc-kit -->
<!-- This file can be edited downstream. -->
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<topic xml:id="suse-ai-deploy-suse-ai"
 role="concept" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>Installing &ailibrary;</title>
    <meta name="maintainer" content="tbazant@suse.com" its:translate="no"/>
  </info>
  <procedure>
    <para>
      This procedure includes steps to install &ailibrary;
      applications<phrase
        condition="deployment_airgap"> in an
      air-gapped environments</phrase>.
    </para>
    <note condition="deployment_airgap">
      <para condition="deployment_airgap">
        If the following steps do not specify on which part of the air-gapped
        architecture&mdash;<emphasis>local</emphasis> or
        <emphasis>remote</emphasis>&mdash;the task should be performed, assume
        <emphasis>remote</emphasis>. The isolated <emphasis>local</emphasis>
        part is always be specified.
      </para>
    </note>
    <step>
      <para>
        Purchase the &productname; entitlement. It is a separate entitlement
        from &rancherprime;.
      </para>
    </step>
    <step>
      <para>
        Access &productname; via the &sappco; at
        <link
        xlink:href="https://apps.rancher.io/"/> to perform the
        check for the &productname; entitlement.
      </para>
    </step>
    <step>
      <para>
        If the entitlement check is successful, you are given access to the
        &productname;-related &helm; charts and container images, and can deploy
        directly from the &sappco;.
      </para>
    </step>
    <step>
      <para>
        Visit the &sappco;, sign in and get the user access token as described
        in
        <link xlink:href="https://docs.apps.rancher.io/get-started/authentication/"/>.
      </para>
    </step>
    <step>
      <para>
        <phrase condition="deployment_airgap">On the <emphasis>local</emphasis>
        cluster, create</phrase>
        <phrase condition="deployment_standard">Create</phrase> a &kube;
        namespace if it does not already exist. The steps in this procedure
        assume that all containers are deployed into the same namespace referred
        to as <replaceable>SUSE_AI_NAMESPACE</replaceable>. Replace its name to
        match your preferences.
      </para>
<screen>&prompt.user;<command>kubectl create namespace <replaceable>SUSE_AI_NAMESPACE</replaceable></command></screen>
    </step>
    <step>
      <para>
        Create the &sappco; secret.
      </para>
<screen>&prompt.user;<command>kubectl create secret docker-registry application-collection \
  --docker-server=dp.apps.rancher.io \
  --docker-username=<replaceable>APPCO_USERNAME</replaceable> \
  --docker-password=<replaceable>APPCO_USER_TOKEN</replaceable> \
  -n <replaceable>SUSE_AI_NAMESPACE</replaceable></command></screen>
    </step>
    <step>
      <para>
        Log in to the &helm; registry.
      </para>
<screen>&prompt.user;<command>helm registry login dp.apps.rancher.io/charts \
  -u <replaceable>APPCO_USERNAME</replaceable> \
  -p <replaceable>APPCO_USER_TOKEN</replaceable></command></screen>
    </step>
    <step condition="deployment_airgap">
      <para>
        On the <emphasis>remote</emphasis> host, download the
        <filename>SUSE-AI-get-images.sh</filename> script from the
        <xref
        linkend="ai-air-gap-stack"/> and run it.
      </para>
<screen>&prompt.user;<command>./SUSE-AI-get-images.sh</command></screen>
      <para>
        This script creates a subdirectory with all necessary &helm; charts plus
        <filename>suse-ai-containers.tgz</filename> and
        <filename>suse-ai-containers.txt</filename> files.
      </para>
    </step>
    <step condition="deployment_airgap">
      <para>
        Create a &docker; registry on one of the <emphasis>local</emphasis>
        hosts so that the <emphasis>local</emphasis> &kube; cluster can access
        it.
      </para>
    </step>
    <step condition="deployment_airgap">
      <para>
        Securely transfer the created subdirectory with &helm; charts plus
        <filename>suse-ai-containers.tgz</filename> and
        <filename>suse-ai-containers.txt</filename> files from the
        <emphasis>remote</emphasis> host to a <emphasis>local</emphasis> host
        and load all container images to the <emphasis>local</emphasis> &docker;
        registry. Set <varname>DST_REGISTRY_USERNAME</varname> and
        <varname>DST_REGISTRY_PASSWORD</varname> environment variables if they
        are required to access the registry.
      </para>
<screen>&prompt.user;<command>./SUSE-AI-load-images.sh \
  -d <replaceable>LOCAL_DOCKER_REGISTRY_URL</replaceable> \
  -i charts/suse-ai-containers.txt \
  -f charts/suse-ai-containers.tgz</command> </screen>
    </step>
    <step>
      <para>
        Install &certmanager; as described in
        <xref linkend="cert-manager-installing"/>.
      </para>
    </step>
    <step>
      <para>
        Install &ailibrary; components.
        <phrase condition="deployment_standard">You can either install each
        component separately, or use the &saideployer; chart to install the
        components together as described in
        <xref linkend="ailibrary-installing-deployer"/>.</phrase>
      </para>
      <substeps>
        <step>
          <para>
            Install &milvus; as described in
            <xref linkend="milvus-installing"/>.
          </para>
        </step>
        <step performance="optional">
          <para>
            Install &ollama; as described in
            <xref linkend="ollama-installing"/>.
          </para>
        </step>
        <step>
          <para>
            Install &owui; as described in <xref linkend="owui-installing"/>.
          </para>
        </step>
      </substeps>
    </step>
  </procedure>
</topic>
