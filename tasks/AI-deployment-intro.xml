<?xml version="1.0" encoding="UTF-8"?>
<!-- This file originates from the project https://github.com/openSUSE/doc-kit -->
<!-- This file can be edited downstream. -->
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<topic xml:id="ai-deployment"
 role="concept" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>Deployment procedures</title>
    <meta name="maintainer" content="tbazant@suse.com" its:translate="no"/>
    <abstract>
      <para>
        &productname; is a complex product consisting of multiple software
        layers and components. This document outlines the complete workflow for
        deploying and installing all &productname; dependencies, as well as
        &productname; itself. You can also find references to recommended
        hardware and software requirements, as well as steps to take after the
        product installation.
      </para>
    </abstract>
  </info>
  <tip>
    <title>Hardware and software requirements</title>
    <para>
      For hardware, software and application-specific requirements, refer to
      <link
      xlink:href="&dsc;/suse-ai/1.0/html/AI-requirements/index.html">&productname;
      requirements</link>.
    </para>
  </tip>
  <section xml:id="suse-ai-deploy-require">
    <title>Prerequisites for customers who are not yet running a Rancher cluster</title>
    <procedure>
      <step>
        <para>
          Purchase the &rancherprime; entitlement.
        </para>
      </step>
      <step>
        <para>
          Install
          <link xlink:href="https://ranchermanager.docs.rancher.com/getting-started/installation-and-upgrade/install-upgrade-on-a-kubernetes-cluster">&ranchermanager;</link>.
        </para>
      </step>
      <step>
        <para>
          Deploy and configure
          <link xlink:href="&dsc;/external-tree/en-us/cloudnative/rancher-manager/v2.8/en/integrations/neuvector/overview.html">&ssecurity;</link>.
        </para>
      </step>
      <step>
        <para>
          Deploy and configure
          <link xlink:href="https://docs.stackstate.com/6.0/get-started/k8s-suse-rancher-prime">&sobservability;</link>.
        </para>
      </step>
    </procedure>
  </section>
  <section xml:id="suse-ai-deploy-prepare">
    <title>Cluster preparation</title>
    <procedure>
      <step>
        <para>
          Install and register &slm; 6.0 or later on each &rke2; cluster node.
          Refer to <link xlink:href="&dsc;/sle-micro/6.0/"/> for details.
        </para>
      </step>
      <step>
        <para>
          Install the &nvidia; GPU driver on cluster nodes with GPUs. Refer to
          <link xlink:href="&dsc;/suse-ai/1.0/html/NVIDIA-GPU-driver-on-SL-Micro/index.html"/>
          for details.
        </para>
      </step>
<!-- tbazant: The container toolkit will be installed as part of NVIDIA GPU Operator.
      <step performance="optional">
        <para>
          Install the &nvidia;container toolkit on GPU enabled systems. Refer to
          <link
          xlink:href="&dsc;/suse-ai/1.0/html/NVIDIA-GPU-driver-on-SL-Micro/index.html#nvidia-gpu-validation"/>
          for details.
        </para>
      </step>
-->
      <step>
        <para>
          Install &rke2; &kube; distribution on the cluster nodes. Refer to
          <link xlink:href="https://docs.rke2.io/"/> for details.
        </para>
      </step>
      <step>
        <para>
          Install the &nvoperator; with the additional option <option>--set
          driver.enabled=false</option>. Refer to
          <link xlink:href="https://docs.nvidia.com/datacenter/cloud-native/gpu-operator/latest/getting-started.html#rancher-kubernetes-engine-2"/>.
        </para>
      </step>
      <step>
        <para>
          Connect the &rke2; cluster to &ranchermanager;. Refer to
          <link
          xlink:href="https://ranchermanager.docs.rancher.com/how-to-guides/new-user-guides/kubernetes-clusters-in-rancher-setup/register-existing-clusters"/>
          for details.
        </para>
      </step>
      <step>
        <para>
          Configure the GPU-enabled nodes so that the &productname; containers
          are assigned to Pods that run on nodes equipped with &nvidia; GPU
          hardware. Find more details assigning Pods to nodes in
          <xref linkend="ai-gpu-nodes-assigning"/>.
        </para>
      </step>
      <step>
        <para>
          Configure &ssecurity; to scan the nodes used for &productname;.
          Although this step is not required, we strongly encourage it to ensure
          the security in the production environment.
        </para>
      </step>
      <step>
        <para>
          Configure &sobservability; to observe the nodes used for &productname;
          application.
        </para>
      </step>
<!-- TODO tbazant: consider inserting elswhere or removing
      <step>
        <para>
          Open the &ranchermanager; Web UI in your Web browser, log in with your
          credentials, and navigate to the <guimenu>Application
          Collection</guimenu>.
        </para>
      </step>
      <step>
        <para>
          From the list of available applications, select &productname;. The
          <guimenu>Application Collection</guimenu> performs the entitlement
          check and when successful, you are given access to &productname;
          &helm; charts and container images.
        </para>
      </step>
      <step>
        <para>
          Click the <guimenu>Install</guimenu> button in the top right. The
          installer guides you through the installation steps, where you can
          specify custom &helm; options, for example. On the last installer
          page, confirm the installation with <guimenu>Install</guimenu> at the
          bottom right.
        </para>
      </step>
-->
    </procedure>
  </section>
  <section xml:id="suse-ai-deploy-suse-ai">
    <title>&productname; installation</title>
    <para>
      &productname; is being delivered as a set of components that you can
      combine to meet specific use cases. This provides extraordinary
      flexibility but means that there is not a single &helm; chart that
      installs the whole stack, for example, for using the &owui; chatbot style
      application. To enable the full integrated stack, you need to deploy
      multiple applications in sequence. Applications with the fewest
      dependencies must be installed first, followed by dependent applications
      once their required dependencies are in place within the cluster.
    </para>
    <procedure>
      <step>
        <para>
          Purchase the &productname; entitlement. It is a separate entitlement
          from &rancherprime;.
        </para>
      </step>
      <step>
        <para>
          Access &productname; via the &rancherappco; at
          <link
          xlink:href="https://apps.rancher.io/"/> to perform the
          check for the &productname; entitlement.
        </para>
      </step>
      <step>
        <para>
          If the entitlement check is successful, you are given access to the
          &productname;-related &helm; charts and container images, and can
          deploy directly from the &rancherappco;.
        </para>
        <tip>
          <para>
            Any overrides of the default values in the &helm; charts&mdash;such
            as &owui; password and URL customizations&mdash;occur at this step.
          </para>
        </tip>
      </step>
<!-- TODO tbazant: revisit Milvus related parts when available
      <step>
        <para>
          Install &apulsar;.
        </para>
      </step>
      <step>
        <para>
          Install &etcd;.
        </para>
      </step>
      <step>
        <para>
          Install &minio;.
        </para>
      </step>
-->
      <step>
        <para>
          Install &milvus; as described in <xref linkend="milvus-installing"/>.
        </para>
      </step>
      <step performance="optional">
        <para>
          Install &ollama; as described in <xref linkend="ollama-installing"/>.
        </para>
      </step>
      <step>
        <para>
          Install &owui; as described in <xref linkend="owui-installing"/>.
        </para>
      </step>
    </procedure>
    <section xml:id="owui-known-issues-cert-manager">
      <title>&ollama; and &owui; fail to deploy reporting a cert-manager error</title>
      <para>
        By default, public endpoints such as &owui; are protected by self-signed
        SSL/TLS certificates. You also have the option to either have the
        certificate issued by a public Certification Authority (CA), or bring
        your own certificate (BYO). Except for the BYO case,
        <systemitem>cert-manager</systemitem> is required to facilitate the
        certificate management. Therefore, you must verify that the
        <systemitem>cert-manager</systemitem> <emphasis>custom resource
        definitions</emphasis> (CRDs) are installed using the
        <command>kubectl</command> utility, for example:
      </para>
<screen>&prompt.user;<command>kubectl get crds | grep cert-manager</command>
certificaterequests.cert-manager.io                   2024-12-05T22:22:56Z
certificates.cert-manager.io                          2024-12-05T22:22:56Z
challenges.acme.cert-manager.io                       2024-12-05T22:22:57Z
clusterissuers.cert-manager.io                        2024-12-05T22:22:57Z
issuers.cert-manager.io                               2024-12-05T22:22:57Z
orders.acme.cert-manager.io                           2024-12-05T22:22:57Z</screen>
      <para>
        If the <literal>cert-manager</literal> CRDs are not installed, install
        them by running the following command:
      </para>
<screen>kubectl apply -f \
https://github.com/cert-manager/cert-manager/releases/download/v1.6.2/cert-manager.crds.yaml</screen>
      <tip>
        <title>The version of <systemitem>cert-manager</systemitem></title>
        <para>
          In the above command, replace <literal>v1.6.2</literal> with the
          version of the <systemitem>cert-manager</systemitem> dependency
          included in the <filename>Chart.lock</filename> file from the unpacked
          &owui; &helm; chart.
        </para>
      </tip>
      <para>
        For BYO certificates, <systemitem>cert-manager</systemitem> is not
        required. Therefore, you may disable it by adding the following option
        when installing the &productname; components via &helm;:
      </para>
<screen>--set cert-manager.enabled=false</screen>
    </section>
  </section>
  <section xml:id="suse-ai-deploy-post">
    <title>Steps after the installation is complete</title>
    <procedure>
      <step>
        <para>
          Log in to &productname; &owui; using the default credentials.
        </para>
      </step>
      <step>
        <para>
          After you have logged in, update the administrator password for
          &productname;.
        </para>
      </step>
      <step>
        <para>
          From the available language models, configure the one you prefer.
          Optionally, install a custom language model.
        </para>
      </step>
      <step>
        <para>
          Configure user management with <emphasis>role-base access
          control</emphasis> (RBAC) as described in
          <link xlink:href="&dsc;/suse-ai/1.0/html/openwebui-configuring/index.html#openwebui-managing-user-roles"/>
        </para>
      </step>
      <step>
        <para>
          Integrate <emphasis>single sign-on</emphasis> authentication
          manager&mdash;such as &okta;&mdash;with &owui; as described in
          <link xlink:href="&dsc;/suse-ai/1.0/html/openwebui-configuring/index.html#openwebui-authentication-via-okta"/>.
        </para>
      </step>
      <step>
        <para>
          Configure <emphasis>retrieval-augmented generation</emphasis>(RAG) to
          let the model process content relevant to the customer.
        </para>
      </step>
    </procedure>
  </section>
</topic>
