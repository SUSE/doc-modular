<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<!-- based on https://github.com/rancher/rancher-product-docs/blob/main/versions/latest/modules/en/pages/installation-and-upgrade/install-rancher.adoc -->
<topic xml:id="rancher-installation-quickstart"
 role="task" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>Installing &ranchermanager; on a &kube; cluster</title>
    <meta name="maintainer" content="tbazant@suse.com" its:translate="no"/>
    <abstract>
      <para>
        In this section, you will learn how to deploy &ranchermanager; on a
        &k8s; cluster using the &helm; CLI.
      </para>
    </abstract>
  </info>
  <section xml:id="rancher-prerequisites">
    <title>Prerequisites</title>
    <itemizedlist>
      <listitem>
        <para>
          <xref linkend="rancher-k8s-cluster" xrefstyle="select: title"/>
        </para>
      </listitem>
      <listitem>
        <para>
          <xref linkend="rancher-ingress-controller" xrefstyle="select: title"/>
        </para>
      </listitem>
      <listitem>
        <para>
          <xref linkend="rancher-cli-tools" xrefstyle="select: title"/>
        </para>
      </listitem>
    </itemizedlist>
    <section xml:id="rancher-k8s-cluster">
      <title>&k8s; cluster</title>
      <para>
        Set up the &ranchermanager; server's local &k8s; cluster.
      </para>
      <para>
        &ranchermanager; can be installed on any &k8s; cluster. This cluster can
        use upstream &k8s;, or it can use one of &ranchermanager;'s &k8s;
        distributions, or it can be a managed &k8s; cluster from a provider such
        as Amazon EKS.
      </para>
      <tip>
        <para>
          For help setting up a &rke2a; cluster, refer to
          <xref
          linkend="rke2-installation-quickstart" condition="deployment_standard"/><xref
          linkend="rke2-installation-airgapped" condition="deployment_airgap"/>.
        </para>
      </tip>
    </section>
    <section xml:id="rancher-ingress-controller">
      <title>&ingress; controller</title>
      <para>
        The &ranchermanager; UI and API are exposed through an &ingress;. This
        means the &k8s; cluster that you install &ranchermanager; in must
        contain an &ingress; controller.
      </para>
      <para>
        For &rke2; and K3s installations, you do not have to install the
        &ingress; controller manually because one is installed by default.
      </para>
    </section>
    <section xml:id="rancher-cli-tools">
      <title>CLI tools</title>
      <para>
        The following CLI tools are required for setting up the &k8s; cluster.
        Make sure these tools are installed and available in your
        <envar>$PATH</envar>.
      </para>
      <itemizedlist>
        <listitem>
          <para>
            <link xlink:href="https://kubernetes.io/docs/tasks/tools/install-kubectl/#install-kubectl"><command>kubectl</command></link>
            - &k8s; command-line tool.
          </para>
        </listitem>
        <listitem>
          <para>
            <link xlink:href="https://docs.helm.sh/using_helm/#installing-helm"><command>helm</command></link>
            - Package management for &k8s;. Refer to the
            <link xlink:href="https://docs.ranchermanager.rancher.io/getting-started/installation-and-upgrade/requirements/helm-version-requirements">&helm;
            version requirements</link> to choose a version of &helm; to install
            &ranchermanager;. Refer to the
            <link xlink:href="https://helm.sh/docs/intro/install/">instructions
            provided by the &helm; project</link> for your specific platform.
          </para>
        </listitem>
      </itemizedlist>
    </section>
  </section>
  <section xml:id="rancher-install-helm-chart">
    <title>Install the &ranchera; &helm; chart</title>
    <para>
      &ranchermanager; is installed using the
      <link xlink:href="https://helm.sh/">&helm;</link> package manager for
      &k8s;. &helm; charts provide templating syntax for &k8s; YAML manifest
      documents. With &helm;, we can create configurable deployments instead of
      just using static files.
    </para>
    <para>
      To choose a &ranchermanager; version to install, refer to
      <link xlink:href="https://docs.ranchermanager.rancher.io/getting-started/installation-and-upgrade/resources/choose-a-rancher-version">Choosing
      a &ranchermanager; version</link>.
    </para>
    <para>
      To choose a version of &helm; to install &ranchermanager; with, refer to
      the
      <link xlink:href="https://docs.ranchermanager.rancher.io/getting-started/installation-and-upgrade/requirements/helm-version-requirements">&helm;
      version requirements</link>.
    </para>
    <note>
      <para>
        The installation instructions assume you are using &helm; version 3.
      </para>
    </note>
    <para>
      To set up &ranchermanager;,
    </para>
    <procedure>
      <step>
        <para>
          <xref linkend="rancher-add-helm-repo" xrefstyle="select: title"/>
        </para>
      </step>
      <step>
        <para>
          <xref linkend="rancher-create-namespace" xrefstyle="select: title"/>
        </para>
      </step>
      <step>
        <para>
          <xref linkend="rancher-choose-ssl" xrefstyle="select: title"/>
        </para>
      </step>
      <step>
        <para>
          <xref linkend="rancher-install-cert-manager" xrefstyle="select: title"/>
        </para>
      </step>
      <step>
        <para>
          <xref linkend="rancher-install-with-helm" xrefstyle="select: title"/>
        </para>
      </step>
      <step>
        <para>
          <xref linkend="rancher-verify-deployment" xrefstyle="select: title"/>
        </para>
      </step>
      <step>
        <para>
          <xref linkend="rancher-save-options" xrefstyle="select: title"/>
        </para>
      </step>
    </procedure>
  </section>
  <section xml:id="rancher-add-helm-repo">
    <title>Add the &helm; chart repository</title>
    <para>
      Use the <command>helm repo add</command> command to add the &helm; chart
      repository that contains charts to install &rancherprime;.
    </para>
<screen>&prompt.user;helm repo add rancher-prime <replaceable>helm-chart-repo-url</replaceable></screen>
    <para>
      For information on the &helm; chart repository URL, refer to the
      &rancherprime; documentation.
    </para>
  </section>
  <section xml:id="rancher-create-namespace">
    <title>Create a namespace for &ranchera;</title>
    <para>
      Define a &k8s; namespace where the resources created by the chart will be
      installed named <literal>cattle-system</literal>:
    </para>
<screen>&prompt.user;kubectl create namespace cattle-system</screen>
  </section>
  <section xml:id="rancher-choose-ssl">
    <title>Choose your SSL configuration</title>
    <para>
      The &ranchermanager; management server is designed to be secure by default
      and requires SSL/TLS configuration.
    </para>
    <note>
      <para>
        To externally cancel SSL/TLS, see
        <link xlink:href="https://docs.ranchermanager.rancher.io/getting-started/installation-and-upgrade/references/helm-chart-options#external-tls-termination">TLS
        termination on an External Load Balancer</link>. As outlined on that
        page, this option does have additional requirements for TLS
        verification.
      </para>
    </note>
    <para>
      There are three recommended options for the source of the certificate used
      for TLS termination at the &ranchermanager; server:
    </para>
    <itemizedlist>
      <listitem>
        <para>
          <emphasis role="bold">&ranchermanager;-generated TLS
          certificate:</emphasis> In this case, you need to install
          <literal>cert-manager</literal> into the cluster. &ranchermanager;
          utilizes <literal>cert-manager</literal> to issue and maintain its
          certificates. &ranchermanager; generates a CA certificate of its own,
          and sign a certificate using that CA. <literal>cert-manager</literal>
          is then responsible for managing that certificate. No extra action is
          needed when <literal>agent-tls-mode</literal> is set to strict. More
          information can be found on this setting in
          <link xlink:href="https://docs.ranchermanager.rancher.io/getting-started/installation-and-upgrade/references/tls-settings#agent-tls-enforcement">Agent
          TLS Enforcement</link>.
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis role="bold">Let's Encrypt:</emphasis> The Let's Encrypt
          option also uses <literal>cert-manager</literal>. However, in this
          case, &certmanager; is combined with a special Issuer for Let's
          Encrypt that performs all actions (including request and validation)
          necessary for getting a Let's Encrypt issued cert. This configuration
          uses HTTP validation (<literal>HTTP-01</literal>), so the load
          balancer must have a public DNS record and be accessible from the
          internet. When setting <literal>agent-tls-mode</literal> to
          <literal>strict</literal>, you must also specify
          <option>--privateCA=true</option> and upload the Let's Encrypt CA as
          described in
          <link xlink:href="https://docs.ranchermanager.rancher.io/getting-started/installation-and-upgrade/resources/tls-secrets">Adding
          TLS Secrets</link>. Find more information on this setting in
          <link xlink:href="https://docs.ranchermanager.rancher.io/getting-started/installation-and-upgrade/references/tls-settings#agent-tls-enforcement">Agent
          TLS Enforcement</link>.
        </para>
      </listitem>
      <listitem>
        <para>
          <emphasis role="bold">Bring your own certificate:</emphasis> This
          option allows you to bring your own public- or private-CA signed
          certificate. &ranchermanager; will use that certificate to secure
          websocket and HTTPS traffic. In this case, you must upload this
          certificate (and associated key) as PEM-encoded files with the name
          <filename>tls.crt</filename> and <filename>tls.key</filename>. If you
          are using a private CA, you must also upload that certificate. This is
          because this private CA may not be trusted by your nodes.
          &ranchermanager; will take that CA certificate, and generate a
          checksum from it, which the various &ranchermanager; components use to
          validate their connection to &ranchermanager;. If
          <literal>agent-tls-mode</literal> is set to <literal>strict</literal>,
          the CA must be uploaded, so that downstream clusters can successfully
          connect. Find more information in
          <link xlink:href="https://docs.ranchermanager.rancher.io/getting-started/installation-and-upgrade/references/tls-settings#agent-tls-enforcement">Agent
          TLS Enforcement</link>.
        </para>
      </listitem>
    </itemizedlist>
    <table>
      <title>SSL Configuration Options</title>
      <tgroup cols="3">
        <thead>
          <row>
            <entry>Configuration</entry>
            <entry>&helm; Chart Option</entry>
            <entry>Requires &certmanager;</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>&ranchermanager; Generated Certificates (Default)</entry>
            <entry><literal>ingress.tls.source=rancher</literal>
            </entry>
            <entry><xref linkend="rancher-install-cert-manager" xrefstyle="template: yes"/>
            </entry>
          </row>
          <row>
            <entry>Let's Encrypt</entry>
            <entry><literal>ingress.tls.source=letsEncrypt</literal>
            </entry>
            <entry><xref linkend="rancher-install-cert-manager" xrefstyle="template:"/>
            </entry>
          </row>
          <row>
            <entry>Certificates from Files</entry>
            <entry><literal>ingress.tls.source=secret</literal>
            </entry>
            <entry>no</entry>
          </row>
        </tbody>
      </tgroup>
    </table>
  </section>
  <section xml:id="rancher-install-cert-manager">
    <title>Install &certmanager;</title>
    <para>
      You should skip this step if you are bringing your own certificate files
      (option <literal>ingress.tls.source=secret</literal>), or if you use
      <link xlink:href="https://docs.ranchermanager.rancher.io/getting-started/installation-and-upgrade/references/helm-chart-options#external-tls-termination">TLS
      termination on an external load balancer</link>.
    </para>
    <para>
      This step is only required to use certificates issued by
      &ranchermanager;'s generated CA
      (<literal>ingress.tls.source=rancher</literal>) or to request Let's
      Encrypt issued certificates
      (<literal>ingress.tls.source=letsEncrypt</literal>).
    </para>
    <important>
      <para>
        Recent changes to &certmanager; require an upgrade. If you are upgrading
        &ranchermanager; and using a version of &certmanager; older than
        v0.11.0, please see our
        <link xlink:href="https://docs.ranchermanager.rancher.io/getting-started/installation-and-upgrade/resources/upgrade-cert-manager">upgrade
        documentation</link>.
      </para>
    </important>
    <para>
      These instructions are adapted from the
      <link xlink:href="https://cert-manager.io/docs/installation/kubernetes/#installing-with-helm">official
      &certmanager; documentation</link>.
    </para>
    <note>
      <para>
        To see options on how to customize the &certmanager; install including
        for cases where your cluster uses PodSecurityPolicies, see the
        <link xlink:href="https://artifacthub.io/packages/helm/cert-manager/cert-manager#configuration">cert-manager
        docs</link>.
      </para>
    </note>
<screen># If you have installed the CRDs manually, instead of setting <option>installCRDs</option> \
  or <option>crds.enabled</option> to 'true' in your Helm install command, \
  you should upgrade your CRD resources before upgrading the Helm chart:
<command>kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/<replaceable>VERSION</replaceable>/cert-manager.crds.yaml</command>

# Add the Jetstack Helm repository
helm repo add jetstack https://charts.jetstack.io

# Update your local Helm chart repository cache
helm repo update

# Install the cert-manager Helm chart
helm install cert-manager jetstack/cert-manager \
  --namespace cert-manager \
  --create-namespace \
  --set crds.enabled=true</screen>
    <para>
      Once you have installed &certmanager;, you can verify it is deployed
      correctly by checking the &certmanager; namespace for running pods:
    </para>
<screen>kubectl get pods --namespace cert-manager

NAME                                       READY   STATUS    RESTARTS   AGE
cert-manager-5c6866597-zw7kh               1/1     Running   0          2m
cert-manager-cainjector-577f6d9fd7-tr77l   1/1     Running   0          2m
cert-manager-webhook-787858fcdb-nlzsq      1/1     Running   0          2m</screen>
  </section>
  <section xml:id="rancher-install-with-helm">
    <title>Install &ranchera; with &helm; and your chosen certificate option</title>
    <para>
      The exact command to install &ranchermanager; differs depending on the
      certificate configuration.
    </para>
    <para>
      However, irrespective of the certificate configuration, the name of the
      &ranchermanager; installation in the <literal>cattle-system</literal>
      namespace should always be <literal>rancher</literal>.
    </para>
    <tip>
      <title>Testing and development</title>
      <para>
        This final command to install &ranchermanager; requires a domain name
        that forwards traffic to &ranchermanager;. If you are using the &helm;
        CLI to set up a proof-of-concept, you can use a fake domain name when
        passing the <option>hostname</option> option. An example of a fake
        domain name would be
        <literal><replaceable>IP_OF_LINUX_NODE</replaceable>.sslip.io</literal>,
        which would expose &ranchermanager; on an IP where it is running.
        Production installs would require a real domain name.
      </para>
    </tip>
    <section xml:id="rancher-generated-certs">
      <title>&ranchera;-generated certificates</title>
      <para>
        The default is for &ranchermanager; to generate a CA and uses
        <literal>cert-manager</literal> to issue the certificate for access to
        the &ranchermanager; server interface.
      </para>
      <para>
        Because <literal>rancher</literal> is the default option for
        <literal>ingress.tls.source</literal>, we are not specifying
        <literal>ingress.tls.source</literal> when running the <command>helm
        install</command> command.
      </para>
      <itemizedlist>
        <listitem>
          <para>
            Set the <option>hostname</option> to the DNS name you pointed at
            your load balancer.
          </para>
        </listitem>
        <listitem>
          <para>
            Set the <option>bootstrapPassword</option> to something unique for
            the <literal>admin</literal> user.
          </para>
        </listitem>
        <listitem>
          <para>
            To install a specific &ranchermanager; version, use the
            <option>--version</option> flag, example: <option>--version
            2.7.0</option>
          </para>
        </listitem>
      </itemizedlist>
<screen>&prompt.user;helm install rancher rancher-prime/rancher \
  --namespace cattle-system \
  --set hostname=rancher.my.org \
  --set bootstrapPassword=admin</screen>
      <para>
        Wait for &ranchermanager; to be rolled out:
      </para>
<screen>&prompt.user;kubectl -n cattle-system rollout status deploy/rancher
Waiting for deployment "rancher" rollout to finish: 0 of 3 updated replicas are available...
deployment "rancher" successfully rolled out</screen>
    </section>
    <section xml:id="rancher-lets-encrypt">
      <title>Let's Encrypt</title>
      <para>
        This option uses <literal>cert-manager</literal> to automatically
        request and renew <link xlink:href="https://letsencrypt.org/">Let's
        Encrypt certificates</link>. This is a free service that provides you
        with a valid certificate as Let's Encrypt is a trusted CA.
      </para>
      <note>
        <para>
          You need to have port 80 open as the HTTP-01 challenge can only be
          done on port 80.
        </para>
      </note>
      <para>
        In the following command,
      </para>
      <itemizedlist>
        <listitem>
          <para>
            <option>hostname</option> is set to the public DNS record,
          </para>
        </listitem>
        <listitem>
          <para>
            Set the <option>bootstrapPassword</option> to something unique for
            the <literal>admin</literal> user.
          </para>
        </listitem>
        <listitem>
          <para>
            <literal>ingress.tls.source</literal> is set to
            <literal>letsEncrypt</literal>
          </para>
        </listitem>
        <listitem>
          <para>
            <literal>letsEncrypt.email</literal> is set to the email address
            used for communication about your certificate (for example, expiry
            notices)
          </para>
        </listitem>
        <listitem>
          <para>
            Set <literal>letsEncrypt.ingress.class</literal> to whatever your
            &ingress; controller is, for example, <literal>traefik</literal>,
            <literal>nginx</literal>, <literal>haproxy</literal>, etc.
          </para>
        </listitem>
      </itemizedlist>
      <important>
        <para>
          When <literal>agent-tls-mode</literal> is set to
          <literal>strict</literal> (the default value for new installs of
          &ranchermanager; starting from v2.9.0), you must supply the
          <option>privateCA=true</option> chart value (e.x. through
          <option>--set privateCA=true</option>) and upload the Let's Encrypt
          Certificate Authority as outlined in
          <link xlink:href="https://docs.ranchermanager.rancher.io/getting-started/installation-and-upgrade/resources/tls-secrets">Adding
          TLS Secrets</link>. Information on identifying the Let's Encrypt Root
          CA can be found in the Let's Encrypt
          <link xlink:href="https://letsencrypt.org/certificates/">docs</link>.
          If you do not upload the CA, then &ranchermanager; may fail to connect
          to new or existing downstream clusters.
        </para>
      </important>
<screen>&prompt.user;helm install rancher rancher-prime/rancher \
  --namespace cattle-system \
  --set hostname=rancher.my.org \
  --set bootstrapPassword=admin \
  --set ingress.tls.source=letsEncrypt \
  --set letsEncrypt.email=me@example.org \
  --set letsEncrypt.ingress.class=nginx</screen>
      <para>
        Wait for &ranchermanager; to be rolled out:
      </para>
<screen>&prompt.user;kubectl -n cattle-system rollout status deploy/rancher
Waiting for deployment "rancher" rollout to finish: 0 of 3 updated replicas are available...
deployment "rancher" successfully rolled out</screen>
    </section>
    <section xml:id="rancher-certs-from-files">
      <title>Certificates from files</title>
      <para>
        In this option, &k8s; secrets are created from your own certificates for
        &ranchermanager; to use.
      </para>
      <para>
        When you run this command, the <option>hostname</option> option must
        match the <literal>Common Name</literal> or a <literal>Subject
        Alternative Names</literal> entry in the server certificate or the
        &ingress; controller will fail to configure correctly.
      </para>
      <para>
        Although an entry in the <literal>Subject Alternative Names</literal> is
        technically required, having a matching <literal>Common Name</literal>
        maximizes compatibility with older browsers and applications.
      </para>
      <note>
        <para>
          To check if your certificates are correct, see
          <link xlink:href="https://docs.ranchermanager.rancher.io/faq/technical-items#how-do-i-check-common-name-and-subject-alternative-names-in-my-server-certificate">How
          do I check Common Name and Subject Alternative Names in my server
          certificate?</link>
        </para>
      </note>
      <itemizedlist>
        <listitem>
          <para>
            Set the <option>hostname</option>.
          </para>
        </listitem>
        <listitem>
          <para>
            Set the <option>bootstrapPassword</option> to something unique for
            the <literal>admin</literal> user.
          </para>
        </listitem>
        <listitem>
          <para>
            Set <literal>ingress.tls.source</literal> to
            <literal>secret</literal>.
          </para>
        </listitem>
      </itemizedlist>
<screen>&prompt.user;helm install rancher rancher-prime/rancher \
  --namespace cattle-system \
  --set hostname=rancher.my.org \
  --set bootstrapPassword=admin \
  --set ingress.tls.source=secret</screen>
      <para>
        If you are using a Private CA signed certificate , add <option>--set
        privateCA=true</option> to the command:
      </para>
<screen>&prompt.user;helm install rancher rancher-prime/rancher \
  --namespace cattle-system \
  --set hostname=rancher.my.org \
  --set bootstrapPassword=admin \
  --set ingress.tls.source=secret \
  --set privateCA=true</screen>
      <para>
        Now that &ranchermanager; is deployed, see
        <link xlink:href="https://docs.ranchermanager.rancher.io/getting-started/installation-and-upgrade/resources/tls-secrets">Adding
        TLS Secrets to publish the certificate files so &ranchermanager; and the
        &ingress; controller can use them</link>.
      </para>
    </section>
    <section xml:id="rancher-advanced-options">
      <title>Advanced options</title>
      <para>
        The &ranchermanager; chart configuration has many options for
        customizing the installation to suit your specific environment. Here are
        common advanced scenarios.
      </para>
      <itemizedlist>
        <listitem>
          <para>
            <link xlink:href="https://docs.ranchermanager.rancher.io/getting-started/installation-and-upgrade/references/helm-chart-options#http-proxy">HTTP
            Proxy</link>
          </para>
        </listitem>
        <listitem>
          <para>
            <link xlink:href="https://docs.ranchermanager.rancher.io/getting-started/installation-and-upgrade/references/helm-chart-options#private-registry-and-air-gap-installs">Private
            Container Image Registry</link>
          </para>
        </listitem>
        <listitem>
          <para>
            <link xlink:href="https://docs.ranchermanager.rancher.io/getting-started/installation-and-upgrade/references/helm-chart-options#external-tls-termination">TLS
            Termination on an External Load Balancer</link>
          </para>
        </listitem>
      </itemizedlist>
      <para>
        See the
        <link xlink:href="https://docs.ranchermanager.rancher.io/getting-started/installation-and-upgrade/references/helm-chart-options">Chart
        Options</link> for the full list of options.
      </para>
    </section>
  </section>
  <section xml:id="rancher-verify-deployment">
    <title>Verify that the &ranchera; server is successfully deployed</title>
    <para>
      After adding the secrets, check if &ranchermanager; was rolled out
      successfully:
    </para>
<screen>&prompt.user;kubectl -n cattle-system rollout status deploy/rancher
Waiting for deployment "rancher" rollout to finish: 0 of 3 updated replicas are available...
deployment "rancher" successfully rolled out</screen>
    <para>
      If you see the following error: <literal>error: deployment "rancher"
      exceeded its progress deadline</literal>, you can check the status of the
      deployment by running the following command:
    </para>
<screen>&prompt.user;kubectl -n cattle-system get deploy rancher
NAME      DESIRED   CURRENT   UP-TO-DATE   AVAILABLE   AGE
rancher   3         3         3            3           3m</screen>
    <para>
      It should show the same count for <literal>DESIRED</literal> and
      <literal>AVAILABLE</literal>.
    </para>
  </section>
  <section xml:id="rancher-save-options">
    <title>Save your options</title>
    <para>
      Make sure you save the <option>--set</option> options you used. You will
      need to use the same options when you upgrade &ranchermanager; to new
      versions with &helm;.
    </para>
  </section>
  <section xml:id="rancher-finishing-up">
    <title>Finishing up</title>
    <para>
      Now you should have a functional &ranchermanager; server.
    </para>
    <para>
      In a Web browser, go to the DNS name that forwards traffic to your load
      balancer. Then you should be greeted by the colorful login page.
    </para>
  </section>
</topic>
