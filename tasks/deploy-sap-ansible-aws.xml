<?xml version="1.0" encoding="UTF-8"?>
<!-- This file originates from the project https://github.com/openSUSE/doc-kit -->
<!-- This file can be edited downstream. -->
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<!-- refers to legacy doc: <add github link to legacy doc piece, if applicable> -->
<!-- point back to this document with a similar comment added to your legacy doc piece -->
<!-- refer to README.md for file and id naming conventions -->
<!-- metadata is dealt with on the assembly level -->
<topic xml:id="deploy-sap-ansible-aws"
 role="task" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>Deploying a &ha; distributed &s4h; 16 system on AWS</title>
    <!-- can be changed via merge in the assembly -->
    <!--add author's email address-->
    <meta name="maintainer" content="amrita.sakthivel" its:translate="no"/>
    <abstract>
  <para>This is a detailed step-by-step procedure to deploy a &ha; and distributed &s4h; system on Amazon Web Services (AWS).
   The <literal>ansible-sap-playbooks</literal> package is used to automate infrastructure provisioning and SAP software installation, creating a resilient, scalable and enterprise-grade environment.
  This procedures uses Pay-As-You-Go (PAYG) model for the &suse; operating system, where the subscription cost is included in the AWS instance pricing.
  </para>
    </abstract>
  </info>
  <para>This procedure is intended for system administrators, DevOps engineers and SAP Basis consultants who have a working knowledge of AWS, Ansible and &sap; principles.
  </para>
  <para>With this procedure, you can:</para>
<itemizedlist>
  <listitem><para>Prepare a control node and the AWS cloud environment for automation.</para></listitem>
  <listitem><para>Configure Ansible variables for a custom deployment.</para></listitem>
  <listitem><para>Execute a single playbook to provision and configure the entire &s4h; landscape.</para></listitem>
  <listitem><para>Achieve a fully functional and highly available system ready for post-installation activities.</para></listitem>
   </itemizedlist>

  <para> The resulting &ha; distributed &s4h; system comprises of the following components:</para>
  <itemizedlist>
    <listitem><para>Two &s4h; scale-up servers in a &ha; cluster.</para></listitem>
    <listitem><para>Two ASCS/ERS servers in a &ha; cluster.</para></listitem>
    <listitem><para>One Primary Application Server (PAS).</para></listitem>
    <listitem><para>One Additional Application Server (AAS).</para></listitem>
     </itemizedlist>
  <procedure><title>Deployment on AWS cloud environment</title>
    <step><para>Prepare your AWS cloud environment with the following:</para>
    <itemizedlist>
      <listitem><para>VPC with subnets: <literal>public</literal> for Bastion host and <literal>private</literal> for provisioned hosts.</para></listitem>
      <listitem><para>Route 53 (private DNS)</para></listitem>
      <listitem><para>Internet Gateway (SNAT)</para></listitem>
      <listitem><para>Elastic File System (EFS) Network File System (NFS)</para></listitem>
      <listitem><para>Bastion host in public subnet with SSH keys and access to private subnet</para></listitem>
      <listitem><para>SSH keys: one for Bastion and one for provisioned hosts</para></listitem>
 </itemizedlist>
     </step>
    <step><para>Create a new IAM role or policy appropriate access as either:</para>
    <itemizedlist><listitem><para>Restricted access</para></listitem>
      <listitem><para>Full access which is not recommended:</para>
      <itemizedlist><listitem><para><literal>arn:aws:iam::aws:policy/AmazonVPCFullAccess</literal></para></listitem>
        <listitem><para><literal>arn:aws:iam::aws:policy/AmazonEC2FullAccess</literal></para></listitem>
        <listitem><para><literal>arn:aws:iam::aws:policy/AmazonRoute53FullAccess</literal></para></listitem>
      </itemizedlist>
      </listitem>
    </itemizedlist>
    <note><para>A bastion host is required when you provision to private cloud from outside. Set the variable <literal>sap_vm_provision_bastion_execution</literal>
      to <literal>false</literal>, which means your control node has direct access to your cloud account and virtual private cloud (VPC).
      </para></note>
    </step>
    <step><para>Prepare the control node.</para>
   <substeps>
    <step>
   <para>Install the <literal>sles_sap_automation</literal> pattern that contains all recommended packages for automation.</para>
   <screen>&prompt.sudo; <command>zypper install --type pattern sles_sap_automation</command></screen>
    </step>
   <step>
  <para>Verify that the pattern and all the packages are installed. </para>
  <screen>&prompt.sudo; <command>zypper info --type pattern sles_sap_automation</command>

    Refreshing service 'SUSE_Linux_Enterprise_Server_for_SAP_Applications_x86_64'.
    Retrieving repository 'SLE-Product-SLES_SAP-16.0' metadata .........................................................................[done]
    Building repository 'SLE-Product-SLES_SAP-16.0' cache ..............................................................................[done]
    Loading repository data...
    Reading installed packages...


    Information for pattern sles_sap_automation:
    --------------------------------------------
    Repository      : SLE-Product-SLES_SAP-16.0
    Name            : sles_sap_automation
    Version         : 16.0-160000.2.2
    Arch            : x86_64
    Vendor          : SUSE LLC &lt;https://www.suse.com/>
    Installed       : Yes
    Visible to User : Yes
    Summary         : automation deployment
    Description     :
        ansible playbooks and roles
    Contents        :
        S  | Name                         | Type    | Dependency
        ---+------------------------------+---------+-----------
        i  | ansible                      | package | Required
        i  | ansible-linux-system-roles   | package | Required
        i  | ansible-sap-infrastructure   | package | Required
        i  | ansible-sap-install          | package | Required
        i  | ansible-sap-operations       | package | Required
        i  | ansible-sap-playbooks        | package | Required
        i+ | patterns-sap-automation      | package | Required
        i+ | patterns-sap-base_sap_server | package | Required</screen>
  </step>
 <step><para>Install the AWS requirements.</para>
   <screen>&prompt.sudo; <command> ansible-galaxy collection install amazon.aws</command></screen>
   <screen>&prompt.sudo; <command> zypper install python313-boto3</command></screen>
   </step>
 </substeps>
  </step>
<step>
<para>Ansible Playbooks are installed in <literal>/usr/share/ansible/playbooks</literal> .
 To prevent changes from being overwritten by future package updates, these files should not be modified directly.
For this procedure:</para>
 <substeps>
 <step><para>Use scenario directory <literal>/usr/share/ansible/playbooks/ansible.playbooks_for_sap/deploy_scenarios/sap_s4hana_distributed_ha</literal> </para></step>
 <step><para>Use <literal> /playbooks/S01</literal> as the dedicated directory. For simplicity, all customizations are stored in the <literal>/playbooks</literal>directory.</para></step>
 <step><para>Define minimal required variables and leave predefined in place for a simplified configuration. </para></step>
</substeps>
</step>
<step>
  <para>You can encrypt variables for playbooks in different ways to ensure security compliance.</para>
   <substeps>
   <step><para>Encrypt all variables for scenario. </para></step>
   <step><para>Split variables for reusability and encrypt only what is needed. For example:</para>
  <itemizedlist>
    <listitem><para>Cloud credentials and information encrypted in Ansible Vault.</para></listitem>
    <listitem><para>Scenario passwords encrypted in Ansible Vault.</para></listitem>
    <listitem><para>Scenario non-sensitive variables without using Ansible Vault.</para></listitem>
  </itemizedlist>
  <para>In this procedure, we use a simplified variant for encrypting whole files.</para>
  </step>
    </substeps>
  </step>
<step><para>Copy the variable files from source. Since we are provisioning new servers in AWS, only two variable files are required:</para>
<itemizedlist><listitem><para><literal>ansible_extravars.yml</literal>contains scenario specific variables.</para></listitem>
  <listitem><para><literal>ansible_extravars_aws_ec2_vs.yml</literal>contains platform specific variables.</para></listitem>
</itemizedlist>
<screen>cp /usr/share/ansible/playbooks/ansible.playbooks_for_sap/deploy_scenarios/sap_s4hana_distributed_ha/ansible_extravars.yml /playbooks/S01/</screen>
<screen>cp /usr/share/ansible/playbooks/ansible.playbooks_for_sap/deploy_scenarios/sap_s4hana_distributed_ha/ansible_extravars_aws_ec2_vs.yml /playbooks/S01/</screen>
</step>
<step><para>Update the variable file <literal>ansible_extravars.yml</literal>.</para>
<substeps>
  <step><para>The following variables define the provisioning method and platform.</para>
 <screen>sap_vm_provision_iac_type: "ansible"</screen>
 <screen>sap_vm_provision_iac_platform: "aws_ec2_vs"</screen>
</step>
<step><para>The following variable selects the desired topology from the <literal>sap_vm_provision_aws_ec2_vs_host_specifications_dictionary</literal>.</para>
<itemizedlist>
 <listitem><para>Predefined with minimum recommended instances for hosting a &sap; system.</para></listitem>
 <listitem><para>Customizable as you can edit existing entry or define a new plan.</para></listitem>
</itemizedlist>
  <screen>sap_vm_provision_host_specification_plan: "xsmall_256gb"</screen>
   </step>
 <step><para>The value of the variable <literal>sap_software_product</literal> is key predefined in the <literal> sap_software_install_dictionary</literal> dictionary.
  This dictionary follows same rules as the one above. You can edit an existing entry or create a new one plan.</para>
<screen>sap_software_product: "sap_s4hana_2023_distributed"</screen>
<screen> sap_install_media_detect_source_directory: "/software"</screen>
<important><para>The default execution ignores list of &sap; media files in the <literal>sap_software_install_dictionary</literal> dictionary, because the optional package <literal>ansible-sap-launchpad</literal> is not present.
  This package is available in Package Hub and it allows you to download SAP Media Software when provided with valid S-User credentials with appropriate download authorization.</para>
  <para>If this package is not installed, the playbook expects you to have all required files present in the path defined in the <literal>sap_install_media_detect_source_directory</literal> directory.
  The variables used by <literal>sap_launchpad</literal> role are <literal>sap_id_user</literal> and <literal>sap_id_user_password</literal>.</para></important>
<para>The password variables are simplified and use the Master password. This procedure does not include plan text passwords, you must
 define them when updating the variable files.</para>
<screen>sap_hana_install_use_master_password: "y"  # Use a master password for SAP HANA installation (y/n) (String).</screen>
<screen>sap_hana_install_use_master_password: "y"  # Use a master password for SAP HANA installation (y/n) (String).</screen>
<screen>sap_hana_install_use_master_password: "y"  # Use a master password for SAP HANA installation (y/n) (String).</screen>
<screen>sap_hana_install_use_master_password: "y"  # Use a master password for SAP HANA installation (y/n) (String).</screen>
</step>
<step><para>The variables for Virtual Overlay IP addresses need to follow specific convention for given platform.</para>
<screen>AWS:                  the VIP must be **outside** of any VPC Subnet ranges (e.g. 192.168.100.102/32)</screen>
<screen>sap_vm_provision_ha_vip_hana_primary: "ENTER_STRING_VALUE_HERE"</screen>
<screen>sap_vm_provision_ha_vip_nwas_abap_ascs: "ENTER_STRING_VALUE_HERE"</screen>
<screen>sap_vm_provision_ha_vip_nwas_abap_ers: "ENTER_STRING_VALUE_HERE"</screen>
</step>
</substeps>
</step>
    </procedure>

 </topic>