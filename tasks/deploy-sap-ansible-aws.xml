<?xml version="1.0" encoding="UTF-8"?>
<!-- This file originates from the project https://github.com/openSUSE/doc-kit -->
<!-- This file can be edited downstream. -->
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<!-- refers to legacy doc: <add github link to legacy doc piece, if applicable> -->
<!-- point back to this document with a similar comment added to your legacy doc piece -->
<!-- refer to README.md for file and id naming conventions -->
<!-- metadata is dealt with on the assembly level -->
<topic xml:id="deploy-sap-ansible-aws"
 role="task" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>Deploying a &ha; distributed &s4h; system on AWS</title>
    <!-- can be changed via merge in the assembly -->
    <!--add author's email address-->
    <meta name="maintainer" content="amrita.sakthivel" its:translate="no"/>
    <abstract>
  <para>This is a detailed step-by-step procedure to deploy a &ha; and distributed &s4h; system on Amazon Web Services (AWS).
   The <literal>ansible-sap-playbooks</literal> package is used to automate infrastructure provisioning and SAP software installation, creating a resilient, scalable and enterprise-grade environment.
  This procedures uses Pay-As-You-Go (PAYG) model for the &suse; operating system, where the subscription cost is included in the AWS instance pricing.
  </para>
    </abstract>
  </info>
  <para>This procedure is intended for system administrators, DevOps engineers and SAP Basis consultants who have a working knowledge of AWS, Ansible and &sap; principles.
  </para>
  <para>With this procedure, you can:</para>
<itemizedlist>
  <listitem><para>Prepare a control node and the AWS cloud environment for automation.</para></listitem>
  <listitem><para>Configure Ansible variables for a custom deployment.</para></listitem>
  <listitem><para>Execute a single playbook to provision and configure the entire &s4h; system.</para></listitem>
  <listitem><para>Achieve a fully functional and highly available system ready for post-installation activities.</para></listitem>
   </itemizedlist>

  <para> The resulting &ha; distributed &s4h; system comprises of the following components:</para>
  <itemizedlist>
    <listitem><para>Two &s4h; scale-up servers in a &ha; cluster.</para></listitem>
    <listitem><para>Two ASCS/ERS servers in a &ha; cluster.</para></listitem>
    <listitem><para>One Primary Application Server (PAS).</para></listitem>
    <listitem><para>One Additional Application Server (AAS).</para></listitem>
     </itemizedlist>
  <procedure><title>Deployment on AWS cloud environment</title>
   <para>Provisioning with Ansible requires a pre-existing environment and a service user with the necessary permissions.</para>
    <step><para>Prepare your AWS cloud environment with the following:</para>
    <itemizedlist>
      <listitem><para>VPC: </para>
      <itemizedlist>
       <listitem><para>VPC Access Control List (ACL)</para></listitem>
       <listitem><para>VPC Subnets</para></listitem>
       <listitem><para>VPC Security Groups</para></listitem>
      </itemizedlist>
      </listitem>
      <listitem><para>Route 53 (private DNS)</para></listitem>
      <listitem><para>Internet Gateway (SNAT)</para></listitem>
      <listitem><para>Elastic File System (EFS) Network File System (NFS)</para></listitem>
      <listitem><para>Bastion host (AWS EC2 VS)</para></listitem>
      <listitem><para>Key Pair for hosts</para></listitem>
 </itemizedlist>
 <para>For more details on infrastructure prerequisites, refer <link xlink:href="https://github.com/SUSE/community.sap_infrastructure/blob/main/roles/sap_vm_provision/PLATFORM_GUIDANCE.md#infrastructure-prerequisites-for-ansible-provisioning-method"> infrastructure prerequisites</link> </para>
 </step>
    <step><para>Create a new IAM role or policy appropriate access as either:</para>
    <itemizedlist><listitem><para>Restricted access, refer <link xlink:href="https://github.com/SUSE/community.sap_infrastructure/blob/main/roles/sap_vm_provision/PLATFORM_GUIDANCE.md#recommended-infrastructure-platform-authorizations"> authorization prerequisites</link></para></listitem>
      <listitem><para>Full access which is not recommended:</para>
      <itemizedlist><listitem><para><literal>arn:aws:iam::aws:policy/AmazonVPCFullAccess</literal></para></listitem>
        <listitem><para><literal>arn:aws:iam::aws:policy/AmazonEC2FullAccess</literal></para></listitem>
        <listitem><para><literal>arn:aws:iam::aws:policy/AmazonRoute53FullAccess</literal></para></listitem>
      </itemizedlist>
      </listitem>
    </itemizedlist>
    <note><para>A bastion host is required when provisioning to private cloud from outside, but it can be ignored if your control node has direct access to your Cloud account and VPC.
     This is accomplished by setting the variable <literal>sap_vm_provision_bastion_execution</literal> to <literal>false</literal>.
      </para></note>
    </step>
    <step><para>Prepare the control node.</para>
   <substeps>
    <step>
   <para>Install the <literal>sles_sap_automation</literal> pattern that contains all recommended packages for automation.</para>
   <screen>&prompt.sudo; <command>zypper install --type pattern sles_sap_automation</command></screen>
    </step>
   <step>
  <para>Verify that the pattern and all the packages are installed. </para>
  <screen>&prompt.sudo; <command>zypper info --type pattern sles_sap_automation</command>

    Refreshing service 'SUSE_Linux_Enterprise_Server_for_SAP_Applications_x86_64'.
    Retrieving repository 'SLE-Product-SLES_SAP-16.0' metadata .........................................................................[done]
    Building repository 'SLE-Product-SLES_SAP-16.0' cache ..............................................................................[done]
    Loading repository data...
    Reading installed packages...


    Information for pattern sles_sap_automation:
    --------------------------------------------
    Repository      : SLE-Product-SLES_SAP-16.0
    Name            : sles_sap_automation
    Version         : 16.0-160000.2.2
    Arch            : x86_64
    Vendor          : SUSE LLC &lt;https://www.suse.com/>
    Installed       : Yes
    Visible to User : Yes
    Summary         : automation deployment
    Description     :
        ansible playbooks and roles
    Contents        :
        S  | Name                         | Type    | Dependency
        ---+------------------------------+---------+-----------
        i  | ansible                      | package | Required
        i  | ansible-linux-system-roles   | package | Required
        i  | ansible-sap-infrastructure   | package | Required
        i  | ansible-sap-install          | package | Required
        i  | ansible-sap-operations       | package | Required
        i  | ansible-sap-playbooks        | package | Required
        i+ | patterns-sap-automation      | package | Required
        i+ | patterns-sap-base_sap_server | package | Required</screen>
  </step>
 <step><para>Install the AWS requirements, refer <link xlink:href="https://github.com/SUSE/community.sap_infrastructure/tree/main/roles/sap_vm_provision#amazon-web-services-aws-prerequisites"> prerequisites</link>.</para>
   <screen>&prompt.sudo; <command> ansible-galaxy collection install amazon.aws</command></screen>
   <screen>&prompt.sudo; <command> zypper install python313-boto3</command></screen>
   </step>
 </substeps>
  </step>
<step>
<para>Ansible Playbooks are installed in <literal>/usr/share/ansible/playbooks</literal> .
 To prevent changes from being overwritten by future package updates, these files should not be modified directly.
For this procedure:</para>
 <substeps>
 <step><para>Use scenario directory <literal>/usr/share/ansible/playbooks/ansible.playbooks_for_sap/deploy_scenarios/sap_s4hana_distributed_ha</literal> </para></step>
 <step><para>For simplicity, this procedure stores all customizations in the <literal>/playbooks</literal>  directory. Specifically, we will use <literal> /playbooks/S01</literal> as the dedicated directory for our system.</para></step>
 <step><para>Define minimal required variables and leave predefined in place for a simplified configuration. </para></step>
</substeps>
</step>
<step>
  <para>You can encrypt variables for playbooks in different ways to ensure security compliance.</para>
   <substeps>
   <step><para>Encrypt all variables for scenario. </para></step>
   <step><para>Split variables for reusability and encrypt only what is needed. For example:</para>
  <itemizedlist>
    <listitem><para>Cloud credentials and information encrypted in Ansible Vault.</para></listitem>
    <listitem><para>Scenario passwords encrypted in Ansible Vault.</para></listitem>
    <listitem><para>Scenario non-sensitive variables without using Ansible Vault.</para></listitem>
  </itemizedlist>
  <para>In this procedure, we use a simplified variant for encrypting whole files.</para>
  </step>
    </substeps>
  </step>
<step><para>Copy the variable files from source. Since we are provisioning new servers in AWS, only two variable files are required:</para>
<itemizedlist><listitem><para><literal>ansible_extravars.yml</literal>contains scenario specific variables.</para></listitem>
  <listitem><para><literal>ansible_extravars_aws_ec2_vs.yml</literal>contains platform specific variables.</para></listitem>
</itemizedlist>
<screen>cp /usr/share/ansible/playbooks/ansible.playbooks_for_sap/deploy_scenarios/sap_s4hana_distributed_ha/ansible_extravars.yml /playbooks/S01/</screen>
<screen>cp /usr/share/ansible/playbooks/ansible.playbooks_for_sap/deploy_scenarios/sap_s4hana_distributed_ha/ansible_extravars_aws_ec2_vs.yml /playbooks/S01/</screen>
</step>
<step><para>Update the variable file <literal>ansible_extravars.yml</literal>.</para>
<substeps>
  <step><para>The following variables define the provisioning method and platform.</para>
 <screen>sap_vm_provision_iac_type: "ansible"</screen>
 <screen>sap_vm_provision_iac_platform: "aws_ec2_vs"</screen>
</step>
<step><para>The following variable selects the desired topology from the <literal>sap_vm_provision_aws_ec2_vs_host_specifications_dictionary</literal>.</para>
<itemizedlist>
 <listitem><para>Predefined with minimum recommended instances for hosting a &sap; system.</para></listitem>
 <listitem><para>Customizable as you can edit existing entry or define a new plan.</para></listitem>
</itemizedlist>
  <screen>sap_vm_provision_host_specification_plan: "xsmall_256gb"</screen>
   </step>
 <step><para>The value of the variable <literal>sap_software_product</literal> is key predefined in the <literal> sap_software_install_dictionary</literal> dictionary.
  This dictionary follows same rules as the one above. You can edit an existing entry or create a new one plan.</para>
<screen>sap_software_product: "sap_s4hana_2023_distributed"</screen>
<screen> sap_install_media_detect_source_directory: "/software"</screen>
<important><para>The default execution ignores list of &sap; media files in the <literal>sap_software_install_dictionary</literal> dictionary, because the optional package <literal>ansible-sap-launchpad</literal> is not present.
  This package is available in Package Hub and it allows you to download SAP Media Software when provided with valid S-User credentials with appropriate download authorization.</para>
  <para>If this package is not installed, the playbook expects you to have all required files present in the path defined in the <literal>sap_install_media_detect_source_directory</literal> directory.
  The variables used by <literal>sap_launchpad</literal> role are <literal>sap_id_user</literal> and <literal>sap_id_user_password</literal>.</para></important>
<para>The password variables are simplified and use the Master password. This procedure does not include plan text passwords, you must
 define them when updating the variable files.</para>
<screen>sap_hana_install_use_master_password: "y"  # Use a master password for SAP HANA installation (y/n) (String).</screen>
<screen>sap_hana_install_use_master_password: "y"  # Use a master password for SAP HANA installation (y/n) (String).</screen>
<screen>sap_hana_install_use_master_password: "y"  # Use a master password for SAP HANA installation (y/n) (String).</screen>
<screen>sap_hana_install_use_master_password: "y"  # Use a master password for SAP HANA installation (y/n) (String).</screen>
</step>
<step><para>The variables for Virtual Overlay IP addresses need to follow specific convention for given platform.</para>
<screen>AWS:                  the VIP must be **outside** of any VPC Subnet ranges (e.g. 192.168.100.102/32)</screen>
<screen>sap_vm_provision_ha_vip_hana_primary: "ENTER_STRING_VALUE_HERE"</screen>
<screen>sap_vm_provision_ha_vip_nwas_abap_ascs: "ENTER_STRING_VALUE_HERE"</screen>
<screen>sap_vm_provision_ha_vip_nwas_abap_ers: "ENTER_STRING_VALUE_HERE"</screen>
</step>
</substeps>
</step>
<step><para>Update the variable file <literal> ansible_extravars_aws_ec2_vs.yml</literal>.</para>
<substeps>
<step>
 <para>The variables for connecting through Bastion host.</para>
 <screen>sap_vm_provision_bastion_user: "ENTER_STRING_VALUE_HERE"  # Bastion user name (String).</screen>
 <screen>sap_vm_provision_bastion_ssh_port: "ENTER_STRING_VALUE_HERE"  # Bastion user password (String).</screen>
 <screen>sap_vm_provision_bastion_public_ip: "ENTER_STRING_VALUE_HERE"  # Public IP of the bastion server (String).</screen>
<screen>sap_vm_provision_ssh_bastion_private_key_file_path: "ENTER_STRING_VALUE_HERE"  # Path to bastion server's SSH private key on the execution node (String).</screen>
<screen>sap_vm_provision_ssh_host_private_key_file_path: "ENTER_STRING_VALUE_HERE"  # Path to target host's SSH private key on the execution node (String).</screen>
</step>
<step>
  <para>The variables for connecting to a cloud environment.</para>
  <screen>sap_vm_provision_aws_access_key: "ENTER_STRING_VALUE_HERE"  # Access key ID (String).</screen>
  <screen>sap_vm_provision_aws_secret_access_key: "ENTER_STRING_VALUE_HERE"  # Secret access key (String).</screen>
  <screen>sap_vm_provision_aws_vpc_availability_zone: "ENTER_STRING_VALUE_HERE"  # Availability zone (String).</screen>
 <screen>sap_vm_provision_aws_vpc_subnet_id: "ENTER_STRING_VALUE_HERE" # VPC Subnet ID (String). if ansible_to_terraform, use "new"</screen>
 <screen>sap_vm_provision_dns_root_domain: "ENTER_STRING_VALUE_HERE"  # Root domain for DNS entries (e.g., example.com) (String).</screen>
 <screen>sap_vm_provision_aws_key_pair_name_ssh_host_public_key: "ENTER_STRING_VALUE_HERE"  # SSH Key name in AWS Console (String).</screen>
 <screen>sap_vm_provision_aws_vpc_sg_names: "ENTER_STRING_VALUE_HERE"  # Comma separated list of AWS VPC Service Group names (String).</screen>
</step>
<step>
  <para>The variable for selecting what OS image to use for provisioned instances are defined in the <literal>sap_vm_provision_aws_ec2_vs_host_os_image_dictionary </literal>
  dictionary, which defines the search pattern for images. In this procedure, a PAYG image is used.
 &sles; 16 images will be updated in the dictionary when cloud images are available.</para>
  <screen>sap_vm_provision_aws_ec2_vs_host_os_image: "sles-15-6-sap-ha"</screen>
 </step>
 <step><para>The scenario specific variables for platform required for configuring &ha;.</para>
<screen>sap_vm_provision_nfs_mount_point: "ENTER_STRING_VALUE_HERE" # e.g. fs-0000.efs.eu-west-2.amazonaws.com:/ </screen>
<screen>sap_vm_provision_nfs_mount_point_separate_sap_transport_dir: "ENTER_STRING_VALUE_HERE" # e.g. fs-0000.efs.eu-west-2.amazonaws.com:/</screen>
<screen>sap_vm_provision_nfs_mount_point_type: nfs4  # NFS version (String).</screen>
<screen>sap_vm_provision_nfs_mount_point_opts:
  nfsvers=4.1,rsize=1048576,wsize=1048576,hard,timeo=600,retrans=2,noresvport,acl  # NFS Mount options (String).</screen>
  <screen>sap_ha_pacemaker_cluster_aws_vip_update_rt: "ENTER_STRING_VALUE_HERE"  # AWS Routing Table ID (String).</screen>
</step>
</substeps>
</step>
<step><para>Encrypt files with Ansible Vault. Files can be encrypted either using prompt or with password file.
  This is easier for larger environments for reusability.</para>
<para>Encryption with prompt:</para>
<screen>&prompt.sudo;<command>ansible-vault encrypt ansible_extravars.yml ansible_extravars_aws_ec2_vs.yml</command></screen>
<para>Encryption with a password file, which requires appropriate permissions and protection for security compliance:</para>
<screen>&prompt.sudo;<command>ansible-vault encrypt --vault-password-file password.key ansible_extravars.yml ansible_extravars_aws_ec2_vs.yml</command></screen>
</step>
<step><para>Use the playbook directly from <literal>/usr/share/ansible/playbooks/ansible.playbooks_for_sap/deploy_scenarios/sap_s4hana_distributed_ha</literal> without editing it.
If you need to adjust the playbook, we recommend copying it outside of the package directory.
Execute the Ansible Playbook with Ansible Vault key file.</para>

<screen>&prompt.sudo;<command> ansible-playbook /usr/share/ansible/playbooks/ansible.playbooks_for_sap/deploy_scenarios/sap_s4hana_distributed_ha/ansible_playbook.yml \
    --extra-vars "@./ansible_extravars.yml" \
    --extra-vars "@./ansible_extravars_aws_ec2_vs.yml" \
    --vault-password-file password.key </command></screen>
</step>
 </procedure>
 <para><emphasis role="bold">Outcome</emphasis></para>
 <para>You now have a fully operational, &ha; and distributed &s4h; landscape on AWS.</para>
 <para>Your new environment includes:</para>
<itemizedlist>
 <listitem><para><emphasis role="bold" >A clustered &hana; database:</emphasis> With automated failover to ensure continuous availability.</para></listitem>
 <listitem><para><emphasis role="bold">A clustered ASCS/ERS Instance:</emphasis> Protecting the central services, which are critical for system operation.</para></listitem>
 <listitem><para><emphasis role="bold">Multiple application servers:</emphasis> To distribute the workload and provide scalability.</para></listitem>
 <listitem><para><emphasis role="bold">Shared storage:</emphasis> For binaries and transport files, accessible across the landscape.</para></listitem>
</itemizedlist>
<para><emphasis role="bold">Next steps</emphasis></para>
 <para>You can now proceed with post-installation tasks, such as:</para>
 <itemizedlist>
 <listitem><para><emphasis role="bold">System Validation:</emphasis> Performing health checks and verifying the &ha; functionality.</para></listitem>
 <listitem><para><emphasis role="bold">SAP Configuration:</emphasis> Applying initial SAP basis configurations, such as SAP Transport Management System (STMS) and profile parameter tuning.</para></listitem>
 <listitem><para><emphasis role="bold">Backup and Recovery:</emphasis> Implementing a robust backup and recovery strategy for the &hana; database and application servers.</para></listitem>
 <listitem><para><emphasis role="bold">Monitoring:</emphasis> Integrating the new landscape with your existing monitoring solutions.</para></listitem>
 </itemizedlist>
 </topic>