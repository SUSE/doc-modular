<?xml version="1.0" encoding="UTF-8"?>
<!-- This file originates from the project https://github.com/openSUSE/doc-kit -->
<!-- This file can be edited downstream. -->
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<!-- refers to legacy doc: <add github link to legacy doc piece, if applicable> -->
<!-- point back to this document with a similar comment added to your legacy doc piece -->
<!-- refer to README.md for file and id naming conventions -->
<!-- metadata is dealt with on the assembly level -->
<topic xml:id="deploy-sap-ansible-hosts"
 role="task" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>Deploying a sandbox ECC on &hana; system on existing hosts</title>
    <!-- can be changed via merge in the assembly -->
    <!--add author's email address-->
    <meta name="maintainer" content="amrita.sakthivel" its:translate="no"/>
    <abstract>
  <para>This is a detailed step-by-step procedure to deploy a non-production sandbox &sap; ECC on &hana; system on existing hosts.
    The <literal>ansible-sap-playbooks</literal> package is used to automate infrastructure provisioning and SAP software installation, resulting in a compact, single-node environment suitable for development, testing or training.
  </para>
    </abstract>
  </info>
  <para>This procedure is intended for system administrators, DevOps engineers and SAP Basis consultants who have a working knowledge of AWS, Ansible and &sap; principles.
  </para>
  <para>With this procedure, you can:</para>
<itemizedlist>
  <listitem><para>Prepare a control node and existing hosts.</para></listitem>
  <listitem><para>Configure Ansible variables for the sandbox deployment.</para></listitem>
  <listitem><para>Execute a single playbook to provision and configure the entire &sap; system.</para></listitem>
  <listitem><para>Achieve a fully functional  system ready for post-installation activities.</para></listitem>
   </itemizedlist>
   <para> The resulting &sap; ECC system consist of a single server with the following components:</para>
  <itemizedlist>
    <listitem><para>One &hana; database.</para></listitem>
    <listitem><para>One &sap; ABAP SAP Central Services (ASCS).</para></listitem>
    <listitem><para>One Primary Application Server (PAS).</para></listitem>
       </itemizedlist>
       <procedure><title>Deployment on existing hosts</title>
        <para>This procedure assumes you have an existing server or a virtual machine on which you will install the &sap; ECC sandbox system.
 It is a must that you provide this host and ensure it is ready for Ansible automation. It is a requirement to establish a secure and
 passwordless SSH connection from your Ansible control node to the target host.</para>
 <step><para>Create an Ansible inventory file.</para>
<substeps>
<step><para>Ansible needs to know which host(s) to target. Copy predefined inventory <literal>/usr/share/ansible/playbooks/ansible.playbooks_for_sap/deploy_scenarios/sap_ecc_hana_sandbox/optional/ansible_inventory_noninteractive.yml</literal>
to your working directory <literal>/playbooks/E01/</literal>.
</para>
</step>
<step><para>Update the file with the connection details of your hosts. For example:</para>
<screen>
  ---

  hana_primary:
    hosts:
      sap-s4hana:
        ansible_host: 192.168.1.100
        ansible_port: 22
        ansible_user: root
        ansible_ssh_private_key_file: "/playbook/E01/hosts_rsa"
</screen>
<note><para>This group name is used in the example playbook and renaming it would require customizing playbook to change all <literal>hosts:</literal> entries.</para></note>
</step>
</substeps>
</step>
<step><para>Configure Passwordless SSH Authentication.</para>
<para>For automation, the Ansible control node must be able to connect to the target host as the &rootuser; without a password prompt.
This is achieved using SSH keys.</para>
<note><para>For simplicity, this procedure uses &rootuser; login, which is acceptable for a temporary sandbox environment.
For production systems, using a dedicated, non-root user is the recommended security practice.
</para></note>
<substeps>
<step><para>Generate an SSH Key if you do not have one. Press Enter to accept the default location and leave the passphrase empty for passwordless access. </para>
<screen>&prompt.root; ssh-keygen -t rsa</screen>
</step>
<step><para>Copy the SSH public key to the target host.
The easiest way to copy your public key to the target host's <literal>authorized_keys</literal> file is using the <literal>ssh-copy-id</literal> utility.
This command prompts you for the <literal>root</literal> password of the target host one last time.</para>
<screen>&prompt.user; ssh-copy-id root@192.168.1.100</screen>
</step>
</substeps>
</step>
<step><para>Verify that Ansible can successfully connect to and gather facts from your target host.</para>
<screen>&prompt.sudo; ansible -i ansible_inventory_noninteractive.yml all -m ping</screen>
<para>A successful connection test shows a Ping Pong response.</para>
<screen>
  192.168.1.100 | SUCCESS => {
    "ansible_facts": {
        "discovered_interpreter_python": "/usr/bin/python3.13"
    },
    "changed": false,
    "ping": "pong"
}
</screen>
</step>
        <step><para>Prepare the control node.</para>
       <substeps>
        <step>
       <para>Install the <literal>sles_sap_automation</literal> pattern that contains all recommended packages for automation.</para>
       <screen>&prompt.sudo; <command>zypper install --type pattern sles_sap_automation</command></screen>
        </step>
       <step>
      <para>Verify that the pattern and all the packages are installed. </para>
      <screen>&prompt.sudo; <command>zypper info --type pattern sles_sap_automation</command>

        Refreshing service 'SUSE_Linux_Enterprise_Server_for_SAP_Applications_x86_64'.
        Retrieving repository 'SLE-Product-SLES_SAP-16.0' metadata .........................................................................[done]
        Building repository 'SLE-Product-SLES_SAP-16.0' cache ..............................................................................[done]
        Loading repository data...
        Reading installed packages...


        Information for pattern sles_sap_automation:
        --------------------------------------------
        Repository      : SLE-Product-SLES_SAP-16.0
        Name            : sles_sap_automation
        Version         : 16.0-160000.2.2
        Arch            : x86_64
        Vendor          : SUSE LLC &lt;https://www.suse.com/>
        Installed       : Yes
        Visible to User : Yes
        Summary         : automation deployment
        Description     :
            ansible playbooks and roles
        Contents        :
            S  | Name                         | Type    | Dependency
            ---+------------------------------+---------+-----------
            i  | ansible                      | package | Required
            i  | ansible-linux-system-roles   | package | Required
            i  | ansible-sap-infrastructure   | package | Required
            i  | ansible-sap-install          | package | Required
            i  | ansible-sap-operations       | package | Required
            i  | ansible-sap-playbooks        | package | Required
            i+ | patterns-sap-automation      | package | Required
            i+ | patterns-sap-base_sap_server | package | Required</screen>
      </step>
       <step>
    <para>Ansible Playbooks are installed in <literal>/usr/share/ansible/playbooks</literal> .
     To prevent changes from being overwritten by future package updates, these files should not be modified directly.
    For this procedure:</para>
     <substeps>
     <step><para>Use scenario directory <literal> /usr/share/ansible/playbooks/ansible.playbooks_for_sap/deploy_scenarios/sap_ecc_hana_sandbox</literal>. </para></step>
     <step><para>Use <literal> /playbooks/S01</literal> as the dedicated directory. For simplicity, all customizations are stored in the <literal>/playbooks</literal>directory.</para></step>
     <step><para>Define minimal required variables and leave predefined in place for a simplified configuration. </para>
      <important><para>Ansible Playbooks for &sap; are designed to skip provisioning when existing hosts are used, but the remaining tasks are all retained.
    This means that there will be some variables that are part of provisioning, but they can be used even for existing hosts.
    For example, the <literal>sap_vm_provision_existing_hosts_host_specifications_dictionary</literal> dictionary will not provision new infrastructure, but it will be used to configure storage if defined.</para>
    </important></step></substeps>
    </step>
    <step>
      <para>You can encrypt variables for playbooks in different ways to ensure security compliance.</para>
       <substeps>
       <step><para>Encrypt all variables for scenario. </para></step>
       <step><para>Split variables for reusability and encrypt only what is needed. For example:</para>
      <itemizedlist>
        <listitem><para>Cloud credentials and information encrypted in Ansible Vault.</para></listitem>
        <listitem><para>Scenario passwords encrypted in Ansible Vault.</para></listitem>
        <listitem><para>Scenario non-sensitive variables without using Ansible Vault.</para></listitem>
      </itemizedlist>
      <para>In this procedure, we use a simplified variant for encrypting whole files.</para>
      </step>
        </substeps>
      </step>
    <step><para>Copy the variable files from source. Since we are using existing hosts, only two variable files are required:</para>
    <itemizedlist><listitem><para><literal>ansible_extravars.yml</literal>contains scenario specific variables.</para></listitem>
      <listitem><para><literal>optional/ansible_extravars_existing_hosts.yml</literal>contains platform specific variables.</para></listitem>
    </itemizedlist>
    <screen>cp /usr/share/ansible/playbooks/ansible.playbooks_for_sap/deploy_scenarios/sap_ecc_hana_sandbox/ansible_extravars.yml /playbooks/E01/
    </screen>
    <screen>cp /usr/share/ansible/playbooks/ansible.playbooks_for_sap/deploy_scenarios/sap_ecc_hana_sandbox/optional/ansible_extravars_existing_hosts.yml /playbooks/E01/</screen>
    </step>
    <step><para>Update the variable file <literal>ansible_extravars.yml</literal>.</para>
    <substeps>
      <step><para>The following variable define the provisioning method.</para>
     <screen>sap_vm_provision_iac_type: "ansible"</screen>
     </step>
    <step><para>The following variable selects the desired topology from the <literal>sap_vm_provision_aws_ec2_vs_host_specifications_dictionary</literal>.</para>
    <itemizedlist>
     <listitem><para>Predefined with minimum recommended instances for hosting a &sap; system.</para></listitem>
     <listitem><para>Customizable as you can edit existing entry or define a new plan.</para></listitem>
    </itemizedlist>
      <screen>sap_vm_provision_host_specification_plan: "xsmall_256gb"</screen>
       </step>
     <step><para>The value of the variable <literal>sap_software_product</literal> is key predefined in the <literal> sap_software_install_dictionary</literal> dictionary.
      This dictionary follows same rules as the one above. You can edit an existing entry or create a new one plan.</para>
    <screen>sap_software_product: "sap_ecc6_ehp8_hana_sandbox"</screen>
    <screen> sap_install_media_detect_source_directory: "/software"</screen>
    <important><para>The default execution ignores list of &sap; media files in the <literal>sap_software_install_dictionary</literal> dictionary, because the optional package <literal>ansible-sap-launchpad</literal> is not present.
      This package is available in Package Hub and it allows you to download SAP Media Software when provided with valid S-User credentials with appropriate download authorization.</para>
      <para>If this package is not installed, the playbook expects you to have all required files present in the path defined in the <literal>sap_install_media_detect_source_directory</literal> directory.
      The variables used by <literal>sap_launchpad</literal> role are <literal>sap_id_user</literal> and <literal>sap_id_user_password</literal>.</para></important>
      </step>
      </substeps>
    </step>
      <step>
      <para>The password variables are simplified and use the Master password. This procedure does not include plan text passwords, you must
     define them when updating the variable files.</para>
    <screen>sap_hana_install_use_master_password: "y"  # Use a master password for SAP HANA installation (y/n) (String).</screen>
    <screen>sap_hana_install_use_master_password: "y"  # Use a master password for SAP HANA installation (y/n) (String).</screen>
    <screen>sap_hana_install_use_master_password: "y"  # Use a master password for SAP HANA installation (y/n) (String).</screen>
    <screen>sap_hana_install_use_master_password: "y"  # Use a master password for SAP HANA installation (y/n) (String).</screen>
    </step>
    <step><para>Update the variable file <literal> ansible_extravars_gcp_ce_vm.yml</literal>.</para>
    <substeps>
      <step>
        <para>The variables for connecting to existing hosts.</para>
        <screen># Path to target host's SSH private key on the execution node (String).
         # This SSH key has to be added to authorized_keys on managed node.
         sap_vm_provision_ssh_host_private_key_file_path: "ENTER_STRING_VALUE_HERE"</screen>
         <important><para>Ansible playbooks for &sap; use Ansible Fact <literal>ansible_domain</literal>, which requires a valid <literal>/etc/hosts</literal> configuration on your existing hosts with FQDN to obtain domain name.</para></important>
        </step>
    <step>
      <para>The variables for connecting to a cloud environment.</para>
      <screen>sap_vm_provision_gcp_credentials_json: "ENTER_STRING_VALUE_HERE"  # Path to JSON credentials file (String).</screen>
      <screen>sap_vm_provision_gcp_project: "ENTER_STRING_VALUE_HERE"  # Project name (String).</screen>
      <screen>sap_vm_provision_gcp_region_zone: "ENTER_STRING_VALUE_HERE"  # Region zone (String).</screen>
     <screen>sap_vm_provision_gcp_vpc_name: "ENTER_STRING_VALUE_HERE"  # VPC name (String).</screen>
     <screen>sap_vm_provision_gcp_vpc_subnet_name: "ENTER_STRING_VALUE_HERE"  # VPC Subnet name (String).</screen>
     <screen>sap_vm_provision_dns_root_domain: "ENTER_STRING_VALUE_HERE"  # Root domain for DNS entries (e.g., example.com) (String).</screen>
     </step>
    </substeps>
    </step>
    <step>
      <para>The variable for selecting what OS image to use for provisioned instances are defined in the <literal>sap_vm_provision_aws_ec2_vs_host_os_image_dictionary </literal>
      dictionary, which defines the search pattern for images. In this procedure, a PAYG image is used.
     &sles; 16 images will be updated in the dictionary when cloud images are available.</para>
      <screen>sap_vm_provision_gcp_ce_vm_host_os_image: "sles-15-6-sap-byos"</screen>
      <screen>sap_vm_provision_os_online_registration_user: "ENTER_STRING_VALUE_HERE"  # User/Email for SUSEConnect registration (String).</screen>
      <screen>sap_vm_provision_os_online_registration_passcode:  "ENTER_STRING_VALUE_HERE"  # Registration code for SUSEConnect registration (String).</screen>
     </step>
     <step><para>Encrypt files with Ansible Vault. Files can be encrypted either using prompt or with password file.
      This is easier for larger environments for reusability.</para>
    <para>Encryption with prompt:</para>
    <screen>&prompt.sudo;<command>ansible-vault encrypt ansible_extravars.yml ansible_extravars_gcp_ce_vm.yml</command></screen>
    <para>Encryption with a password file, which requires appropriate permissions and protection for security compliance:</para>
    <screen>&prompt.sudo;<command>ansible-vault encrypt --vault-password-file password.key ansible_extravars.yml ansible_extravars_gcp_ce_vm.yml</command></screen>
    </step>
    <step><para>Use the playbook directly from <literal>/usr/share/ansible/playbooks/ansible.playbooks_for_sap/deploy_scenarios/sap_s4hana_distributed_ha</literal> without editing it.
    If you need to adjust the playbook, we recommend copying it outside of the package directory.
    Execute the Ansible Playbook with Ansible Vault key file.</para>

    <screen>&prompt.sudo;<command> ansible-playbook /usr/share/ansible/playbooks/ansible.playbooks_for_sap/deploy_scenarios/sap_bw4hana_sandbox/ansible_playbook.yml \
      --extra-vars "@./ansible_extravars.yml" \
      --extra-vars "@./ansible_extravars_gcp_ce_vm.yml" \
      --vault-password-file password.key</command></screen>
    </step>
     </procedure>
     <para><emphasis role="bold">Outcome</emphasis></para>
     <para>You now have a fully operational fully operational, non-production sandbox &sap; S/4HANA system running on a single virtual machine in GCP.</para>
     <para>Your new environment includes:</para>
    <itemizedlist>
     <listitem><para><emphasis role="bold" >A Single GCP Compute Engine VM:</emphasis> Hosting all SAP instances.</para></listitem>
     <listitem><para><emphasis role="bold">&hana; Database:</emphasis>The underlying database for your BW/4HANA system.</para></listitem>
     <listitem><para><emphasis role="bold">&sap; ASCS and PAS Instances:</emphasis> The central services and primary application server are installed on the same host.</para></listitem>
     <listitem><para><emphasis role="bold">Shared storage:</emphasis>  An NFS mount is configured for software and transport files.</para></listitem>
    </itemizedlist>
    <para><emphasis role="bold">Next steps</emphasis></para>
     <para>You can now proceed with post-installation tasks, such as:</para>
     <itemizedlist>
     <listitem><para><emphasis role="bold">System Validation:</emphasis> Perform basic health checks to ensure the SAP system is running correctly.</para></listitem>
     <listitem><para><emphasis role="bold">Development and Prototyping:</emphasis> Begin developing and testing new data models and reports in a safe, isolated environment.</para></listitem>
     <listitem><para><emphasis role="bold">&sap; Configuration</emphasis> Apply any necessary post-installation configurations or client copies.</para></listitem>
     <listitem><para><emphasis role="bold">Learning and Exploration:</emphasis> Use the system to explore the features of SAP BW/4HANA.
     </para></listitem>
     </itemizedlist>
     </topic>
