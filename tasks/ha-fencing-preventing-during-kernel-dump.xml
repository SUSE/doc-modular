<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>

<!-- refers to legacy doc: https://github.com/SUSE/doc-sleha/blob/main/xml/ha_fencing.xml -->

<topic xml:id="ha-fencing-preventing-during-kernel-dump"
 role="task" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>Preventing node fencing during a kernel dump</title>
    <meta name="maintainer" content="tahlia.richardson@suse.com" its:translate="no"/>
    <abstract>
      <para>
        The <literal>stonith:fence_kdump</literal> resource agent checks if a kernel dump (<systemitem>kdump</systemitem>) is in progress on a node. If so, it returns true and the cluster acts <emphasis>as if</emphasis> the node was fenced, because the node will reboot after the <systemitem>kdump</systemitem> is complete. If not, it returns a failure and the next &stonith; device is triggered.
      </para>
      <para>
        The <systemitem>kdump</systemitem> plug-in must be used together with a physical &stonith; device. It does <emphasis>not</emphasis> work with &sbd;. For the fencing mechanism to work properly, you must specify the order of the fencing devices so that <systemitem>kdump</systemitem> is checked before the physical &stonith; device is triggered.
      </para>
    </abstract>
  </info>

  <itemizedlist>
    <title>Requirements</title>
    <listitem>
      <para>
        The cluster uses a physical &stonith; device for node fencing.
      </para>
    </listitem>
    <listitem>
      <para>
        Cluster resources for the &stonith; device are already configured.
      </para>
    </listitem>
    <listitem>
      <para>
        <systemitem>kdump</systemitem> is installed and configured on all nodes.
        <!--Add a link when available?-->
      </para>
    </listitem>
  </itemizedlist>
  <para>
    Perform this procedure on only one node in the cluster:
  </para>
  <procedure>
    <step>
      <para>
        Log in either as the &rootuser; user or as a user with <command>sudo</command> privileges.
      </para>
    </step>
    <step>
      <para>
        Start the <command>crm</command> interactive shell:
      </para>
<screen>&prompt.user;<command>sudo crm configure</command></screen>
    </step>
    <step>
      <para>
        Create a <literal>stonith:fence_kdump</literal> resource for each node in the cluster.
        For example:
      </para>
<screen>&prompt.crm.conf;<command>primitive fence-kdump-<replaceable>NODE-NAME</replaceable> stonith:fence_kdump \
  params nodename=<replaceable>NODE-NAME</replaceable> \</command><co xml:id="co-ha-fence-kdump-nodename"/>
  <command>pcmk_host_list=<replaceable>NODE-NAME</replaceable> \
  timeout=60</command><co xml:id="co-ha-fence-kdump-timeout"/></screen>
      <calloutlist>
        <callout arearefs="co-ha-fence-kdump-nodename">
          <para>
            Specify the node for this resource to listen for a message from. Do we need both nodename and pcmk_host_list, or only one?
          </para>
        </callout>
        <callout arearefs="co-ha-fence-kdump-timeout">
          <para>
            Define how long to wait for a message from the specified node. If a message is received, then a <systemitem>kdump</systemitem> is in progress and the fencing mechanism considers the node to be fenced. If no message is received, then a <systemitem>kdump</systemitem> is not in progress and the next &stonith; device in the <literal>fencing_topology</literal> fences the node.
          </para>
        </callout>
      </calloutlist>
      <para>
        For more information, run the <command>crm ra info stonith:fence_kdump</command> command.
      </para>
    </step>
    <step>
      <para>
        Do we need location constraints?
      </para>
<screen>&prompt.crm.conf;<command>location l-st-&node1; st-ibmrsa-1 -inf: &node1;</command>
&prompt.crm.conf;<command>location l-st-&node2; st-ibmrsa-2 -inf: &node2;</command></screen>
    </step>
    <step>
      <para>
        To have <systemitem>kdump</systemitem> checked before triggering a real fencing mechanism (like <literal>external/ipmi</literal>), use a configuration similar to the following:
      </para>
<screen>&prompt.crm.conf;<command>fencing_topology \
  &node1;: kdump-node1 ipmi-node1 \
  &node2;: kdump-node2 ipmi-node2</command></screen>
      <para>
        For more information, run the <command>crm configure help fencing_topology</command> command.
      </para>
    </step>
    <step>
      <para>
        Commit your changes:
      </para>
<screen>&prompt.crm.conf;<command>commit</command></screen>
    </step>
    <step>
      <para>
        Exit the <command>crm</command> interactive shell:
      </para>
<screen>&prompt.crm.conf;<command>quit</command></screen>
    </step>
    <step>
      <para>
        Open the firewall port for <literal>fence_kdump</literal> on all nodes:
      </para>
<screen>&prompt.user;<command>sudo crm cluster run "sudo firewall-cmd --add-port=7410/udp"</command></screen>
    </step>
    <step>
      <para>
        Configure <literal>fence_kdump_send</literal> to send a message to all nodes when the <systemitem>kdump</systemitem> process is finished:
      </para>
      <substeps>
        <step>
          <para>
            In the <filename>/etc/sysconfig/kdump</filename> file, edit the <literal>KDUMP_POSTSCRIPT</literal> line. For example:
          </para><!-- Do we really need an interval if the count is only 1? -->
<screen>KDUMP_POSTSCRIPT="/usr/lib/fence_kdump_send -i 10 -p 7410 -c 1 <replaceable>NODELIST</replaceable>"</screen>
        <para>
          Replace <replaceable>NODELIST</replaceable> with the host names of all the cluster nodes.
        </para>
        </step>
        <step>
          <para>
            Copy the <filename>/etc/sysconfig/kdump</filename> file to the rest of the nodes:
          </para>
<screen>&prompt.user;<command>sudo crm cluster copy /etc/sysconfig/kdump</command></screen>
        </step>
      </substeps>
    </step>
    <step>
      <para>
        Restart the <systemitem>kdump</systemitem> service on all nodes:
      </para>
<screen>&prompt.user;<command>sudo crm cluster run "sudo systemctl restart kdump.service"</command></screen>
      <para>
        This regenerates <filename>initrd</filename> so that it includes the library <literal>fence_kdump_send</literal> with network enabled.
      </para>
    </step>
  </procedure>
</topic>
