<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>

<!-- refers to legacy doc: https://github.com/SUSE/doc-sleha/blob/main/xml/ha_qdevice-qnetd.xml -->

<topic xml:id="ha-qdevice-connecting-clients-qnetd"
 role="task" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>Connecting &qdevice; clients to the &qnet; server</title>
    <meta name="maintainer" content="tahlia.richardson@suse.com" its:translate="no"/>
    <abstract>
      <para>
       After you set up your &qnet; server, you can set up and run the clients.
         You can connect the clients to the &qnet; server during the installation
         of your cluster, or you can add them later. This procedure documents how
         to add them later.
      </para>
    </abstract>
  </info>
  <important role="compact">
        <para>
          To complete the &qnet; configuration, the clients must have &rootuser; SSH access
          to the &qnet; server.
        </para>
       </important>
      <procedure>
         <step>
            <para>
             On all nodes, install the <package>corosync-qdevice</package> package:
            </para>
<screen>&prompt.user;<command>sudo zypper install corosync-qdevice</command></screen>
         </step>
         <step>
            <para>
             On one of the nodes, run the following command to configure &qdevice;:
            </para>
<screen>&prompt.user;<command>sudo crm cluster init qdevice</command></screen>
         </step>
         <step>
          <para>
            Confirm with <literal>y</literal> that you want to configure &qdevice; and &qnet;.
          </para>
        </step>
        <step>
          <para>
            Enter the IP address or host name of the &qnet; server, with or without a user name.
          </para>
          <itemizedlist>
            <listitem>
              <para>
                If you include a non-&rootuser; user name, you are prompted for the password, and the
                script configures passwordless SSH authentication from the node to the &qnet; server.
              </para>
            </listitem>
            <listitem>
              <para>
                If you omit a user name, the script defaults to the &rootuser; user, so passwordless
                SSH authentication must already be configured for the node to access the &qnet; server.
              </para>
            </listitem>
          </itemizedlist>
          <para>
            For the remaining fields, accept the default values<!--or change them as required-->:
          </para>
        </step>
        <step>
          <para>
            Accept the proposed port (<literal>5403</literal>) or enter a different one.
          </para>
        </step>
        <step>
          <para>
            Choose the algorithm that determines how votes are assigned. The default is
            <literal>ffsplit</literal>.
          </para>
        </step>
        <step>
          <para>
            Choose the method to use when a tie-breaker is required. The default is
            <literal>lowest</literal>.
          </para>
        </step>
        <step>
          <para>
            Choose whether to enable TLS for client certificate checking:
          </para>
          <itemizedlist>
            <listitem>
              <para>
                <literal>off</literal>: TLS is not required and should not be tried.
              </para>
            </listitem>
            <listitem>
              <para>
                <literal>on</literal>: Attempt to connect with TLS, but connect without TLS
                if it is not available. This is the default setting.
              </para>
            </listitem>
            <listitem>
              <para>
                <literal>required</literal>: TLS is mandatory. &qdevice; will exit with an
                error if TLS is not available.
              </para>
            </listitem>
          </itemizedlist>
        </step>
        <step performance="optional">
          <para>
            Enter heuristics commands to affect how votes are determined. To skip this
            step, leave the field blank.
          </para>
          <para>
            You can pass one or more commands (separated by semicolons) with absolute paths. For example, if your own command for heuristic checks is located at <filename>/usr/sbin/my-script.sh</filename>. Only when all commands finish successfully (return
         code is zero), have the heuristics passed.
      </para>
      <para>
         The command or commands can be written in any language such as Shell, Pythons or Ruby.
         If they succeed, they return <literal>0</literal> (zero), otherwise they return an error code.
      </para>
        </step>
      </procedure>
      <para>
        The script configures &qdevice; on the nodes and completes the &qnet; configuration
        on the &qnet; server, including generating CA and server certificates, starting the
        &qnet; daemon, and updating the cluster's quorum configuration.
      </para>
      <important>
        <title><literal>SBD_WATCHDOG_TIMEOUT</literal> for diskless SBD and &qdevice;</title>
        <para>
          If you use &qdevice; with diskless SBD, the <literal>SBD_WATCHDOG_TIMEOUT</literal>
          value must be greater than &qdevice;'s <literal>sync_timeout</literal> value,
          or SBD will time out and fail to start.
        </para>
        <para>
          The default value for <literal>sync_timeout</literal> is 30 seconds.
          Therefore, in the file <filename>/etc/sysconfig/sbd</filename>, make sure
          that <literal>SBD_WATCHDOG_TIMEOUT</literal> is set to a greater value,
          such as <literal>35</literal>.
        </para>
      </important>
  <para>
    Check the status of the cluster with <command>crm status</command>.
  </para>
</topic>
