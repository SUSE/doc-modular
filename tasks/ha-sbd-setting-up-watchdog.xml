<?xml version="1.0" encoding="UTF-8"?>
<!-- This file originates from the project https://github.com/openSUSE/doc-kit -->
<!-- This file can be edited downstream. -->
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>


<!-- Test and update this procedure!! -->


<!-- refers to legacy doc: https://github.com/SUSE/doc-sleha/blob/main/xml/ha_storage_protection.xml -->
<topic xml:id="ha-sbd-setting-up-watchdog"
 role="task" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>Setting up the &sbd; watchdog</title>
    <meta name="maintainer" content="tahlia.richardson@suse.com" its:translate="no"/>
    <abstract>
      <para>
        &sbd; needs a watchdog on each node to ensure that misbehaving nodes are really stopped.
        Modern systems support a hardware watchdog that needs to be <quote>fed</quote> by a software
        component (in this case, the &sbd; daemon). &sbd; <quote>feeds</quote> the watchdog by
        regularly writing a service pulse to it. If &sbd; stops feeding the watchdog, the hardware
        enforces a system restart. This protects against failures of the &sbd; process itself,
        such as becoming stuck on an I/O error.
      </para>
    </abstract>
  </info>
  <para>
    &sleha; ships with kernel modules that provide hardware-specific watchdog drivers. If no
    watchdog matches your hardware, the software watchdog (<systemitem>softdog</systemitem>) can
    be used for testing purposes. However, the <systemitem>softdog</systemitem> driver assumes that
    at least one CPU is still running, so if all CPUs are stuck, <systemitem>softdog</systemitem>
    cannot reboot the system. In contrast, hardware watchdogs work even if all CPUs are stuck.
    Therefore, <systemitem>softdog</systemitem> is <emphasis>not</emphasis> recommended for
    clusters in production environments.
  </para>
  <para>
    The following table lists commonly used watchdog drivers, but is not a complete list.
    If your hardware is not listed here, ask your hardware or system vendor for details about
    system-specific watchdog configuration.
  </para>
  <table>
    <title>Commonly used watchdog drivers</title>
    <tgroup cols="2">
     <thead>
      <row><entry>Hardware</entry><entry>Driver</entry></row>
     </thead>
     <tbody>
      <row><entry>HP</entry><entry><systemitem>hpwdt</systemitem></entry></row>
      <row><entry>Dell, Lenovo (Intel TCO)</entry><entry><systemitem>iTCO_wdt</systemitem></entry></row>
      <row><entry>Fujitsu</entry><entry><systemitem>ipmi_watchdog</systemitem></entry></row>
      <row><entry>LPAR on IBM Power</entry><entry><systemitem>pseries-wdt</systemitem></entry></row>
      <row><entry>VM on IBM z/VM</entry><entry><systemitem>vmwatchdog</systemitem></entry></row>
      <row><entry>Xen VM (DomU)</entry><entry><systemitem>xen_xdt</systemitem></entry></row>
      <row><entry>VM on VMware vSphere</entry><entry><systemitem>wdat_wdt</systemitem></entry></row>
      <row><entry>Generic</entry><entry><systemitem>softdog</systemitem></entry></row>
     </tbody>
    </tgroup>
   </table>
   <para>
    Finding the right watchdog kernel module for a given system is not
    trivial. Automatic probing fails often. As a result, many modules
    are already loaded before the right one gets a chance.
    Perform this procedure on <emphasis>all</emphasis> nodes you intend to add to the cluster:
   </para>
  <procedure>
    <title>Loading the correct watchdog module</title>
     <step>
      <para>List the drivers that are installed with your kernel version:</para>
       <screen>&prompt.user;<command>rpm -ql kernel-<replaceable>VERSION</replaceable> | grep watchdog</command></screen>
      </step>
      <step xml:id="st-ha-storage-listwatchdog-modules">
       <para>List any watchdog modules that are currently loaded in the kernel:</para>
       <screen>&prompt.user;<command>lsmod | egrep "(wd|dog)"</command></screen>
      </step>
      <step>
       <para>If you get a result, unload the wrong module:</para>
       <screen>&prompt.user;<command>rmmod <replaceable>WRONG_MODULE</replaceable></command></screen>
      </step>
      <step>
     <para> Enable the watchdog module that matches your hardware: </para>
     <screen>&prompt.user;<command>echo <replaceable>WATCHDOG_MODULE</replaceable> > /etc/modules-load.d/watchdog.conf</command>
&prompt.user;<command>systemctl restart systemd-modules-load</command></screen>
    </step>
    <step>
     <para>Test whether the watchdog module is loaded correctly:</para>
     <screen>&prompt.user;<command>lsmod | grep dog</command></screen>
    </step>
    <step>
     <para>Verify if the watchdog device is available and works:</para>
     <screen>&prompt.user;<command>ls -l /dev/watchdog*</command>
&prompt.user;<command>sbd query-watchdog</command></screen>
     <para> If your watchdog device is not available, check the
      module name and options. Maybe use another driver. </para>
    </step>
    <step>
     <para>
      Verify if the watchdog device works:
     </para>
     <screen>&prompt.user;<command>sbd -w <replaceable>WATCHDOG_DEVICE</replaceable> test-watchdog</command></screen>
    </step>
    <step>
     <para>
      Reboot your machine to make sure there are no conflicting kernel modules. For example,
      if you find the message <literal>cannot register ...</literal> in your log, this would indicate
      such conflicting modules. <!--To ignore such modules, refer to <link
       xlink:href="https://documentation.suse.com/sles/html/SLES-all/cha-mod.html#sec-mod-modprobe-blacklist"/>.-->
     </para>
    </step>
   </procedure>
  <important>
    <title>Accessing the watchdog timer</title>
    <para>
      Some hardware vendors ship systems management software that uses the watchdog for system
      resets (for example, HP ASR daemon). If the watchdog is used by &sbd;, disable such software.
      No other software must access the watchdog timer.
    </para>
  </important>
</topic>
