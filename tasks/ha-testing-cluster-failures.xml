<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>

<!-- refers to legacy doc: https://github.com/SUSE/doc-sleha/blob/main/xml/article_installation.xml -->

<topic xml:id="ha-testing-cluster-failures"
 role="task" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>Testing cluster failures</title>
    <meta name="maintainer" content="tahlia.richardson@suse.com" its:translate="no"/>
    <abstract>
      <para>
        The <command>crm cluster crash_test</command> command simulates cluster failures and
        reports the results.
      </para>
    </abstract>
  </info>
  <para>
    The command supports the following checks:
  </para>
  <variablelist>
    <varlistentry>
      <term><option>--fence-node <replaceable>NODE</replaceable></option></term>
      <listitem>
        <para>
          Fences a specific node passed from the command line.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term><option>--kill-sbd</option>/<option>--kill-corosync</option>/
       <option>--kill-pacemakerd</option></term>
      <listitem>
        <para>
          Kills the daemons for &sbd;, &corosync;, or &pace;. After running one of these tests,
          you can find a report in the directory <filename>/var/lib/crmsh/crash_test/</filename>.
          The report includes a test case description, action logging, and an explanation of
          possible results.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term><option>--split-brain-iptables</option></term>
      <listitem>
        <para>
          Simulates a split-brain scenario by blocking the &corosync; port, and checks whether one
          node can be fenced as expected. You must install <package>iptables</package> before you
          can run this test.
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    For more information, run the <command>crm cluster crash_test --help</command> command.
  </para>
  <para>
    This example uses nodes called <systemitem>&node1;</systemitem> and
    <systemitem>&node2;</systemitem>, and tests fencing <systemitem>&node2;</systemitem>. To watch
    <systemitem>&node2;</systemitem> change status during the test, you can log in to &hawk; and
    navigate to <menuchoice><guimenu>Status</guimenu><guimenu>Nodes</guimenu></menuchoice>, or
    run <command>crm status</command> from another node.
  </para>
  <example>
    <title>Manually triggering node fencing</title>
<screen><prompt>admin@alice&gt;</prompt> <command>sudo crm cluster crash_test --fence-node &node2;</command>

==============================================
Testcase:          Fence node &node2;
Fence action:      reboot
Fence timeout:     95

!!! WARNING WARNING WARNING !!!
THIS CASE MAY LEAD TO NODE BE FENCED.
TYPE Yes TO CONTINUE, OTHER INPUTS WILL CANCEL THIS CASE [Yes/No](No): <command>Yes</command>
INFO: Trying to fence node "&node2;"
INFO: Waiting 95s for node "&node2;" reboot...
INFO: Node "&node2;" will be fenced by "&node1;"!
INFO: Node "&node2;" was fenced by "&node1;" at <replaceable>DATE</replaceable> <replaceable>TIME</replaceable></screen>
  </example>
</topic>
