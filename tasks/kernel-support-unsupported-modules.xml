<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<!-- refers to legacy doc: <add github link to legacy doc piece, if applicable> -->
<!-- point back to this document with a similar comment added to your legacy doc piece -->
<!-- refer to README.md for file and id naming conventions -->
<!-- metadata is dealt with on the assembly level -->
<topic xml:id="kernel-support-loading-unsupported"
 role="task" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>Working with unsupported modules</title><!-- can be changed via merge
in the assembly -->
    <!-- add author's e-mail -->
    <meta name="maintainer" content="jsindelarova@suse.com" its:translate="no"/>
    <abstract><!-- can be changed via merge in the assembly -->
      <para>
       The topic describes how to 
      </para>
    </abstract>
  </info>
  <para>
        While general supportability is important, situations can occur where
        loading an unsupported module is required. For example, for testing or
        debugging purposes, or if your hardware vendor provides a hotfix.
      </para>
      <itemizedlist mark="bullet" spacing="normal">
        <listitem>
          <para>
            To override the default, copy
            <filename>/lib/modprobe.d/10-unsupported-modules.conf</filename> to
            <filename>/etc/modprobe.d/10-unsupported-modules.conf</filename>
            and change the value of the variable
            <varname>allow_unsupported_modules</varname> from
            <literal>0</literal> to <literal>1</literal>. Do not edit
            <filename>/lib/modprobe.d/10-unsupported-modules.conf</filename>
            directly; any changes will be overwritten whenever the
            <package>suse-module-tools</package> package is updated.
          </para>
          <para>
            If an unsupported module is needed in the initrd, do not forget to
            run <command>transactional-update initrd</command> to update the
            initrd.
          </para>
          <para>
            If you only want to try loading a module once, you can use the
            <option>--allow-unsupported-modules</option> option with
            <command>modprobe</command>. For more information, see the comments
            in <filename>/lib/modprobe.d/10-unsupported-modules.conf</filename>
            and the <command>modprobe</command> help.
          </para>
        </listitem>
        <listitem>
          <para>
            To enforce the loading of unsupported modules during boot and
            afterward, use the kernel command-line option
            <option>oem-modules</option>. While installing and initializing the
            <systemitem class="resource">suse-module-tools</systemitem>
            package, the kernel flag <literal>TAINT_NO_SUPPORT</literal>
            (<filename>/proc/sys/kernel/tainted</filename>) will be evaluated.
            If the kernel is already tainted,
            <literal>allow_unsupported_modules</literal> will be enabled. This
            will prevent unsupported modules from failing in the system being
            installed. If no unsupported modules are present during
            installation and the other special kernel command-line option
            (<option>oem-modules=1</option>) is not used, the default is still
            to disallow unsupported modules.
          </para>
        </listitem>
      </itemizedlist>
      <para>
        Remember that loading and running unsupported modules will make the
        kernel and the whole system unsupported by &suse;.
      </para>
</topic>
