<?xml version="1.0" encoding="UTF-8"?>
<!-- This file originates from the project https://github.com/openSUSE/doc-kit -->
<!-- This file can be edited downstream. -->
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<!-- refers to legacy doc: <add github link to legacy doc piece, if applicable> -->
<!-- point back to this document with a similar comment added to your legacy doc piece -->
<!-- refer to README.md for file and id naming conventions -->
<!-- metadata is dealt with on the assembly level -->
<topic xml:id="logging-filtering-logs"
 role="task" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>Filtering journal logs</title><!-- can be changed via merge
in the assembly -->
    <!-- add author's e-mail -->
    <meta name="maintainer" content="jsindelarova@suse.com" its:translate="no"/>
    <abstract><!-- can be changed via merge in the assembly -->
      <para>
         When <command>journalctl</command> is called without options, the command outputs the full
         content of the journal, the oldest entries listed first. The output can be
         filtered by specific options or journal fields. 
        </para>
    </abstract>
  </info>
  
   <section xml:id="logging-filtering-logs-intervals">
    <title>Filtering based on time interval</title>
    <para>
     You can filter the output of <command>journalctl</command> by specifying
     the starting and/or ending date. The date specification should be of the
     format "2014-06-30 9:17:16". If the time part is omitted, midnight is
     assumed. If seconds are omitted, ":00" is assumed. If the date part is
     omitted, the current day is assumed. Instead of numeric expression, you can
     specify the keywords "yesterday", "today", or "tomorrow". They refer to
     midnight of the day before the current day, of the current day, or of the
     day after the current day. If you specify "now", it refers to the current
     time. You can also specify relative times prefixed with
     <literal>-</literal> or <literal>+</literal>, referring to times before or
     after the current time.
    </para>
    <para>
     Show only new messages since now, and update the output continuously:
    </para>
 <screen>&prompt.sudo;journalctl --since "now" -f</screen>
    <para>
     Show all messages since last midnight till 3:20am:
    </para>
 <screen>&prompt.sudo;journalctl --since "today" --until "3:20"</screen>
  </section>

  <section xml:id="sec-journalctl-filter-boot">
    <title>Filtering based on a boot number</title>
    <para>
     <command>journalctl</command> can filter messages based on a specific
     system boot. To list all available boots, run
    </para>
 <screen>&prompt.sudo;journalctl --list-boots
 -1 097ed2cd99124a2391d2cffab1b566f0 Mon 2014-05-26 08:36:56 EDT—Fri 2014-05-30 05:33:44 EDT
  0 156019a44a774a0bb0148a92df4af81b Fri 2014-05-30 05:34:09 EDT—Fri 2014-05-30 06:15:01 EDT</screen>
    <para>
     The first column lists the boot offset: <literal>0</literal> for the
     current boot, <literal>-1</literal> for the previous one,
     <literal>-2</literal> for the one prior to that, etc. The second column
     contains the boot ID followed by the limiting time stamps of the specific
     boot.
    </para>
    <para>
     Show all messages from the current boot:
    </para>
 <screen>&prompt.sudo;journalctl -b</screen>
    <para>
     If you need to see journal messages from the previous boot, add an offset
     parameter. The following example outputs the previous boot messages:
    </para>
 <screen>&prompt.sudo;journalctl -b -1</screen>
    <para>
     Another way is to list boot messages based on the boot ID. For this
     purpose, use the _BOOT_ID field:
    </para>
 <screen>&prompt.sudo;journalctl _BOOT_ID=156019a44a774a0bb0148a92df4af81b</screen>
  </section>
  <section xml:id="sec-journalctl-filter-fields">
    <title>Filtering based on fields</title>
    <para>
     You can filter the output of the journal by specific fields. The syntax of
     a field to be matched is <literal>FIELD_NAME=MATCHED_VALUE</literal>, such
     as <literal>_SYSTEMD_UNIT=httpd.service</literal>. You can specify multiple
     matches in a single query to filter the output messages even more. See
     <command>man 7 systemd.journal-fields</command> for a list of default
     fields.
    </para>
    <para>
     Show messages produced by a specific process ID:
    </para>
 <screen>&prompt.sudo;journalctl _PID=1039</screen>
    <para>
     Show messages belonging to a specific user ID:
    </para>
 <screen># journalctl _UID=1000</screen>
    <para>
     Show messages from the kernel ring buffer (the same as
     <command>dmesg</command> produces):
    </para>
 <screen>&prompt.sudo;journalctl _TRANSPORT=kernel</screen>
    <para>
     Show messages from the service's standard or error output:
    </para>
 <screen>&prompt.sudo;journalctl _TRANSPORT=stdout</screen>
    <para>
     Show messages produced by a specified service only:
    </para>
 <screen>&prompt.sudo;journalctl _SYSTEMD_UNIT=avahi-daemon.service</screen>
    <para>
     If two different fields are specified, only entries that match both
     expressions at the same time are shown:
    </para>
 <screen>&prompt.sudo;journalctl _SYSTEMD_UNIT=avahi-daemon.service _PID=1488</screen>
    <para>
     If two matches refer to the same field, all entries matching either
     expression are shown:
    </para>
 <screen>&prompt.sudo;journalctl _SYSTEMD_UNIT=avahi-daemon.service _SYSTEMD_UNIT=dbus.service</screen>
    <para>
     You can use the '+' separator to combine two expressions in a logical 'OR'.
     The following example shows all messages from the Avahi service process
     with the process ID 1480 together with all messages from the D-Bus service:
    </para>
 <screen>&prompt.sudo;journalctl _SYSTEMD_UNIT=avahi-daemon.service _PID=1480 + _SYSTEMD_UNIT=dbus.service</screen>
  </section>
</topic>
