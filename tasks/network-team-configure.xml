<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<!-- refers to legacy doc: https://github.com/SUSE/doc-sle/blob/main/xml/net_teaming.xml -->

<topic xml:id="network-team-configure"
 role="task" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>Configuring network teaming</title>
    <meta name="maintainer" content="tahlia.richardson@suse.com" its:translate="no"/>
    <abstract>
      <para>
        Network teaming combines two or more network cards into a single teaming device to increase
        bandwidth or provide redundancy. The behavior of the teaming device is configured using
        <emphasis>teaming modes</emphasis>.
      </para>
    </abstract>
  </info>
  <section xml:id="network-team-requirements">
    <title>Requirements</title>
    <itemizedlist>
      <listitem>
        <para>
          Network connection
        </para>
      </listitem>
      <listitem>
        <para>
          Existing network cards to include in the teaming device
        </para>
      </listitem>
      <listitem>
        <para>
          Basic understanding of networking and IP addresses
        </para>
      </listitem>
    </itemizedlist>
    <note>
      <title>No teaming in &yast;</title>
      <para>
        Currently, &yast; cannot create a teaming device. You must configure network teaming manually.
      </para>
    </note>
  </section>
  <section xml:id="network-team-modes">
    <title>Teaming modes</title>
    <para>
      The following teaming modes are available:
    </para>
    <variablelist>
      <varlistentry>
        <term><guimenu>broadcast</guimenu></term>
        <listitem>
          <para>
            All traffic is broadcast on all interfaces. Requires support from the switch.
            Provides fault tolerance.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><guimenu>roundrobin</guimenu></term>
        <listitem>
          <para>
            Packets are transmitted in round-robin fashion from the first to the last available
            interface. Provides fault tolerance and load balancing.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><guimenu>activebackup</guimenu></term>
        <listitem>
          <para>
            Only one network interface is active. If it fails, a different interface becomes active.
            Provides fault tolerance.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><guimenu>loadbalance</guimenu></term>
        <listitem>
          <para>
            The team device transmits packets via all its ports, performing load balancing
            (passive or active) with a use of hash functions. For passive load balancing, only
            the BPF hash function is used. For active load balancing, the runner finds the best
            balance by moving hashes between available ports. Provides fault tolerance and
            load balancing.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term><guimenu>lacp</guimenu></term>
        <listitem>
          <para>
            Aggregates interfaces into groups that share the same speed and duplex settings.
            Requires ethtool support in the interface drivers, and a switch that supports and is
            configured for IEEE 802.3ad Dynamic link aggregation. Provides fault tolerance and
            load balancing.
          </para>
        </listitem>
      </varlistentry>
    </variablelist>
  </section>
  <section xml:id="network-team-configure-with-ifcfg">
    <title>Configuring network teaming with <literal>ifcfg</literal></title>
    <procedure>
      <step>
        <para>
        Install the package <package>libteam-tools</package>:
        </para>
    <screen>&prompt.sudo;<command>zypper install libteam-tools</command></screen>
      </step>
      <step>
        <para>
          Create a configuration file under <filename>/etc/sysconfig/network/</filename>.
          Usually this name is <filename>ifcfg-team0</filename>. If you need more than one
          network teaming device, give them ascending numbers. For more information, see
          <command>man ifcfg</command>, <command>man ifcfg-team</command>, and
          <filename>/etc/sysconfig/network/ifcfg.template</filename>.
        </para>
<screen>STARTMODE=<replaceable>MODE</replaceable> <co xml:id="co-team-startmode"/>
BOOTPROTO=<replaceable>IP_ASSIGNMENT</replaceable> <co xml:id="co-team-boot-and-ip"/>

TEAM_RUNNER="<replaceable>TEAMING_MODE</replaceable>" <co xml:id="co-team-loadbalance"/>

TEAM_PORT_DEVICE_0="<replaceable>FIRST_DEVICE_NAME</replaceable>" <co xml:id="co-team-dev"/>
TEAM_PORT_DEVICE_1="<replaceable>SECOND_DEVICE_NAME</replaceable>" <xref linkend="co-team-dev"/>

TEAM_LW_NAME="<replaceable>LINK_WATCHER</replaceable>" <co xml:id="co-team-name"/></screen>
        <calloutlist>
          <callout arearefs="co-team-startmode">
            <para>
              Defines how the teaming device starts. Use <literal>auto</literal> to start the
              interface automatically on every reboot, or use <literal>manual</literal> to prevent
              the interface from starting automatically.
            </para>
          </callout>
          <callout arearefs="co-team-boot-and-ip">
            <para>
              Defines how IP addresses are assigned to the teaming device. Use <literal>static</literal>
              to manually assign static IP addresses with the variables <varname>IPADDRESS</varname>
              (for IPv4) and <varname>IPADDR6</varname> (for IPv6). Use <literal>dhcp</literal> to
              automatically assign dynamic IP addresses.
            </para>
          </callout>
          <callout arearefs="co-team-loadbalance">
            <para>
              Defines the teaming mode for this interface. Some teaming modes require additional
              variables. See <command>man ifcfg-team</command> for more information about
              mode-specific variables.
            </para>
          </callout>
          <callout arearefs="co-team-dev">
            <para>
              Specifies one or more network cards to include in the teaming device.
            </para>
          </callout>
          <callout arearefs="co-team-name">
            <para>
              Defines a link watcher to monitor the state of subordinate devices.
            </para>
            <para>
              The default option <literal>ethtool</literal> only checks if the device is up and
              accessible. This option is fast, but does not check if the device can actually send
              or receive packets.
            </para>
            <para>
              If you need higher confidence in the connection, use the <literal>arp_ping</literal>
              option. This sends pings to a host specified by the variable
              <varname>TEAM_LW_ARP_PING_TARGET_HOST</varname>. The teaming device is only
              considered to be up if replies are received.
            </para>
            <para>
              See <command>man ifcfg-team</command> for more information about watcher-specific
              variables.
            </para>
          </callout>
        </calloutlist>

        <example xml:id="ex-team-lb">
          <title>Configuration for load balancing</title>
<screen>STARTMODE=auto
BOOTPROTO=static
IPADDRESS="&subnetI;.1/24"
IPADDR6="fd00:deca:fbad:50::1/64"

TEAM_RUNNER="loadbalance"
TEAM_LB_TX_HASH="ipv4,ipv6,eth,vlan"
TEAM_LB_TX_BALANCER_NAME="basic"
TEAM_LB_TX_BALANCER_INTERVAL="100"

TEAM_PORT_DEVICE_0="eth0"
TEAM_PORT_DEVICE_1="eth1"

TEAM_LW_NAME="ethtool"
TEAM_LW_ETHTOOL_DELAY_UP="10"
TEAM_LW_ETHTOOL_DELAY_DOWN="10"</screen>
        </example>

        <example xml:id="ex-team-failover">
          <title>Configuration for failover (<literal>active-backup</literal>)</title>
<screen>STARTMODE=auto
BOOTPROTO=static
IPADDR="&subnetI;.2/24"
IPADDR6="fd00:deca:fbad:50::2/64"

TEAM_RUNNER=activebackup

TEAM_PORT_DEVICE_0="eth0"
TEAM_PORT_DEVICE_1="eth1"

TEAM_LW_NAME=ethtool
TEAM_LW_ETHTOOL_DELAY_UP="10"
TEAM_LW_ETHTOOL_DELAY_DOWN="10"</screen>
        </example>
      </step>
      <step>
        <para>
          Remove the <filename>ifcfg</filename> files of the network cards that you included in the
          teaming device. Wicked will re-create the configuration files with the necessary
          parameters for teaming.
        </para>
        <tip role="compact">
          <para>
            Back up the configuration files before removing them.
          </para>
        </tip>
      </step>
      <step>
        <para>
          Check if everything is included in Wicked's configuration file:
        </para>
        <screen>&prompt.sudo;<command>wicked show-config</command></screen>
      </step>
      <step>
        <para>
          Start the teaming device. This example uses the device name
          <systemitem class="service">team0</systemitem>:
        </para>
        <screen>&prompt.sudo;<command>wicked ifup all team0</command></screen>
        <para>
          If you need additional debug information, use the option <option>--debug all</option>
          after the <command>all</command> subcommand.
        </para>
        <important role="compact">
          <para>
            Do <emphasis>not</emphasis> use <command>systemctl</command> to start or stop the
            teaming device. Always use the <command>wicked</command> command.
          </para>
        </important>
      </step>
      <step>
        <para>
          Check the status of the teaming device:
        </para>
        <itemizedlist>
          <listitem>
            <para>
              Get the state of the teamd instance from Wicked:
            </para>
            <screen>&prompt.sudo;<command>wicked ifstatus --verbose team0</command></screen>
          </listitem>
          <listitem>
            <para>
              Get the state of the entire instance:
            </para>
            <screen>&prompt.sudo;<command>teamdctl team0 state</command></screen>
          </listitem>
          <listitem>
            <para>
              Get the systemd state of the teamd instance:
            </para>
            <screen>&prompt.sudo;<command>systemctl status teamd@team0</command></screen>
          </listitem>
        </itemizedlist>
        <para>
          Each command shows a slightly different view depending on your needs.
        </para>
      </step>
    </procedure>
    <para>
      If you make changes to the <filename>ifcfg-team0</filename> file after starting the device,
      reload its configuration with the command <command>wicked ifreload team0</command>.
    </para>
  </section>
  <!--section xml:id="task-example-summary">
    <title>Summary</title>
    <para>
      A paragraph of text, summing up the result of the task.
    </para>
  </section-->
  <!--section xml:id="task-example-troubleshooting">
    <title>Troubleshooting</title>
    <para>
      Add some troubleshooting information, if applicable.
    </para>
  </section-->
</topic>
