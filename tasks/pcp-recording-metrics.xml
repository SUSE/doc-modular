<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<!-- refers to legacy doc: <add github link to legacy doc piece, if applicable> -->
<!-- point back to this document with a similar comment added to your legacy doc piece -->
<!-- refer to README.md for file and id naming conventions -->
<!-- metadata is dealt with on the assembly level -->
<topic xml:id="pcp-recording-metrics"
 role="task" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>Recording metrics from remote systems</title><!-- can be changed via merge
in the assembly -->
    <!-- add author's e-mail -->
    <meta name="maintainer" content="jsindelarova@suse.com" its:translate="no"/>
    <abstract><!-- can be changed via merge in the assembly -->
      <para>
       The topic covers collecting of the PCP metrics.
      </para>
    </abstract>
  </info>
  <para>
    You can deploy collector containers that collect metrics from different
    remote systems than the ones where the <command>pmlogger</command>
    containers are running. Each remote collector system needs the
    <command>pmcd</command> daemon and a set of <emphasis>pmda</emphasis>. To
    deploy several collectors with a centralized monitoring system, proceed as
    follows.
   </para>
   <procedure>
    <step>
     <para>
      On each system you want to collect metrics from (clients), run a
      container with the <command>pmcd</command> daemon:
     </para>
<screen>&prompt.root;podman run -d \
    --name pcp-pmcd \
    --privileged \
    --net host \
    --systemd always \
    -e PCP_SERVICES=pmcd \
    -e HOST_MOUNT=/host \
    -v /:/host:ro,rslave \
    registry.suse.com/suse/pcp:latest</screen>
    </step>
    <step xml:id="pmlogger-config">
     <para>
      On the monitoring system, create a <command>pmlogger</command>
      configuration file for each client
      <filename>control.<replaceable>CLIENT</replaceable></filename> with the
      following content:
     </para>
<screen>
$version=1.1

<replaceable>CLIENT_HOSTNAME</replaceable> n n PCP_ARCHIVE_DIR/<replaceable>CLIENT</replaceable> -N -r -T24h10m -c config.default -v 100Mb
          </screen>
     <para>
      Keep in mind that the <replaceable>CLIENT_HOSTNAME</replaceable> must be
      resolvable in DNS. You can use IP addresses or fully qualified domain
      names (FQDN) instead.
     </para>
    </step>
    <step>
     <para>
      On the monitoring system, create a directory for each client to store the
      recorded logs:
     </para>
<screen>&prompt.root;mkdir /root/pcp-archives/<replaceable>CLIENT</replaceable></screen>
     <para>
      For example, for <literal>slemicro_1</literal>:
     </para>
<screen>&prompt.root;mkdir /root/pcp-archives/slemicro_1</screen>
    </step>
    <step>
     <para>
      On the monitoring system, run a container with
      <command>pmlogger</command> for each client:
     </para>
<screen>&prompt.root;podman run -d \
    --name pcp-pmlogger-<replaceable>CLIENT</replaceable> \
    --systemd always \
    -e PCP_SERVICES=pmlogger \
    -v /root/pcp-archives/<replaceable>CLIENT</replaceable>:/var/log/pcp/pmlogger:z \
    -v $(pwd)/control.<replaceable>CLIENT</replaceable>:/etc/pcp/pmlogger/control.d/local:z \
    registry.suse.com/suse/pcp:latest
          </screen>
     <para>
      For example, for a client called <literal>slemicro_1</literal>:
     </para>
<screen>&prompt.root;podman run -d \
    --name pcp-pmlogger-slemicro_1 \
    --systemd always \
    -e PCP_SERVICES=pmlogger \
    -v /root/pcp-archives:/var/log/pcp/pmlogger:z \
    -v $(pwd)/control.slemicro_1:/etc/pcp/pmlogger/control.d/local:z \
    registry.suse.com/suse/pcp:latest
          </screen>
     <note>
      <para>
       The second bind mount points to the configuration file created in
       <xref linkend="pmlogger-config"/> and replaces the default
       <command>pmlogger</command> configuration. If you do not create this
       bind mount, <command>pmlogger</command> uses the default
       <filename>/etc/pcp/pmlogger/control.d/local</filename> file and logging
       from clients fails as the default configuration points to a local host.
       For details about the configuration file, refer to
       <xref linkend="sec-control-local"/>.
      </para>
     </note>
    </step>
    <step>
     <para>
      To check if the log collection is working properly, run:
     </para>
<screen>&prompt.root;ls -l pcp-archives/<replaceable>CLIENT</replaceable>/<replaceable>CLIENT</replaceable></screen>
     <para>
      For example:
     </para>
<screen>&prompt.root;ls -l pcp-archives/slemicro_1/slemicro_1

total 1076
-rw-r--r--. 1 systemd-network systemd-network 876372 Jun  8 11:24 20220608.10.58.0
-rw-r--r--. 1 systemd-network systemd-network    312 Jun  8 11:22 20220608.10.58.index
-rw-r--r--. 1 systemd-network systemd-network 184486 Jun  8 10:58 20220608.10.58.meta
-rw-r--r--. 1 systemd-network systemd-network    246 Jun  8 10:58 Latest
-rw-r--r--. 1 systemd-network systemd-network  24595 Jun  8 10:58 pmlogger.log
          </screen>
    </step>
   </procedure>
</topic>
