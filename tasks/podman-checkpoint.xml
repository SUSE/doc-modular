<?xml version="1.0" encoding="UTF-8"?>
<!-- This file originates from the project https://github.com/openSUSE/doc-kit -->
<!-- This file can be edited downstream. -->
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<!-- refers to legacy doc: <add github link to legacy doc piece, if applicable> -->
<!-- point back to this document with a similar comment added to your legacy doc piece -->
<!-- refer to README.md for file and id naming conventions -->
<!-- metadata is dealt with on the assembly level -->
<topic xml:id="task-example"
 role="task" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>Checkpointing containers</title><!-- can be changed via merge
in the assembly -->
    <!-- add author's e-mail -->
    <meta name="maintainer" content="jsindelarova@suse.clm" its:translate="no"/>
    <abstract><!-- can be changed via merge in the assembly -->
      <para>
       The topic covers how to save the current state of a container to a disk.
      </para>
    </abstract>
  </info>
  <important>
    <title>Checkpointing containers not available by default</title>
    <para>
In the default &productname; installation, the <command>podman container checkpoint</command> is
not available. You need to install CRIU first to use this function. The &cockpit; web interface
provides this funcionality out of the box.
    </para>
  </important>
  <para>
    To checkpoint a container, proceed as follows:
  </para>
  <procedure>
    <step>
      <para>
        Run the command:        
      </para>
      <screen>&prompt.sudo;<command>podman container checkpoint <replaceable>CONTAINER</replaceable></command></screen>
    </step>
    <step>
      <para>
        The state of these processes, including their memory pages, open file descriptors, CPU
        registers, and other runtime information, is collected from the userspace. This state is
        written to a disk.
      </para>
    </step>
    <step>
      <para>
        If the option <option>--leave-running</option> is not specified, the default behavior is to
        stop the container.</para>
    </step>
    <step>
      <para>
        To restore the container later, run the following command:
      </para>
      <screen>&prompt.sudo;<command>podman container restore
      <replaceable>CONTAINER</replaceable></command></screen>
        
    </step>
  </procedure>
</topic>
