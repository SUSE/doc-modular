<?xml version="1.0" encoding="UTF-8"?>
<!-- This file originates from the project https://github.com/openSUSE/doc-kit -->
<!-- This file can be edited downstream. -->
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<!-- refers to legacy doc: <add github link to legacy doc piece, if applicable> -->
<!-- point back to this document with a similar comment added to your legacy doc piece -->
<!-- refer to README.md for file and id naming conventions -->
<!-- metadata is dealt with on the assembly level -->
<topic xml:id="podman-starting-containers"
 role="task" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>Starting containers</title><!-- can be changed via merge
in the assembly -->
    <!-- add author's e-mail -->
    <meta name="maintainer" content="jsindelarova@suse.com" its:translate="no"/>
    <abstract><!-- can be changed via merge in the assembly -->
      <para>
       Introductory text
      </para>
    </abstract>
  </info>
  <para>
    To start already created but stopped containers, use the
    <command>podman start</command> command. The command syntax is as
    follows:
  </para>
<screen>&prompt.root;podman start <replaceable>[OPTIONS]</replaceable> <replaceable>CONTAINER</replaceable></screen>
  <para>
    <replaceable>CONTAINER</replaceable> can be a container name or a
    container ID.
  </para>
  <para>
    For a complete list of possible options of <command>podman
    start</command>, run the command:
  </para>
<screen>&prompt.root;podman start --help</screen>
</section>
<section xml:id="sec-podman-commit">
  <title>Committing modified containers</title>
  <para>
    You can run a new container with specific attributes that are not part
    of the original image. To save the container with these attributes as a
    new image, you can use the <command>podman commit</command> command:
  </para>
<screen>&prompt.root;podman commit <replaceable>[OPTIONS]</replaceable> <replaceable>CONTAINER</replaceable> <replaceable>IMAGE</replaceable></screen>
  <para>
    <replaceable>CONTAINER</replaceable> is a container name or a container
    ID. <replaceable>IMAGE</replaceable> is the new image name. If the
    image name does not start with a registry name, the value
    <literal>localhost</literal> is used.
  </para>
</topic>
