<?xml version="1.0" encoding="UTF-8"?>
<!-- This file originates from the project https://github.com/openSUSE/doc-kit -->
<!-- This file can be edited downstream. -->
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook51-profile.xsl"
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE article
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<topic xml:id="task-run-kvm-with-podman" xml:lang="en"
 role="task"
 xmlns="http://docbook.org/ns/docbook" version="5.1"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink">
  <info>
    <meta name="maintainer" content="caleb.crane@suse.com" its:translate="no"/>
    <title>Running the &kvm; virtualization workload using &podman;</title>
    <abstract>
      <para>
        This article describes how to run a &kvm; &vmhost; on &productname;
        (&productnameshort;). This workload adds virtualization capability to
        &productnameshort; so that you can use it as a &vmhost;. It uses the
        &kvm; hypervisor supported by the &libvirt; toolkit.
      </para>
      <important>
        <para>
          When running &productnameshort; in a virtualized environment, you
          need to enable the nested &kvm; virtualization on the bare-metal host
          operating system and use <literal>kernel-default</literal> kernel
          instead of the default <literal>kernel-default-base</literal> in
          &productnameshort;.
        </para>
      </important>
    </abstract>
  </info>
  <section xml:id="alp-starting-kvm">
    <title>Deploying the &kvmserver; workload</title>
    <para>
      &productnameshort; can serve as a virtualization host for running virtual machines. The
      following procedure describes steps to prepare the &productnameshort;
      host to run the containerized &kvmserver; workload.
    </para>
    <procedure>
      <step>
        <para>
          Identify the &kvmserver; container image:
        </para>
<screen>
&prompt.root;podman search kvm-server
[...]
registry.opensuse.org/suse/alp/workloads/tumbleweed_containerfiles/suse/alp/workloads/kvm-server
</screen>
      </step>
      <step>
        <para>
         Install the &kvmserver; workload. This will pull the container image from the
         registry and install all systemd services, helper scripts, and
         configuration files on the host:
        </para>
<screen>&prompt.root;podman container runlabel install registry.opensuse.org/suse/alp/workloads/tumbleweed_containerfiles/suse/alp/workloads/kvm-server:latest</screen>
      </step>
      <step>
        <para>
          Deploy the &kvmserver; workload:
        </para>
<screen>&prompt.root;kvm-server-manage enable</screen>
        <para>
         Refer to <xref linkend="reference-kvm-server-manage"/> for more info
         on managing the deployment of the &kvmserver; workload
        </para>
      </step>
      <step>
        <para>
          Verify successful deployment of the &kvmserver; workload:
        </para>
<screen>&prompt.root;kvm-server-manage verify
&checkmark; All required services are currently active
</screen>
        <important>
          <para>
            The &kvmserver; container does not include client tooling by default.
            Refer to <xref linkend="task-run-kvm-client-with-podman"/> for instructions
            on containerized client tooling.
          </para>
          <para>
            Alternatively, client tooling can be installed on a separate host for remote VM management
          </para>
        </important>
      </step>
    </procedure>
  </section>
</topic>
