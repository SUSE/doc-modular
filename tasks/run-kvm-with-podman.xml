<?xml version="1.0" encoding="UTF-8"?>
<!-- This file originates from the project https://github.com/openSUSE/doc-kit -->
<!-- This file can be edited downstream. -->
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook51-profile.xsl"
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE article
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<topic xml:id="task-run-kvm-with-podman" xml:lang="en"
 role="task"
 xmlns="http://docbook.org/ns/docbook" version="5.1"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink">
  <info>
    <meta name="maintainer" content="tbazant@suse.com" its:translate="no"/>
    <title>Running the &kvm; virtualization workload using &podman;</title>
    <abstract>
      <para>
        This article describes how to run &kvm; &vmhost; on &productname;
        (&productnameshort;). This workload adds virtualization capability to
        &productnameshort; so that you can use it as a &vmhost;. It uses the
        &kvm; hypervisor supported by the &libvirt; toolkit.
      </para>
      <important>
        <para>
          When running &productnameshort; in a virtualized environment, you
          need to enable the nested &kvm; virtualization on the bare-metal host
          operating system and use <literal>kernel-default</literal> kernel
          instead of the default <literal>kernel-default-base</literal> in
          &productnameshort;.
        </para>
      </important>
    </abstract>
  </info>
  <section xml:id="alp-starting-kvm">
    <title>Starting the &kvm; workload</title>
    <para>
      &productnameshort; can serve as a host running virtual machines. The
      following procedure describes steps to prepare the &productnameshort;
      host to run containerized &kvm; &vmhost; and run an example &vmguest; on
      top of it.
    </para>
    <procedure>
      <step>
        <para>
          Identify the &kvm; workload image:
        </para>
<screen>
&prompt.root;podman search kvm
[...]
registry.opensuse.org/suse/alp/workloads/tumbleweed_containerfiles/suse/alp/workloads/kvm
</screen>
      </step>
      <step>
        <para>
          Pull the image from the registry and install all the wrapper scripts:
        </para>
<screen>&prompt.root;podman container runlabel install registry.opensuse.org/suse/alp/workloads/tumbleweed_containerfiles/suse/alp/workloads/kvm:latest</screen>
      </step>
      <step>
        <para>
          Create the <literal>libvirtd</literal> container from the downloaded
          image:
        </para>
<screen>&prompt.root;kvm-container-manage.sh create</screen>
      </step>
      <step>
        <para>
          Start the container:
        </para>
<screen>&prompt.root;kvm-container-manage.sh start</screen>
      </step>
      <step>
        <para>
          Optionally, run a &vmguest; on top of the started &kvm; &vmguest;
          using the <command>virt-install-demo.sh</command> script.
        </para>
        <tip>
          <para>
            <command>virt-install-demo.sh</command> uses the
            <filename>openSUSE-Tumbleweed-JeOS.x86_64-OpenStack-Cloud.qcow2</filename>
            image by default. To specify another VM image, modify the
            <option>APPLIANCE_MIRROR</option> and <option>APPLIANCE</option>
            options in the <filename>/etc/kvm-container.conf</filename> file.
          </para>
        </tip>
        <tip>
          <para>
            <command>virsh</command> is a wrapper script to launch the
            <command>virsh</command> command inside the container. The default
            container name is <systemitem class="daemon">libvirtd</systemitem>.
          </para>
        </tip>
        <tip>
          <para>
            <command>virt-manager</command> is a wrapper script to launch the
            <command>virt-manager</command> graphic interface to manage virtual
            machines. The <package>xauth</package> package must be installed on
            the host server for the <command>virt-manager</command> to run.
          </para>
        </tip>
<screen>&prompt.user;<command>virt-install-demo.sh</command>
[...]
Starting install...
Password for first root login is: OPjQok1nlfKp5DRZ
Allocating 'Tumbleweed-JeOS_5221fd7860.qcow2'            |    0 B  00:00:00 ...
Creating domain...                                       |    0 B  00:00:00
Running text console command: virsh --connect qemu:///system console Tumbleweed-JeOS_5221fd7860
Connected to domain 'Tumbleweed-JeOS_5221fd7860'
Escape character is ^] (Ctrl + ])

Welcome to openSUSE Tumbleweed 20220919 - Kernel 5.19.8-1-default (hvc0).

eth0: 192.168.10.67 fe80::5054:ff:fe5a:c416

localhost login:
</screen>
      </step>
    </procedure>
  </section>
</topic>
