<?xml version="1.0" encoding="UTF-8"?>
<!-- This file originates from the project https://github.com/openSUSE/doc-kit -->
<!-- This file can be edited downstream. -->
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<topic xml:id="task-saptune-staging"
 role="task" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>&saptune; staging</title>
    <!-- can be changed via merge
      in the assembly -->
    <!-- add author's e-mail -->
    <meta name="maintainer" content="" its:translate="no"/>
    <abstract>
      <!-- can be changed via merge in the assembly -->
      <para>
        Learn how to use staging with &saptune;
      </para>
    </abstract>
  </info>
  <section xml:id="task-saptune-staging-requirements">
    <title>Requirements</title>
    <itemizedlist>
      <listitem>
        <para>
          A system with &saptune; installed, configured, and enabled.
        </para>
      </listitem>
    </itemizedlist>
  </section>

  <section xml:id="task-saptune-staging-perform">
    <title>Staging</title>
    <para>
    It is possible that a new &saptune; package can contain both binary changes
    (for example, bug fixes) and new or altered &sapnote;s and &sapsol;s. In certain situations, it is preferable to deploy bug fixes and new features while leaving modifications to the system configuration out.
   </para>
   <para>
    With staging enabled, &sapnote; and &sapsol; changes in a package update are
    <emphasis>not</emphasis> activated immediately. They are placed in a staging
    area, which can be reviewed and released later.
   </para>
   <important>
    <para>With the current implementation, a package update overwrites the
    staging if staging is enabled.</para>
    <remark>toms 2021-10-14: What to do to avoid this?</remark>
   </important>
   <para>Staging is disabled by default, and it can be enabled with the following command:</para>
   <screen>&prompt.root;<command>saptune staging enable</command></screen>
   <para>From that point, &sapnote; and &sapsol; changes shipped by a &saptune;
   package are put in the staging area. To view the staging area, run:</para>
   <screen>&prompt.root;<command>saptune staging list</command></screen>
   <para>You can print a tabular overview of the differences between the &sapnote;
   and &sapsol; in the staging and working area with the following command:</para>
   <screen>&prompt.root;<command>saptune staging diff [NOTE...|SOLUTION...|all]</command></screen>
   <para>
    After reviewing the differences, you can perform an analysis to see if a
    release has potential issues or requires additional steps. To do
    this, run the following command:
   </para>
   <screen>&prompt.root;<command>saptune staging analysis [NOTE...|SOLUTION...|all]</command></screen>
   <para>
    To release an &sapnote; or an &sapsol; from the staging area, use the command as follows:
   </para>
   <screen>&prompt.root;<command>saptune staging [--force|--dry-run] [NOTE..|SOLUTION...|all]</command></screen>
   <para>
    The command presents an analysis (see <command>saptune staging
    analysis</command>) and carries out the release after asking for
    confirmation.
   </para>
  </section>
</topic>
