<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<!-- refers to legacy doc: https://github.com/SUSE/doc-sle/blob/main/xml/slemicro_security_selinux.xml -->
<!-- point back to this document with a similar comment added to your legacy doc piece -->
<!-- refer to README.md for file and id naming conventions -->
<!-- metadata is dealt with on the assembly level -->
<topic xml:id="selinux-packages"
 role="task" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>&selnx; packages</title>
    <!-- can be changed via merge
      in the assembly -->
    <!-- add author's e-mail -->
    <meta name="maintainer" content="jsindelarova@suse.com" its:translate="no"/>
    <abstract>
      <!-- can be changed via merge in the assembly -->
      <para>
        The topic covers &selnx; development and administration packages.
      </para>
    </abstract>
  </info>
  <para>
    &productnameshort; &productnumber; provides you with tools to manage &selnx; on your
    system.
  </para>
  <para>
    The <literal>policycoreutils</literal> package contains the basic tools needed
    for &selnx; administration and is installed by default.
    It contains <command>sestatus</command>, <command>restorecon</command>,
    <command>semodule</command>, <command>setsebool</command> and many other
    tools.
  </para>
  <para>
    Additionally, the <literal>policycoreutils-python-utils</literal> package provides helper tools that make &selnx; administration
    easier. This includes tools such as <command>audit2allow</command> and
    <command>semanage</command>. If the package is missing, run the following command to install it:
  </para>
<screen os="sles;sles4sap">
&prompt.sudo;<command>zypper install policycoreutils-python-utils</command>
</screen>
<screen os="slmicro">&prompt.sudo;<command>transactional-update pkg install policycoreutils-python-utils</command></screen>
  <para os="sles;sles4sap">
    The &selnx; man pages contain comprehensive documentation on the options
    that administrators can customize for every confined service.
    These can be found in <literal>selinux-policy-doc</literal>.
    You can install:
  </para>
<screen os="sles;sles4sap">
&prompt.sudo;<command>zypper install man selinux-policy-doc</command>
</screen>
  <para os="sles;sles4sap">
    For advanced policy analysis, the <literal>setools-console</literal> package
    provides the appropriate tooling and can be installed with:
  </para>
<screen os="sles;sles4sap">
&prompt.sudo;<command>zypper install setools-console</command>
</screen>
  <para>
    Advanced policy development requires additional <literal>-devel</literal>
    packages, which can be installed by:
  </para>


  <para><phrase os="sles4sap"><emphasis role="bold">About &selnx; for &productname; &productnumber;</emphasis></phrase></para>

 <para><phrase os="sles4sap"> The default in &productname; &productnumber; is enabled in <literal>permissive</literal> mode, if &sap; patterns are installed.
  The<literal>selinux-policy-sapenablement</literal> package is for &selnx; policy changes for running &sap;.
  Currently it sets the settings that are needed, but still sets &selnx; to <literal>permissive</literal> mode.
  This package is installed by default. </phrase></para>

<screen os="sles;sles4sap">
&prompt.sudo;<command>zypper install selinux-policy-devel policycoreutils-devel</command>
</screen>
<screen os="slmicro">&prompt.sudo;<command>transactional-update pkg install selinux-policy-devel policycoreutils-devel</command></screen>
</topic>
