<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<!-- refers to legacy doc: <add github link to legacy doc piece, if applicable> -->
<!-- point back to this document with a similar comment added to your legacy doc piece -->
<!-- refer to README.md for file and id naming conventions -->
<!-- metadata is dealt with on the assembly level -->
<topic xml:id="selinux-working-with-booleans"
 role="task" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>Working with booleans</title><!-- can be changed via merge
in the assembly -->
    <!-- add author's e-mail -->
    <meta name="maintainer" content="jsindelarova@suse.com" its:translate="no"/>
    <abstract><!-- can be changed via merge in the assembly -->
      <para>
      &selnx; offers tools that enable you to list, view details or change the
      state of booleans.
    </para>
    </abstract>
  </info>
  
  <section xml:id="listing-booleans">
      <title>Listing booleans</title>
      <para>
        You can use the <command>getsebool</command> or
        <command>semanage</command> command to list currently defined booleans.
        To list all currently defined booleans with their state, run the
        following command:
      </para>
<screen>&prompt.root;getsebool -a

abrt_anon_write --> off
abrt_handle_event --> off
abrt_upload_watch_anon_write --> on
...
  </screen>
      <para>
        To get more details about particular booleans, you can use the
        <command>semanage</command> command as follows:
      </para>
<screen>&prompt.root;semanage boolean -l

SELinux boolean               State   Default     Description

abrt_anon_write               (off  ,  off)       Allow abrt to anon write
abrt_handle_event             (off  ,  off)       Allow abrt to handle event
abrt_upload_watch_anon_write  (on   ,   on)       Allow abrt to upload watch anon write
  </screen>
      <para>
        To get the status of an individual boolean, you can use the following
        command:
      </para>
<screen>&prompt.root;getsebool <replaceable>BOOLEAN_NAME</replaceable></screen>
      <para>
        Alternatively, you can just use the <command>grep</command> command on
        the <command>semanage boolean</command> output:
      </para>
<screen>&prompt.root;semanage boolean -l | grep <replaceable>BOOLEAN_NAME</replaceable></screen>
    </section>
    <section xml:id="switching-booleans">
      <title>Toggling booleans</title>
      <para>
        The commands <command>setsebool</command> and
        <command>semanage</command> can be used to toggle booleans value. You
        can change the boolean status persistently or just temporarily untill
        the session is ended. To change a boolean value temporarily, run the
        following command:
      </para>
<screen>&prompt.root;setsebool <replaceable>BOOLEAN_NAME</replaceable> <replaceable>BOOLEAN_VALUE</replaceable></screen>
      <para>
        where <replaceable>BOOLEAN_VALUE</replaceable> is either
        <literal>on</literal> or <literal>off</literal>.
      </para>
      <para>
        To change a boolean value that persists, run one of the following two
        commands:
      </para>
<screen>&prompt.root;setsebool -P <replaceable>BOOLEAN_NAME</replaceable> <replaceable>BOOLEAN_VALUE</replaceable></screen>
      <para>
        Alternatively, using the <command>semanage</command> command:
      </para>
<screen>&prompt.root;semanage boolean -m --<replaceable>BOOLEAN_VALUE</replaceable>  <replaceable>BOOLEAN_NAME</replaceable></screen>
      <para>
        where <replaceable>BOOLEAN_VALUE</replaceable> is either
        <literal>on</literal> or <literal>off</literal>.
      </para>
      <para>
        A single boolean can enable or disable several policy rules. To view
        which policy rules are enabled or disabled by which booleans, use the
        <command>sedispol</command> tool that can parse the policy file:
      </para>
<screen>&prompt.root;sedispol /etc/selinux/targeted/policy/policy.32</screen>
      <para>
        As the policy rules are usually huge, we recommend setting an output
        file by selecting the <option>f</option> and specifying a file name.
        After specifying the file name, press <option>6</option>, then you can
        inspect the file.
      </para>      
    </section>
</topic>
