<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<!-- refers to legacy doc: <add github link to legacy doc piece, if applicable> -->
<!-- point back to this document with a similar comment added to your legacy doc piece -->
<!-- refer to README.md for file and id naming conventions -->
<!-- metadata is dealt with on the assembly level -->
<topic xml:id="selinux-switching-modules"
 role="task" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>Working with &selnx; modules</title>
    <!-- can be changed via merge
      in the assembly -->
    <!-- add author's e-mail -->
    <meta name="maintainer" content="jsindelarova@suse.com" its:translate="no"/>
    <abstract>
      <!-- can be changed via merge in the assembly -->
      <para>
        The topic covers how to toggle a &selnx; policy module.
      </para>
    </abstract>
  </info>
  <para>
    The <command>semanage module</command> command is used to manage policy modules. Some non-SELinux packages ship their independent policy modules, which enhance
    the rules in main SELinux policy. Those will usually be installed only
    when the application package is installed.
  </para>
  <para>
    Additionally, administrators and developers can enhance the SELinux policy with
    their custom set of rules, by introducing a custom policy module.
  </para>
  <para>
    To view all modules currently installed in the policy, along with their priority and language, use the <option>-l</option> option.
    Modules included in the main policy usually have priority 100, whereas
    a priority of 200 suggests, the module is included in a different package.
    Custom modules added by the user will have the priority of 400 if not
    specified differently:
  </para>
<screen>&prompt.root;<command>semanage module -l</command>

Module Name               Priority  Language

abrt                      100       pp
accountsd                 100       pp
acct                      100       pp
afs                       100       pp
...
</screen>
  <para>
   To disable a module for troubleshooting, use the <option>-d</option> option:
  </para>
<screen>&prompt.root;<command>semanage module -d <replaceable>MODULENAME</replaceable></command></screen>
  <para>
    For example, to disable the <command>container</command> module, run:
  </para>
<screen>&prompt.root;<command>semanage module -d container</command></screen>
  <para>
   To verify that the module has been disabled, check the output of <command>semodule -l</command>.
   It should add a <option>Disabled</option> column:
  </para>
<screen>&prompt.root;<command>semanage module -l | grep container</command>
container                 200       pp    Disabled
</screen>
  <para>
    To re-enable a module, run the command:
  </para>
<screen>&prompt.root;<command>semanage module -e <replaceable>MODULENAME</replaceable></command></screen>
  <para>
   To permanently remove a module and all of its rules from the policy store, use the <option>-r</option> flag.
   This option is usually only needed when working with custom SELinux modules
   created by the user.
   It is not recommended or supported to remove modules that were shipped by the
   operating system.
  </para>
<screen>&prompt.root;<command>semanage module -r my-local-module</command></screen>
</topic>
