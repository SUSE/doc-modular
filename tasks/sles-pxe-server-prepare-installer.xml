<?xml version="1.0" encoding="UTF-8"?>
<!-- This file originates from the project https://github.com/openSUSE/doc-kit -->
<!-- This file can be edited downstream. -->
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<!-- refer to README.md for file and id naming conventions -->
<topic xml:id="sles-pxe-server-prepare-installer"
 role="task" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>Preparing the installer image content</title>
    <meta name="maintainer" content="souvik.sarkar@suse.com" its:translate="no"/>
    <abstract>
      <para>
        This section describes how to extract and organize installer files from &productname;
        &productnumber; installation media for PXE boot environments. It covers both
        <literal>.install.iso</literal> images and RPM packages, with specific instructions for
        different architectures and installation types.
      </para>
    </abstract>
  </info>
  <section xml:id="sles-pxe-server-prepare-installer-intro">
    <title>Introduction</title>
    <para>
      &productname; &productnumber; provides installer files in multiple formats to support
      different PXE boot scenarios. The &agama; installer requires three essential files: the
      kernel image (<filename>linux</filename>), the initial RAM disk
      (<filename>initrd</filename>), and the compressed root file system
      (<filename>squashfs.img</filename>). These files must be extracted from the installation
      media and organized in a directory structure accessible via TFTP and HTTP.
    </para>
    <para>
      This section covers preparation methods for both <literal>.install.iso</literal> images and
      RPM packages, ensuring compatibility with various architectures and installation types
      supported by &productname; &productnumber;.
    </para>
  </section>
  <section xml:id="sles-pxe-server-prepare-installer-reqs">
    <title>Requirements</title>
    <itemizedlist>
      <listitem>
        <para>
          &productname; &productnumber; installation media, as available in &scc;. Choose from:
        </para>
        <itemizedlist>
          <listitem>
            <para>
              Online ISO: Installer-only for network installations
              (<filename>SLES-16.0-Online-<replaceable>ARCH</replaceable>-<replaceable>BUILD</replaceable>.install.iso</filename>)
            </para>
          </listitem>
          <listitem>
            <para>
              Full ISO: Installer with installation repository
              (<filename>SLES-16.0-Full-<replaceable>ARCH</replaceable>-<replaceable>BUILD</replaceable>.install.iso</filename>)
            </para>
          </listitem>
          <listitem>
            <para>
              RPM packages:
              <package>tftpboot-agama-installer-SUSE_SLE_16_PXE-<replaceable>ARCH</replaceable></package>
            </para>
          </listitem>
        </itemizedlist>
      </listitem>
      <listitem>
        <para>
          A temporary mount point, such as <filename>/mnt</filename>.
        </para>
      </listitem>
      <listitem>
        <para>
          Sufficient disk space under <filename>/srv/tftpboot</filename> and
          <filename>/srv/install</filename> for your chosen installation method.
        </para>
      </listitem>
      <listitem>
        <para>
          Administrative privileges to create directories and copy files.
        </para>
      </listitem>
    </itemizedlist>
  </section>
  <section xml:id="sles-pxe-server-prepare-installer-iso">
    <title>Preparing installer files from ISO images</title>
    <para>
      ISO images provide a straightforward method for extracting installer files. The following
      procedures cover both Online and Full ISO types for different architectures.
    </para>
    <section xml:id="sles-pxe-server-prepare-installer-iso-online">
      <title>Using Online ISO images</title>
      <para>
        Online ISO images contain only the installer components, requiring network access
        to installation repositories during system installation. This corresponds with the
        <literal>SLES-16.0 Online Installation</literal> boot menu entry in GRUB.
       </para>
      <procedure xml:id="proc-prepare-online-iso-x86-aarch64">
        <title>Extracting files from Online ISO (x86_64 and aarch64)</title>
        <step>
          <para>
            Create the directory structure for installer files:
          </para>
<screen>&prompt.sudo;<command>mkdir -p /srv/tftpboot/boot/images/SLES-16.0/<replaceable>ARCH</replaceable>/</command></screen>
        </step>
        <step>
          <para>
            Mount the Online ISO image:
          </para>
<screen>&prompt.sudo;<command>mount -oro,loop /srv/install/iso/SLES-16.0-Online-<replaceable>ARCH</replaceable>-<replaceable>BUILD</replaceable>.install.iso /mnt</command></screen>
        </step>
        <step>
          <para>
            Copy the kernel and initrd files:
          </para>
<screen>&prompt.sudo;<command>cp /mnt/boot/<replaceable>ARCH</replaceable>/loader/linux  /srv/tftpboot/boot/images/SLES-16.0/<replaceable>ARCH</replaceable>/</command></screen>
<screen>&prompt.sudo;<command>cp /mnt/boot/<replaceable>ARCH</replaceable>/loader/initrd /srv/tftpboot/boot/images/SLES-16.0/<replaceable>ARCH</replaceable>/</command></screen>
        </step>
        <step>
          <para>
            Copy the compressed root file system:
          </para>
<screen>&prompt.sudo;<command>cp /mnt/LiveOS/squashfs.img /srv/tftpboot/boot/images/SLES-16.0/<replaceable>ARCH</replaceable>/</command></screen>
        </step>
        <step>
          <para>
            Unmount the ISO image:
          </para>
<screen>&prompt.sudo;<command>umount /mnt</command></screen>
        </step>
      </procedure>
      <procedure xml:id="proc-prepare-online-iso-ppc64le">
        <title>Extracting files from Online ISO (ppc64le)</title>
        <step>
          <para>
            Create the directory structure:
          </para>
<screen>&prompt.sudo;<command>mkdir -p /srv/tftpboot/boot/images/SLES-16.0/ppc64le/</command></screen>
        </step>
        <step>
          <para>
            Mount the ISO image:
          </para>
<screen>&prompt.sudo;<command>mount -oro,loop /srv/install/iso/SLES-16.0-Online-ppc64le-<replaceable>BUILD</replaceable>.install.iso /mnt</command></screen>
        </step>
        <step>
          <para>
            Copy the kernel and initrd files (note the different path structure for ppc64le):
          </para>
<screen>&prompt.sudo;<command>cp /mnt/boot/ppc64le/linux /srv/tftpboot/boot/images/SLES-16.0/ppc64le/</command>
</screen>
<screen>&prompt.sudo;<command>cp /mnt/boot/ppc64le/initrd /srv/tftpboot/boot/images/SLES-16.0/ppc64le/</command></screen>
        </step>
        <step>
          <para>
            Copy the compressed root file system:
          </para>
<screen>&prompt.sudo;<command>cp /mnt/LiveOS/squashfs.img /srv/tftpboot/boot/images/SLES-16.0/ppc64le/</command></screen>
        </step>
        <step>
          <para>
            Unmount the ISO image:
          </para>
<screen>&prompt.sudo;<command>umount /mnt</command></screen>
        </step>
      </procedure>
    </section>
    <section xml:id="sles-pxe-server-prepare-installer-iso-full">
      <title>Using Full ISO images</title>
      <para>
        Full ISO images include both the installer and installation repositories, enabling local
        installations without external network dependencies.
        It corresponds with the <literal>SLES-16.0 Local Installation</literal> boot menu entry
        in grub with the additional
        <literal>inst.install_url=http://pxe.example.net/install/SLES-16.0/${arch}</literal>
        parameter.
      </para>
      <procedure xml:id="proc-prepare-full-iso">
        <title>Extracting files from Full ISO</title>
        <step>
          <para>
            Create directories for both installer files and the installation repository:
          </para>
<screen>&prompt.sudo;<command>mkdir -p /srv/tftpboot/boot/images/SLES-16.0/<replaceable>ARCH</replaceable>/</command></screen>
<screen>&prompt.sudo;<command>mkdir -p /srv/install/SLES-16.0</command></screen>
        </step>
        <step>
          <para>
            Mount the Full ISO image:
          </para>
<screen>&prompt.sudo;<command>mount -oro,loop /srv/install/iso/SLES-16.0-Full-<replaceable>ARCH</replaceable>-<replaceable>BUILD</replaceable>.install.iso /mnt</command></screen>
        </step>
        <step>
          <para>
            Copy the kernel and initrd files (adjust paths for ppc64le as shown in previous
            procedures):
          </para>
<screen>&prompt.sudo;<command>cp /mnt/boot/<replaceable>ARCH</replaceable>/loader/linux  /srv/tftpboot/boot/images/SLES-16.0/<replaceable>ARCH</replaceable>/</command></screen>
<screen>&prompt.sudo;<command>cp /mnt/boot/<replaceable>ARCH</replaceable>/loader/initrd /srv/tftpboot/boot/images/SLES-16.0/<replaceable>ARCH</replaceable>/</command></screen>
        </step>
        <step>
          <para>
            Copy the compressed root file system:
          </para>
<screen>&prompt.sudo;<command>cp /mnt/LiveOS/squashfs.img /srv/tftpboot/boot/images/SLES-16.0/<replaceable>ARCH</replaceable>/</command></screen>
        </step>
        <step>
          <para>
            Copy the installation repository for local HTTP server access:
          </para>
<screen>&prompt.sudo;<command>rsync -avP /mnt/install/ /srv/install/SLES-16.0/<replaceable>ARCH</replaceable>/</command></screen>
        </step>
        <step>
          <para>
            Unmount the ISO image:
          </para>
<screen>&prompt.sudo;<command>umount /mnt</command></screen>
        </step>
      </procedure>
    </section>
  </section>
  <section xml:id="sles-pxe-server-prepare-installer-rpm">
    <title>Preparing installer files from RPM packages</title>
    <para>
      RPM packages provide an alternative method for obtaining Online Installer files.
    </para>
    <procedure xml:id="proc-prepare-rpm-packages">
      <title>Installing and using tftpboot RPM packages</title>
      <step>
        <para>
          Install the required packages:
        </para>
<screen>&prompt.sudo;<command>zypper in tftpboot-agama-installer-SUSE_SLE_16-<replaceable>ARCH</replaceable></command></screen>
      </step>
      <step>
        <para>
          Copy the linux,initrd,squashfs.img into tftpboot:
        </para>
<screen>&prompt.sudo;<command>mkdir -p
/srv/tftpboot/boot/images/SLES-16.0/<replaceable>ARCH</replaceable></command></screen>
<screen>&prompt.sudo;<command>cd
/srv/tftpboot/boot/images/SLES-16.0/<replaceable>ARCH</replaceable></command></screen>
<screen>&prompt.sudo;<command>cp -v /usr/share/tftpboot-installation/agama-installer-SUSE_SLE_16/<replaceable>ARCH</replaceable>/loader/linux .</command></screen>
<screen>&prompt.sudo;<command>cp -v /usr/share/tftpboot-installation/agama-installer-SUSE_SLE_16/<replaceable>ARCH</replaceable>/loader/initrd .</command></screen>
<screen>&prompt.sudo;<command>cp -v /usr/share/tftpboot-installation/agama-installer-SUSE_SLE_16/<replaceable>ARCH</replaceable>/loader/squashfs.img .</command></screen>
      </step>
    </procedure>
  </section>
  <section xml:id="sles-pxe-server-prepare-installer-dir-structure">
    <title>Recommended directory structure</title>
    <para>
      Organize the extracted files according to the following directory layout to ensure consistency
      and ease of maintenance. This structure supports multiple architectures and installation
      types.
    </para>
    <example xml:id="ex-pxe-directory-layout">
      <title>Complete PXE server directory layout</title>
<screen>/srv/tftpboot/
├── boot/
│   ├── grub2/
│   │   ├── x86_64-efi/
│   │   │   ├── bootx64.efi
│   │   │   └── grub.cfg
│   │   ├── i386-pc/
│   │   │   └── core.0
│   │   ├── arm64-efi/
│   │   │   └── bootaa64.efi
│   │   └── powerpc-ieee1275/
│   │       └── core.elf
│   └── images/
│       └── SLES-16.0/
│           ├── x86_64/
│           │   ├── linux <co xml:id="co-kernel"/>
│           │   ├── initrd <co xml:id="co-initrd"/>
│           │   └── squashfs.img <co xml:id="co-squashfs"/>
│           ├── aarch64/
│           └── ppc64le/
/srv/install/
└── SLES-16.0/
    ├── x86_64/ <co xml:id="co-install-repo"/>
    ├── aarch64/
    └── ppc64le/</screen>
    </example>
    <calloutlist>
      <callout arearefs="co-kernel">
        <para>
          Kernel image extracted from installation media
        </para>
      </callout>
      <callout arearefs="co-initrd">
        <para>
          Initial RAM disk image
        </para>
      </callout>
      <callout arearefs="co-squashfs">
        <para>
          Compressed root file system for &agama; installer
        </para>
      </callout>
      <callout arearefs="co-install-repo">
        <para>
          Installation repository from <filename>install</filename> directory from the Full ISO (optional)
        </para>
      </callout>
    </calloutlist>
  </section>
  <section xml:id="sles-pxe-server-prepare-installer-verify">
    <title>Verifying the installation</title>
    <para>
      After extracting and organizing the installer files, verify that all required components are
      present and accessible.
    </para>
    <procedure xml:id="proc-verify-installer-files">
      <title>Verification steps</title>
      <step>
        <para>
          Check that essential files are present:
        </para>
<screen>&prompt.user;<command>ls -la /srv/tftpboot/boot/images/SLES-16.0/<replaceable>ARCH</replaceable>/*</command></screen>
      </step>
      <step>
        <para>
          Ensure proper file permissions:
        </para>
<screen>&prompt.sudo;<command>find /srv/tftpboot/boot/images/ -type d -exec chmod 0755 {} \;</command></screen>
<screen>&prompt.sudo;<command>find /srv/tftpboot/boot/images/ -type f -exec chmod 0644 {} \;</command></screen>
      </step>
    </procedure>
    <important>
      <title>File accessibility</title>
      <para>
        Ensure that all extracted files are readable by the TFTP and HTTP services. The files will
        be accessed by PXE clients during the boot process, so proper permissions and service
        configuration are essential for successful deployments.
      </para>
    </important>
  </section>
  <section xml:id="sles-pxe-server-prepare-installer-next">
    <title>Next steps</title>
    <para>
      With the installer files properly prepared and organized, you can proceed to:
    </para>
    <itemizedlist>
      <listitem>
        <para>
          Configure &grub; for PXE boot with menu entries referencing these files
        </para>
      </listitem>
      <listitem>
        <para>
          Set up HTTP and TFTP services to serve the extracted content
        </para>
      </listitem>
      <listitem>
        <para>
          Configure DHCP to direct PXE clients to the appropriate bootloaders
        </para>
      </listitem>
    </itemizedlist>
    <para>
      The extracted files will be referenced in &grub; configuration using paths such as
      <literal>root=live:http://pxe.example.net/boot/images/SLES-16.0/<replaceable>ARCH</replaceable>/squashfs.img</literal>.
    </para>
  </section>
</topic>
