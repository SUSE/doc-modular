<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<!-- refers to legacy doc: <add github link to legacy doc piece, if applicable> -->
<!-- point back to this document with a similar comment added to your legacy doc piece -->
<!-- refer to README.md for file and id naming conventions -->
<!-- metadata is dealt with on the assembly level -->
<topic xml:id="starting-systemd-services"
 role="task" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>Starting and stopping &systemd; services </title>
    <meta name="maintainer" content="amrita.sakthivelsuse.com" its:translate="no"/>
    <abstract>
      <para>
     &systemd; uses <literal>units</literal> which are resources. These resources are defined using configuration files called unit files.
    A unit is a resource that the system knows how to operate on and manage. The target units are service units, which have a <literal>.service</literal> suffix.
For service management tasks, you do not have to add the <literal>.service</literal> because &systemd; knows that you want to execute a service.
You can manage multiple services at one time
    </para>
    </abstract>
  </info>
  <para>
To start and stop &systemd; services, follow:
  </para>
  <procedure>
    <step>
      <para>

      </para>




    </step>
  </procedure>
  <para>Enabling a service does not start it in the current session. You can use <command>start</command>
  and <command>enable</command>commands to start the service and enable it at boot.</para>

</topic>