<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<!-- refers to legacy doc: <add github link to legacy doc piece, if applicable> -->
<!-- point back to this document with a similar comment added to your legacy doc piece -->
<!-- refer to README.md for file and id naming conventions -->
<!-- metadata is dealt with on the assembly level -->
<topic xml:id="sudo-creating-custom-configuration"
 role="task" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>Creating custom &sudo; configurations</title><!-- can be changed via merge
in the assembly -->
    <!-- add author's e-mail -->
    <meta name="maintainer" content="jana.jaeger@suse.com" its:translate="no"/>
    <abstract><!-- can be changed via merge in the assembly -->
      <para>
       Learn how to build a simple custom &sudo; configuration and expand it 
       step-by-step. You will be creating a custom configuration that allows a 
       certain user to run the <command>useradd</command>, <command>usermod</command> 
       and <command>userdel</command> command with &sudo; and their own password
       instead of the &rootuser;'s password. Learn how to create groups and how 
       to use aliases to keep your custom configuration lean and efficient.
      </para>
    </abstract>
  </info>
  <section xml:id="sudo-creating-custom-configuration-bp">
    <title>&sudo; configuration best practices</title>
    <para>
      Before your start, here are a few ground rules for maintaining &sudo; 
      configurations:
    </para>
    <variablelist>
      <varlistentry>
        <term>Always use <command>visudo</command> to edit &sudo; configuration files</term>
        <listitem>
          <para>
            Any changes to the &sudo; configuration should be done using the 
            <command>visudo</command>. <command>visudo</command> is a tailor-made tool 
            that allows you to edit the &sudo; configuration files and that runs basic 
            synthax checks making sure that the configuration remains intact and 
            functional. A faulty &sudo; configuration can result in a user being 
            locked out of their own system.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Always create custom configurations under <filename>/etc/sudoers.d/</filename></term>
        <listitem>
          <para>
            Custom configurations must reside under the 
            <filename>/etc/sudoers.de</filename> to be pulled in by &sudo;. 
            Settings in the custom configuration files take precedence over the 
            ones in the default confiugation in <filename>/etc/sudoers</filename>. 
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Always mind the order in which configurations are read</term>
        <listitem>
          <para>
            To make sure the custom configurations are read in the correct order, prefix them with numbers.
            Use leading zeroes to establish the order in which the files are read. For example,
            <filename>01_myfirstconfig</filename> is parsed before
            <filename>10_myotherconfig</filename>. If a directive has been set 
            in one file that is read before another file that contains 
            conflicting information, the last-read directive is applied. 
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Always use descriptive file names</term>
        <listitem>
          <para>
            Use file names that hint at what the configuration file does. This 
            helps you keep track of what your &sudo; setup is supposed to do.
          </para>
        </listitem>
      </varlistentry>
    </variablelist>
  </section>

  <section xml:id="sudo-creating-custom-config-single-user">
    <title>Create a user-specific configuration file</title>
    <para>
      Create a &sudo; configuration file that allows &exampleuser; to use the 
      <command>useradd</command> command with their own password instead of the 
      &rootuser; password. 
    </para>
    <procedure>
      <step>
        <para>
          Create a custom configuration file to hold the new user-specific 
          directives by starting <command>visudo</command>. 
          Use both numbering and a descriptive name:
        </para>
        <screen>
&prompt.sudo; visudo -f /etc/sudoers.d/01_usermanagement
</screen>
      </step>
      <step>
        <para>
          Create a rule that allows &exampleuser; to execute the 
          <command>/usr/sbin/useradd</command> binary in the entire environment 
          that this &sudo; configuration is applied to:
        </para>
        <screen>
tux<co xml:id="who"/> ALL<co xml:id="where"/> = /usr/sbin/useradd<co xml:id="what"/>
</screen>
        <para>

        </para>
        <calloutlist>
          <callout arearefs="who">
            <para>
              Specify the user or group. Users by name or <literal>#UID</literal> 
              groups by <literal>%GROUPNAME</literal>. If you have several items 
              here, separate them with commas. To negate entries, use 
              <literal>!</literal>.
            </para>
          </callout>
          <callout arearefs="where">
            <para>
              Specify one or several (separated by commas) hosts. Use 
              (fully qualified) host names or IP addresses. Use 
              <literal>ALL</literal> to enforce this setting globally 
              across all hosts and use <literal>!</literal> for negations.
            </para>
          </callout>
          <callout arearefs="what">
            <para>
              Specify one or several executables (separated by commas). When 
              specifying them, make sure to mind the following rules:
            </para>
            <variablelist>
              <varlistentry>
                <term><command>/usr/sbin/useradd</command></term>
                <listitem>
                  <para>
                    Without any additional options added, this allows the 
                    execution of every possible <command>useradd</command> command.
                  </para>
                </listitem>
              </varlistentry>
              <varlistentry>
                <term><command>/usr/sbin/useradd -c</command></term>
                <listitem>
                  <para>
                    If you explicitely specify an option, then that option is 
                    the only one that is allowed. Nothing else would be available
                    to the user you specified above.
                  </para>
                </listitem>
              </varlistentry>
                            <varlistentry>
                <term><command>/usr/sbin/useradd ""</command></term>
                <listitem>
                  <para>
                    This would just let the user invoke a mere 
                    <command>useradd</command> without any option at all. 
                  </para>
                </listitem>
              </varlistentry>
            </variablelist>
            <para>
              In the example above, you would want to either allow all
              options and subcommands or limit them to a few for security 
              reasons, but forbidding a user to specify any option at all is
              pointless in our context.
            </para>
          </callout>
        </calloutlist>
      </step>
      <step>
        <para>
          To enable the user to be able to use their own password instead of the 
          &rootuser; password, open <filename>/etc/sudoers</filename> with 
          <command>visudo</command> and comment or remove the following lines 
          and save the configuration:
        </para>
        <screen>Defaults targetpw<co xml:id="targetpw"/>   # ask for the password of the target user i.e. root
ALL   ALL=(ALL) ALL<co xml:id="ALL"/>   # WARNING! Only use this together with 'Defaults targetpw'!
</screen>
        <calloutlist>
          <callout arearefs="targetpw">
            <para>
              When active, this flag requires the user to enter the password of 
              the target user, i.e. &rootuser;. This flag is enabled by default on 
              any &product; system. When disabled, no password is required.
            </para>
          </callout>
          <callout arearefs="ALL">
            <para>
              This rule allows all users on all hosts to run all executables as 
              any user. Use this rule only together with 
              <literal>Defaults targetpw</literal>. Disabling this rule lets 
              &sudo; check for user-specific rules with user-specific permissions.
            </para>
          </callout>
        </calloutlist>
      </step>
      <step>
        <para>Check whether there are any errors with your &sudo; configuration:
        </para>
        <screen>&prompt.sudo;visudo -c
/etc/sudoers: parsed OK
/etc/sudoers.d/01_usermanagement: parsed OK
</screen>
        <para>
          This tells you that all of your configuration files are syntactically
          correct and gives you the order in which the configurations
          are parsed. This information is needed in case you notice unexpected
          behavior of &sudo; which can simply be caused by directives being
          applied in the wrong order or overriding each other. If the configuration
          contains an error, <command>visudo</command> reports the file
          name, line number and error description of the affected file.
        </para>
      </step>
      <step>
        <para></para>
      </step>
    </procedure>
  </section>
    <section xml:id="sudo-creating-custom-config-group">
    <title>Create custom configurations by grouping items</title>
    <para>
      Modify the example from <xref linkend="sudo-creating-custom-config-single-user"/> 
      so that a group of named users can run the <command>useradd</command> 
      command without the need for the &rootuser; password. Also, add the 
      <command>usermod</command> and <command>userdel</command> to the list of 
      commands available to said group.
    </para>
    <procedure>
      <step>
        <para>
          
        </para>
      </step>
      <step>
        <para>
          A second step.
        </para>
      </step>
      <step>
        <para>
          A third step.
        </para>
      </step>
    </procedure>
  </section>
    <section xml:id="sudo-creating-custom-config-aliases">
    <title>Simplify configurations by applying aliases</title>
    <para>
      Use aliases to simplify your custom configuration from 
      <xref linkend="sudo-creating-custom-config-group"/> even further. 
    </para>
    <procedure>
      <step>
        <para>
          A step.
        </para>
      </step>
      <step>
        <para>
          A second step.
        </para>
      </step>
      <step>
        <para>
          A third step.
        </para>
      </step>
    </procedure>
  </section>
</topic>
