<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<!-- refers to legacy doc: https://github.com/SUSE/doc-sle/blob/main/xml/adm_sudo.xml -->
<!-- point back to this document with a similar comment added to your legacy doc piece -->
<!-- refer to README.md for file and id naming conventions -->
<!-- metadata is dealt with on the assembly level -->
<topic xml:id="sudo-manage-wheel-group"
 role="task" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <title>Managing the <systemitem class="groupname">wheel</systemitem> user
   group for &sudo; privileges
  </title>
  <!-- maybe comment out this section, rework and publish later -->
  <info>
    <meta name="maintainer" content="Julia Faltenbacher" its:translate="no"/>
    <abstract>
    <para>
    Members of the user group <systemitem class="groupname">wheel</systemitem>
    have access to the &root; account and can receive unlimited privileges.
    Learn how to add your user to the
    <systemitem class="groupname">wheel</systemitem> group.
    </para>
    </abstract>
  </info>
  <section xml:id="task-sudo-add-user-to-wheel">
    <title>Introduction</title>
    <para>
    The user group <systemitem class="groupname">wheel</systemitem> is available
    on all &Linux; systems by default. The group is managed in the
    <filename>sudoers</filename> and the members of this group can run all
    commands with &sudo;.
    </para>
    <procedure>
    <title>
    Adding a user to the <systemitem class="groupname">wheel</systemitem> group
    </title>
    <step>
    <para>
    Verify that the <systemitem class="groupname">wheel</systemitem> group
    exists:
    </para>
<screen>&prompt.user;<command>getent group wheel</command></screen>
    <para>
    This will return, for example: 
    </para>
<screen>wheel:x:476:</screen>
    <para>
    If the previous command returned no result, install the
    <package>system-group-wheel</package> package that creates the
    <systemitem class="groupname">wheel</systemitem> group:
    </para>
<screen>&prompt.sudo;<command>zypper install system-group-wheel</command>
</screen>
    </step>
    <step>
    <para>
    To add your user account tho the
    <systemitem class="groupname">wheel</systemitem> group, run the following
    command:
    </para>
<screen>sudo usermod -a -G wheel <replaceable>USERNAME</replaceable></screen>
    <para>
    Enter the &root; password.
    </para>
    </step>
    <step>
    <para>
    Log out and log in again to enable the change. Verify that the change was
    successful by running the following command: 
    </para>
<screen>groups <replaceable>USERNAME</replaceable></screen>
    <para>
    This will return, for example:
    </para>
<screen><replaceable>USERNAME</replaceable> : users wheel</screen>
    </step>
    </step>
    <step>
    <para>
    Create a new &sudo; configuration file with:
    </para>
<screen>sudo visudo -f /etc/sudoers.d/NAME</screen>
    </step>
    <step>
    <para>
    To configure &sudo; to ask for the &root; password instead of the user
    password, add the following line to the new file:
    </para>
<screen>Defaults !targetpw</screen>
    </step>
    <step>
    <para>
    Depending on whether you want users to re-enter their passwords, uncomment
    the appropriate line in <filename>/etc/sudoers</filename> and comment out
    the default rule.
    </para>
    </step>
    <step>
    <para>
    To make the default rule more restrictive, comment out or remove the allow-
    everything rule in <filename>/etc/sudoers</filename>:
    </para>
<screen>ALL     ALL=(ALL) ALL   # WARNING! Only use this together with 'Defaults targetpw'!</screen>
    <warning>
            <title>Dangerous rule in <filename>sudoers</filename></title>
            <para>
              Do not skip this step. Otherwise <emphasis>any</emphasis> user
              can execute <emphasis>any</emphasis> command as &rootuser;!
            </para>
          </warning>
    </step>
    <step>
    <para>
    To test the configuration, run &sudo; as member and non-member of
    <systemitem class="groupname">wheel</systemitem>.
    </para>
<screen>
<prompt>&exampleuser_plain;:~ &gt; </prompt>groups
users wheel
<prompt>&exampleuser_plain;:~ &gt; </prompt>sudo id -un
&exampleuser_plain;'s password:
root
<prompt>&exampleuserII_plain;:~ &gt; </prompt>groups
users
<prompt>&exampleuserII_plain;:~ &gt; </prompt>sudo id -un
&exampleuserII_plain; is not in the sudoers file.  This incident will be reported.
</screen>
    </step>
<screen>
## Uncomment to allow members of group wheel to execute any command
# %wheel ALL=(ALL) ALL

## Same thing without a password
# %wheel ALL=(ALL) NOPASSWD: ALL
</screen>
    </step>      
    <result>
    <para>
    You have added your user account to the
    <systemitem class="groupname">wheel</systemitem> user group.
    </para>
    </result>
    </procedure>
  </section>
  <section xml:id="task-sudo-start-shell-with-s">
    <title>Starting a shell with <command>sudo -s</command></title>
    <!-- jufa: seems to have impact on different directories also re-think
    if better to explain when to use which -->
    <!-- interactive shell run all commands as root, non-interactive, only run
    one command as root-->
    <para>
      The <command>sudo -s</command> command launches an interactive non-login
      shell. After successful authentication with the root password, all
      subsequent commands are executed with elevated privileges.
    </para>
    <para>
    Which shell is opened is specified by the <envar>SHELL</envar> environment
    variable or the user's default shell. In case this variable is empty, the
    shell defined in the <filename>/etc/passwd</filename> is picked up.
    </para>
    <para>
    To start a shell with permanently elevated privileges, enter the following
    command:
    </para>
<screen>
<prompt>&exampleuser_plain;:~ &gt; </prompt>sudo -s
root's password:
<prompt>root:/home/tux # </prompt>exit
<prompt>&exampleuser_plain;:~ &gt; </prompt>
</screen>
<para>
The prompt changes from &prompt.user; to &prompt.root;. 
</para>
<para>
You have started a shell with permanently elevated privileges. All
subsequent commands are executed without asking for the password again.
</para>
  </section>
<section xml:id="task-sudo-start-shell-with-i">
    <title>Starting a shell with <command>sudo -i</command></title>
    <para>
      The <command>sudo -i</command> is similar to the
      <command>sudo -s</command> command-line option but launches an interactive
      login shell.
    </para>
    <para>
    To start a shell with permanently elevated privileges, enter the following
    command:
      </para>
<screen>
<prompt>&exampleuser_plain;:~ &gt; </prompt>sudo -i
root's password:
<prompt>root:~ # </prompt>exit
<prompt>&exampleuser_plain;:~ &gt; </prompt>
</screen>
      <para>
      You have started a shell with permanently elevated privileges. All
      subsequent commands are executed without asking for the password again.
      </para>
  <!-- jufa: check content and if it makes sense here    <tip>
        <title>Environment variables</title>
        <para>
          By default, &sudo; does not propagate environment variables. This
          behavior can be changed using the <literal>env_reset</literal> option.
        </para>
      </tip> -->
  </section>
</topic>
