<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<!-- refers to legacy doc: https://github.com/SUSE/doc-sle/blob/main/xml/adm_sudo.xml -->
<!-- point back to this document with a similar comment added to your legacy doc piece -->
<!-- refer to README.md for file and id naming conventions -->
<!-- metadata is dealt with on the assembly level -->
<topic xml:id="sudo-start-shell-as-root"
 role="task" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <meta name="maintainer" content="julia.faltenbacher@suse.com" its:translate="no"/>
    <title>Starting a shell with &rootuser; privileges</title>
    <abstract>
      <para>
        Start a shell with permanent &rootuser; privileges by using the
        <command>sudo -s</command> or <command>sudo -i</command> command. With
        both commands, you are prompted for the &rootuser; password only once.
      </para>
    </abstract>
  </info>
  <section xml:id="task-sudo-start-shell-as-root-introduction">
    <title>Introduction</title>
    <para>
      Having to enter &sudo; every time you want to run a command as &rootuser;
      can become tedious. Instead, you can use one of the built-in mechanisms to
      start a shell with permanent &rootuser; privileges. For this, there are
      two command options available:
    </para>
    <itemizedlist>
      <listitem>
        <para>
          <command>sudo -s</command> launches the shell with the environment of
          the current user and offers a few privilege control measures. To run
          this command, you have to enter the &rootuser; password.
        </para>
      </listitem>
      <listitem>
        <para>
          <command>sudo -i</command> starts the shell as an interactive login
          shell with a clean environment. To run this command, you have to
          enter your user password. With this method it is not needed to share
          the &rootuser; credentials.
        </para>
      </listitem>
    </itemizedlist>
    <para>
      With both commands, the shell is started with a new environment and
      logged in as superuser. Any subsequent command that is executed within
      that shell is run with elevated privileges without having to enter the
      password again. When closing the shell, also this environment is
      terminated and you have to enter the password again if another &sudo;
      command is executed.
    </para>
  </section>
  <section xml:id="task-sudo-start-shell-with-s">
    <title>Starting a shell with <command>sudo -s</command></title>
    <para>
      The <command>sudo -s</command> command launches an interactive non-login
      shell. After successful authentication with the &rootuser; password, all
      subsequent commands are executed with elevated privileges.
    </para>
    <para>
      The <envar>SHELL</envar> environment variable or the user's default shell
      specifies which shell opens. In case this variable is empty, the shell
      defined in the <filename>/etc/passwd</filename> is picked up.
    </para>
    <para>
      By default, the <command>sudo -s</command> command runs from the
      directory of the previous user, because the target user inherits the
      environment of the previous user. Also the command is logged in your
      history.
    </para>
    <para>
      To start a shell with permanently elevated privileges, enter the
      following command:
    </para>
<screen>
<prompt>&exampleuser_plain;:~ &gt; </prompt>sudo -s
root's password:
<prompt>root:/home/tux # </prompt>exit
<prompt>&exampleuser_plain;:~ &gt; </prompt>
</screen>
    <para>
      The prompt changes from &prompt.user; to &prompt.root;.
    </para>
    <para>
      You have started a shell with permanently elevated privileges. All
      subsequent commands are executed without prompting for the password
      again.
    </para>
  </section>
  <section xml:id="task-sudo-start-shell-with-i">
    <title>Starting a shell with <command>sudo -i</command></title>
    <para>
      The <command>sudo -i</command> is similar to the <command>sudo
      -s</command> command-line option but launches an interactive login shell.
      When using the <command>sudo -s</command> command, the target user
      inherits the environment of the previous user. You can prevent it by
      using the <command>sudo -i</command> command, where the target user gets
      a clean environment and starts at its own <envar>$HOME</envar> directory.
    </para>
    <para>
      To run a command with <command>sudo -i</command>, enter the following:
    </para>
<screen>
<prompt>&exampleuser_plain;:~ &gt; </prompt>sudo -i
root's password:
<prompt>root:~ # </prompt>exit
<prompt>&exampleuser_plain;:~ &gt; </prompt>
</screen>
    <para>
      You have started a shell with permanently elevated privileges and the
      command is logged in your history. All subsequent commands are executed
      without prompting for the password again.
    </para>
    <!-- jufa: check content and if it makes sense here to be mentioned 
      <tip>
      <title>Environment variables</title>
      <para>
      By default, &sudo; does not propagate environment variables. This
      behavior can be changed using the <literal>env_reset</literal> option.
      </para>
      </tip> -->
  </section>
</topic>
