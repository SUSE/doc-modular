<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<topic xml:id="systemd-timer-troubleshoot"
       role="task" xml:lang="en"
       xmlns="http://docbook.org/ns/docbook" version="5.2"
       xmlns:its="http://www.w3.org/2005/11/its"
       xmlns:xi="http://www.w3.org/2001/XInclude"
       xmlns:xlink="http://www.w3.org/1999/xlink"
       xmlns:trans="http://docbook.org/ns/transclusion">
  <title>Troubleshooting and FAQs for &systemd; timers</title>
  <info>
    <abstract>
      <para>
        Learn how to debug and troubleshoot &systemd; timers that have failed. Find answers to
        frequently asked questions on &systemd; timers.
      </para>
    </abstract>
  </info>
  <section>
    <title>Avoiding errors</title>
    <para>
      To avoid errors with &systemd; timers, make sure to follow these best practices:
    </para>
    <itemizedlist>
      <listitem>
        <para>
          Verify that the executable you specify in the service with <literal>ExecStart</literal>
          runs correctly.
        </para>
      </listitem>
      <listitem>
        <para>
          Check the syntax of the service and timer files by running <command>systemd-analyze
          verify <replaceable>FILE</replaceable></command>.
        </para>
      </listitem>
      <listitem>
        <para>
          Check execution times of calendar entries by running <command>systemd-analyze calendar
          <replaceable>CALENDER_ENTRY</replaceable></command>.
        </para>
      </listitem>
    </itemizedlist>
  </section>
  <section>
    <title>Event is not triggered</title>
    <para>
      When you activate a timer that contains non-critical errors, &systemd; silently ignores them.
      For example:
    </para>
    <example>
      <title>&systemd; timer file cutout containing a non-fatal error</title>
<screen>[Timer]
OnBootSec=5min
OnClendar=Mon..Fri 10:00
Unit=helloworld.service
</screen>
      <para>
        Line 3 contains a syntax error (<literal>OnClendar</literal> instead of
        <literal>OnCalendar</literal>). Since the <literal>[Timer]</literal> section contains a
        second timer entry (OnBoot), the error is not critical and is silently ignored. As a
        consequence, the Monday to Friday trigger will not be executed. The only way to detect the
        error is to use the command <command>systemd-analyze verify</command>:
      </para>
<screen>&prompt.root; systemd-analyze verify /etc/systemd/system/helloworld.timer
/etc/systemd/system/helloworld.timer:7: Unknown key name 'OnClendar' in section 'Timer', ignoring.</screen>
    </example>
  </section>
  <section>
    <title>Checking the system journal</title>
    <para>
      As with every &systemd; service, events and actions triggered by timers are logged with the
      system journal. If a trigger does not behave as expected, check the log messages with
      <command>journalctl</command>. To filter the journal for relevant information, use the
      <option>-u</option> switch to specify the &systemd; timers and service files. Use this option
      to show the log entries for the timer <emphasis>and</emphasis> the corresponding service
      file:
    </para>
<screen>sudo journalctl -u  helloworld.timer -u helloworld.service</screen>
    <para>
      or shorter (if applicable):
    </para>
<screen>sudo journalctl -u  helloworld.*</screen>
    <para>
      <command>journalctl</command> is a tool that supports many options and filters. Please refer
      to <command>man 1 journalctl</command> for in-depth information. The following options are
      useful for troubleshooting timers:
    </para>
    <itemizedlist>
      <listitem>
        <para>
          <option>-b</option>: Only show entries for the current boot.
        </para>
      </listitem>
      <listitem>
        <para>
          <option>-S today</option>: Only show entries from today.
        </para>
      </listitem>
      <listitem>
        <para>
          <option>-x</option>: Show help texts alongside the log entry.
        </para>
      </listitem>
      <listitem>
        <para>
          <option>-f</option>: Start with the most recent entries and continuously print the log as
          new entries get added. Useful to check triggers that occur in short intervals. Exit with
          <keycombo><keycap function="control"/><keycap>C</keycap></keycombo>.
        </para>
      </listitem>
    </itemizedlist>
  </section>
  <section>
    <title>How to migrate from cron to &systemd; timers?</title>
    <para>
      All cron jobs can be migrated to &systemd; timers. Here are general instructions on migrating
      a cron job:
    </para>
    <procedure>
      <step>
        <para>
          Create a service file executing the script. See
          <xref linkend="systemd-timer-example-service"/> for details.
        </para>
      </step>
      <step>
        <para>
          Create a timer file executing the service file. See
          <xref linkend="systemd-timer-example-timer"/> for general instructions.
        </para>
        <substeps>
          <step>
            <para>
              Convert calendar entries. Time is specified differently in cron and &systemd;. Use
              the patterns below as a conversion template:
            </para>
<screen>Cron:               Minute Hour Day Month DayOfWeek
systemd: OnCalendar=DayOfWeek Year-Month-Day Hour:Minute:Second</screen>
            <para>
              To test the converted calendar entry, follow the instructions in
              <xref linkend="systemd-timer-test"/>.
            </para>
          </step>
          <step>
            <para>
              Convert cron nicknames (<literal>@<replaceable>NICK</replaceable></literal>):
            </para>
<screen>Cron     : &systemd; timer
-------- : ----------------------------
@reboot  : OnBootSec=1s
@yearly  : OnCalendar=*-01-01 00:00:00
@annually: OnCalendar=*-01-01 00:00:00
@monthly : OnCalendar=*-*-01 00:00:00
@weekly  : OnCalendar=Sun *-*-* 00:00:00
@daily   : OnCalendar=*-*-* 00:00:00
@hourly  : OnCalendar=*-*-* *:00:00</screen>
          </step>
          <step>
            <para>
              Convert variable assignments. The &systemd; variable assignment must go into the
              <literal>[Service]</literal> section. Note that you cannot convert
              <envar>MAILTO</envar> this way&mdash;refer to the next step for this.
            </para>
<screen>cron: <replaceable>VARIABLE</replaceable>=<replaceable>VALUE</replaceable>
systemd: Environment="<replaceable>VARIABLE</replaceable>=<replaceable>VALUE</replaceable>"</screen>
          </step>
          <step>
            <para>
              Set up e-mail notifications to replace cron's MAILTO feature by following the
              instructions in <xref linkend="systemd-mailto"/>.
            </para>
          </step>
        </substeps>
      </step>
    </procedure>
    <example>
      <title>cron to &systemd; timer migration</title>
      <para>
        Here are the crontab entries which call the script <literal>helloworld.sh</literal> 5
        minutes after booting and at 10 o'clock each Monday to Friday:
      </para>
<screen>@reboot sleep 300 &amp;&amp; /usr/local/bin/helloworld.sh
0 10 * * * 1-5 /usr/local/bin/helloworld.sh</screen>
      <para>
        The &systemd; service file (<filename>helloworld.service</filename>) calling the script
        looks like this:
      </para>
<screen>[Unit]
Description="Hello World script"
[Service]
ExecStart=/usr/local/bin/helloworld.sh</screen>
      <para>
        The timer file (<filename>helloworld.timer</filename>) looks like this:
      </para>
<screen>[Unit]
Description="Run helloworld.service 5min after boot and at 10am every Mon-Fri"
[Timer]
OnBootSec=5min
OnCalendar=Mon..Fri *-*-* 10:00:*
Unit=helloworld.service
[Install]
WantedBy=multi-user.target</screen>
    </example>
  </section>
</topic>
