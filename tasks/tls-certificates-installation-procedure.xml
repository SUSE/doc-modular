<?xml version="1.0" encoding="UTF-8"?>
<!-- This file originates from the project https://github.com/openSUSE/doc-kit -->
<!-- This file can be edited downstream. -->
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<topic xml:id="tls-certificates-installation-procedure"
 role="task" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>Issuing and installing TLS certificates with a trusted CA</title>
    <meta name="maintainer" content="tbazant@suse.com" its:translate="no"/>
    <abstract>
      <xi:include href="../snippets/tls-certificates-introduction.xml"/>
    </abstract>
  </info>
  <para>
    The following procedure outlines the TLS certificate issuance and
    installation process.
  </para>
  <procedure>
    <step performance="optional">
      <para>
        <emphasis role="bold">Create a private certificate authority
        (CA).</emphasis> A private CA is only needed if you want to sign the
        server certificate yourself and <emphasis>not</emphasis> have it signed
        by a trusted CA.
      </para>
    </step>
    <step>
      <para>
        <emphasis role="bold">Generate a private key.</emphasis> A private key
        is required on the server&mdash;such as a Web server&mdash;that will use
        the certificate. The key is kept secure and used to sign messages and
        decrypt data.
      </para>
    </step>
    <step>
      <para>
        <emphasis role="bold">Create a certificate signing request
        (CSR).</emphasis> Generate a CSR using the private key. The CSR contains
        information about the entity requesting the certificate and the public
        key that will be included in the certificate.
      </para>
    </step>
    <step performance="optional">
      <para>
        These steps apply to certificates that need to be signed by a trusted
        CA.
      </para>
      <substeps>
        <step>
          <para>
            <emphasis role="bold">Submit the CSR to a CA.</emphasis> Submit the
            CSR to a CA for signing. The CA verifies the information in the CSR
            and issues a signed certificate if the request is approved. This
            step may involve validation of the domain ownership or organization
            identity, depending on the type of certificate requested.
          </para>
        </step>
        <step>
          <para>
            <emphasis role="bold">Receive the signed certificate.</emphasis>
            After the CA approves the CSR, it issues a signed certificate. The
            certificate includes the digital signature of the CA, the public key
            of the server, and additional information about the server, such as
            the domain name or organization.
          </para>
        </step>
      </substeps>
    </step>
    <step performance="optional">
      <para>
        <emphasis role="bold">Sign the CSR with your private CA.</emphasis> If
        you intend to use the TLS certificate for a testing or internal
        purposes, you can sign the CSR yourself by your private CA, resulting in
        a <emphasis>self-signed certificate</emphasis>.
      </para>
    </step>
    <step>
      <para>
        <emphasis role="bold">Install the certificate on the server.</emphasis>
        Install the signed certificate on the server that will use it. This
        typically involves configuring the server software &mdash;such as the
        Apache Web server&mdash;to use the certificate for securing
        communication.
      </para>
    </step>
    <step>
      <para>
        <emphasis role="bold">Configure the server and client for secure
        communication.</emphasis> After the certificate is installed on the
        server, configure the server and client software to use secure
        communication protocols, for example, HTTPS that utilize the certificate
        for encryption and authentication.
      </para>
    </step>
    <step>
      <para>
        <emphasis role="bold">Regular maintenance and renewal.</emphasis>
        Regularly monitor the validity of the certificate and renew it before it
        expires. Keep the private key secure and ensure that certificates are
        properly configured and updated as needed.
      </para>
    </step>
  </procedure>
</topic>
