<?xml version="1.0" encoding="UTF-8"?>
<!-- This file originates from the project https://github.com/openSUSE/doc-kit -->
<!-- This file can be edited downstream. -->
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<topic xml:id="tls-creating-certificate-signing-request"
 role="task" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>Creating a certificate signing request</title>
    <meta name="maintainer" content="tbazant@suse.com" its:translate="no"/>
    <abstract>
      <xi:include href="../snippets/tls-certificates-introduction.xml"/>
    </abstract>
  </info>
  <para>
    Establishing TLS encrypted communication requires a valid TLS certificate
    signed by a CA. To obtain such certificate, you need to create a certificate
    signing request (CSR).
  </para>
  <procedure>
    <itemizedlist>
      <title>REQUIREMENTS</title>
      <listitem>
        <para>
          You have previously created a private TLS key as described in
          <xref linkend="tls-creating-private-key"/>.
        </para>
      </listitem>
    </itemizedlist>
    <step performance="optional">
      <para>
        Prepare a configuration template that simplifies the process of creating
        your CSR, for example:
      </para>
<screen>&prompt.user;cat <replaceable>example_csr.cnf</replaceable>
[req]
prompt = no
distinguished_name = dn
req_extensions     = re

[dn]
countryName            = CZ
localityName           = Prague
organizationName       = Example organization
commonName             = www.&exampledomain2;
emailAddress           = &exampleuserII;@&exampledomain2;

[re]
extendedKeyUsage = serverAuth,clientAuth

[alt_names]
DNS.1 = &exampledomain2;
DNS.2 = www.&exampledomain2;
IP.1 = 18.154.63.126
IP.2 = 18.154.63.127
</screen>
    </step>
    <step>
      <substeps>
        <step>
          <para>
            If you previously prepared a CSR template, create the CSR using the
            template and the private key.
          </para>
<screen>&prompt.user;openssl req -new -key <replaceable>server.key</replaceable> \
 -config <replaceable>example_csr.cnf</replaceable> \
 -out <replaceable>server.csr</replaceable></screen>
        </step>
        <step>
          <para>
            If you did not prepare the CSR template, omit the
            <option>-config</option> option from the command above.
          </para>
<screen>&prompt.user;openssl req -new -key <replaceable>server.key</replaceable> \
 -out <replaceable>server.csr</replaceable></screen>
          <para>
            You will be prompted for additional information about the
            certificate. When asked for a <literal>challenge password</literal>
            and an <literal>optional company name</literal>, leave it blank.
          </para>
<screen>You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter '.', the field will be left blank.
-----
Country Name (2 letter code) [AU]:CZ
State or Province Name (full name) [Some-State]: Czech Republic
Locality Name (eg, city) []:Prague
Organization Name (eg, company) [Internet Widgits Pty Ltd]:Example organization
Organizational Unit Name (eg, section) []:
Common Name (e.g. server FQDN or YOUR name) []:www.example.org
Email Address []:wilber@example.org

Please enter the following 'extra' attributes
to be sent with your certificate request
A challenge password []:
An optional company name []:</screen>
        </step>
      </substeps>
    </step>
  </procedure>
  <itemizedlist>
    <title>Next steps</title>
    <listitem>
      <para>
        Submit the CSR to a CA of your choice. If you want to use the
        certificate inside a trusted network, you can sign the certificate with
        your private CA as described in <xref linkend="tls-self-sign-csr"/>.
      </para>
    </listitem>
  </itemizedlist>
</topic>
