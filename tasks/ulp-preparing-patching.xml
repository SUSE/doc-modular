<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
[
  <!ENTITY % entities SYSTEM "../common/generic-entities.ent">
    %entities;
]>
<!-- refers to legacy doc: <add github link to legacy doc piece, if applicable> -->
<!-- point back to this document with a similar comment added to your legacy doc piece -->
<!-- refer to README.md for file and id naming conventions -->
<!-- metadata is dealt with on the assembly level -->
<topic xml:id="ulp-prerequisites"
 role="task" xml:lang="en"
 xmlns="http://docbook.org/ns/docbook" version="5.2"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 xmlns:trans="http://docbook.org/ns/transclusion">
  <info>
    <title>Preparing the &ulp;</title><!-- can be changed via merge
in the assembly -->
    <!-- add author's e-mail -->
    <meta name="maintainer" content="jsindelarova@suse.com" its:translate="no"/>
    <abstract><!-- can be changed via merge in the assembly -->
      <para>
       The topic covers installing libulp and testing if a library can be patched.
      </para>
    </abstract>
  </info>
  
  <para>
        For &ulpa; to work, proceed as follows:
      </para>
      <itemizedlist>
        <listitem os="slemicro">
          <para>
            The &ulpa; must be installed on your system. To do so, run:
          </para>
<screen>&prompt.root;transactional-update pkg in libpulp0 libpulp-tools</screen>
          <para>
            After successful installation, reboot your system.
          </para>
        </listitem>
        <listitem os="sles;sled">
          <para>
            The &ulpa; must be installed on your system. To do so run:
          </para>
<screen>&prompt.sudo;zypper in libpulp0 libpulp-tools</screen>
        </listitem>
        <listitem>
          <para>
          To enable live patching on an application, you need to preload the
        <systemitem>libpulp.so.0</systemitem> library when starting the
        application:
      </para>
<screen>&prompt.user;LD_PRELOAD=/usr/lib64/libpulp.so.0 <replaceable>APPLICATION_CMD</replaceable></screen>
        </listitem>
      </itemizedlist>

      <section xml:id="ulp-using-libulp">
        <title>Using <literal>libpulp</literal></title>
        <note>
    <title>Supported libraries for patching</title>
    <para>
        Currently, only <systemitem>glibc</systemitem> and
        <systemitem>openssl</systemitem> (<systemitem>openssl1_1</systemitem>)
        are supported. Additional packages will be available after they are
        prepared for live patching.
      To receive <systemitem>glibc</systemitem>
        and <systemitem>openssl</systemitem> live patches, install both
        <package>glibc-livepatches</package> and
        <package>openssl-livepatches</package> packages:
      </para>
<screen os="sled;sles">&prompt.user;zypper install glibc-livepatches openssl-livepatches</screen>
<screen os="slemicro">&prompt.user;transactional-update pkg in glibc-livepatches openssl-livepatches</screen>
      <para os="slemicro">
        After successful installation, reboot your system.
      </para>
  </note>
        <para>
          To check whether a library is live patchable, use the following
          command:
        </para>
        <screen>&prompt.user;ulp livepatchable <replaceable>PATH_TO_LIBRARY</replaceable></screen>
        <para>
          A shared object (<filename>.so</filename>) is a live patch container
          if it contains the &ulpa; patch description embedded into it. You can
          verify it with the following command:
        </para>
<screen>&prompt.user;readelf -S <replaceable>SHARED_OBJECT</replaceable> | grep .ulp</screen>
        <para>
          If the output shows that there are both <literal>.ulp</literal> and
          <literal>.ulp.rev</literal> sections in the shared object, then it is
          a live patch container.
        </para>
      </section>

      
</topic>
