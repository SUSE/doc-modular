<?xml version="1.0" encoding="UTF-8"?>
<!-- This file originates from the project https://github.com/openSUSE/doc-kit -->
<!-- This file can be edited downstream. -->
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook51-profile.xsl"
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE article
[
  <!ENTITY % entities SYSTEM "generic-entities.ent">
    %entities;
]>
<article xml:id="concept-alp" xml:lang="en"
 role="concept"
 xmlns="http://docbook.org/ns/docbook" version="5.1"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink">
 <info>
  <title>Concept</title>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker>
    <dm:url>https://bugzilla.suse.com/enter_bug.cgi</dm:url>
    <dm:component>Smart Docs</dm:component>
    <dm:product>Documentation</dm:product>
    <dm:assignee>tbazant@suse.com</dm:assignee>
   </dm:bugtracker>
   <dm:translation>no</dm:translation>
  </dm:docmanager>
 </info>
 <section xml:id="what-is-alp">
  <title>What is the &alp;?</title>
  <para>
   The &alp; (&alpshort;) is a lightweight operating system. Instead of applications distributed in
   traditional software packages, it runs containerized and virtualized workloads.
  </para>
 </section>
 <section xml:id="how-it-works-alp">
  <title>What are core components of the &alp;?</title>
  <para>
   The &alp; (&alpshort;) consists of the following components:
  </para>
  <variablelist>
   <varlistentry>
    <term>Base operating system</term>
    <listitem>
     <para>
      The core of &alpshort; which runs all required services. It is an immutable operating system
      with a read-only root file system. The file system is modified by transactional updates which
      utilize the snapshotting feature of BTRFS.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>&tr-up;</term>
    <listitem>
     <para>
      The &tr-up; command performs changes on the file system. You can use it to install software,
      update existing workloads, or apply software patches. Because it uses file system snapshots,
      applied changes can be easily rolled back.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Container orchestration</term>
    <listitem>
     <para>
      &alpshort; runs containerized workloads instead of applications packed in software packages.
      The orchestrator&mdash;for example, &podman;&mdash;creates and manages these containers.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>&cockpit;</term>
    <listitem>
     <para>
      A Web-based graphical interface to administer single or multiple &alpshort; workloads from one
      place. It helps you manage, for example, user accounts, network settings, or container
      orchestration.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </section>
 <section xml:id="benefits-alp">
  <title>Benefits of the &alp;</title>
  <para>
   The &alp; offers the following customer benefits:
  </para>
  <itemizedlist>
   <listitem>
    <para>
     High security of running workloads.
    </para>
   </listitem>
   <listitem>
    <para>
     Minimal maintenance with keeping the workloads up to date.
    </para>
   </listitem>
   <listitem>
    <para>
     Stable immutable base operating system that utilizes transactions when modifying the file
     system.
    </para>
   </listitem>
   <listitem>
    <para>
     Ability to roll back modifications on the file system in case the transaction result is
     undesirable.
    </para>
   </listitem>
  </itemizedlist>
 </section>
 <section xml:id="related-alp">
  <title>Related topics</title>
  <itemizedlist>
   <listitem>
    <para>
     Deploying ALP on a &vmhost;.
    </para>
   </listitem>
   <listitem>
    <para>
     Enabling &cockpit;.
    </para>
   </listitem>
   <listitem>
    <para>
     SLE Micro documentation.
    </para>
   </listitem>
   <listitem>
    <para>
     Container Guide.
    </para>
   </listitem>
  </itemizedlist>
 </section>
</article>

<!-- 2022-09-07, Tomáš Bažant, ALP prototype documentation skeleton

* Concept: ALP ✔
* Concept: ALP deployment
* Task: Deploying ALP on a VM host ✔
* Task: Deploying ALP on a bare metal host
* Task: Firstboot configuration (Ignition/Combustion)
* Task: Enabling Cockpit ✔
* Task: Installing and running workloads on the command line
* Task: Installing and running workloads by using Cockpit
* Reference: List of available workloads (YaST, gdm, grafana...)
* Reference: Usage of the transactional-update command

-->
