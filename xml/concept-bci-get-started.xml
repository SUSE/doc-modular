<?xml version="1.0" encoding="UTF-8"?>
<!-- This file originates from the project https://github.com/openSUSE/doc-kit -->
<!-- This file can be edited downstream. -->
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook51-profile.xsl"
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE article
[
  <!ENTITY % entities SYSTEM "generic-entities.ent">
    %entities;
]>
<article xml:id="concept-bci-get-started" xml:lang="en"
 role="concept"
 xmlns="http://docbook.org/ns/docbook" version="5.1"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink">
 <info>
  <title>Getting started with &bci;s</title>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker>
    <dm:url>https://bugzilla.suse.com/enter_bug.cgi</dm:url>
    <dm:component>Smart Docs</dm:component>
    <dm:product>Documentation</dm:product>
    <dm:assignee>dpopov@suse.com</dm:assignee>
   </dm:bugtracker>
   <dm:translation>no</dm:translation>
  </dm:docmanager>
 </info>
 <section xml:id="environment-bci-variants">
  <title>Environment</title>
  <para>
   This document applies to the following products and product versions:
  </para>
  <itemizedlist>
   <listitem>
    <para>
     &sles;&nbsp;15&nbsp;SP4
    </para>
   </listitem>
  </itemizedlist>
 </section>
 <section xml:id="decision-card-bci">
  <title>Decision card</title>
  <variablelist>
   <varlistentry>
    <term>WHAT</term>
    <listitem>
     <para>
      &bci;s specifics you should know about
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>WHY</term>
    <listitem>
     <para>
      Because you want to understand what makes &bci;s special
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>WHERE</term>
    <listitem>
     <para>
      <link xlink:href="https://registry.suse.com/">registry.suse.com</link>
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>EFFORT</term>
    <listitem>
     <para>
      It only takes 15 minutes of reading time
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>GOAL</term>
    <listitem>
     <para>
      Understand &bci;s specific features and capabilities
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </section>
 <section xml:id="bci-understanding-intro">
  <title>Introduction</title>
  <para>
   If you have a working knowledge of containers, you will not have any difficulties using &bci;s. However, there are certain features that set &bci;s apart from similar offerings, like images based on Debian or Alpine Linux. And understanding the specifics can help you get the most out of &bci;s in the shortest time possible.
  </para>
 </section>
 <section xml:id="environment-bci-language-stack">
  <title>Language stack &bcia;s</title>
  <para>
   Language stack &bcia;s are built on top of BCI-Base. Below is an overview of the available language stack &bcia;s.
   </para>
    <variablelist>
   <varlistentry>
    <term>python</term>
    <listitem>
     <itemizedlist>
      <listitem>
       <para>
        URL:
        <link xlink:href="registry.suse.com/bci/python">registry.suse.com/bci/python</link>
       </para>
      </listitem>
      <listitem>
       <para>
        Tags: 3.6, 3.9, 3.10
       </para>
      </listitem>
      <listitem>
       <para>
        Ships with the <package>python3</package> version
        from the tag and <package>pip3</package>, <package>curl</package>, <package>git</package> tools. 
       </para>
      </listitem>
     </itemizedlist>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>node</term>
    <listitem>
     <itemizedlist>
      <listitem>
       <para>
        URL:
        <link xlink:href="registry.suse.com/bci/node">registry.suse.com/bci/node</link>
       </para>
      </listitem>
      <listitem>
       <para>
        Tags: 12, 14, 16
       </para>
      </listitem>
      <listitem>
       <para>
        Comes with <package>nodejs</package> version from the tag,
        <package>npm</package> and <package>git</package>. The
        <package>yarn</package> package manager can be installed with the
        <command>npm install -g yarn</command> command.
       </para>
      </listitem>
     </itemizedlist>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>openjdk</term>
    <listitem>
     <itemizedlist>
      <listitem>
       <para>
        URL:
        <link xlink:href="registry.suse.com/bci/openjdk">registry.suse.com/bci/openjdk</link>
       </para>
      </listitem>
      <listitem>
       <para>
        Tags: 11, 17
       </para>
      </listitem>
      <listitem>
       <para>
        Ships with the OpenJDK runtime. Designed for deploying Java
        applications.
       </para>
      </listitem>
     </itemizedlist>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>openjdk-devel</term>
    <listitem>
     <itemizedlist>
      <listitem>
       <para>
        URL:
        <link xlink:href="registry.suse.com/bci/openjdk-devel">registry.suse.com/bci/openjdk-devel</link>
       </para>
      </listitem>
      <listitem>
       <para>
        Tags: 11, 17
       </para>
      </listitem>
      <listitem>
       <para>
        Includes the development part of OpenJDK in addition to the OpenJDK
        runtime. Instead of Bash, the default entry point is the
        <systemitem>jshell</systemitem> shell.
       </para>
      </listitem>
     </itemizedlist>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>ruby</term>
    <listitem>
     <itemizedlist>
      <listitem>
       <para>
        URL:
        <link xlink:href="registry.suse.com/bci/ruby">registry.suse.com/bci/ruby</link>
       </para>
      </listitem>
      <listitem>
       <para>
        Tags: 2.5
       </para>
      </listitem>
      <listitem>
       <para>
        A standard development environment based on Ruby 2.5, featuring
        <package>ruby</package>, <package>gem</package> and
        <package>bundler</package> as well as <package>git</package> and
        <package>curl</package>.
       </para>
      </listitem>
     </itemizedlist>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>golang</term>
    <listitem>
     <itemizedlist>
      <listitem>
       <para>
        URL:
        <link xlink:href="registry.suse.com/bci/golang">registry.suse.com/bci/golang</link>
       </para>
      </listitem>
      <listitem>
       <para>
        Tags: 1.16, 1.17, 1.18
       </para>
      </listitem>
      <listitem>
       <para>
        Ships with the <package>go</package> compiler version specified in the
        tag.
       </para>
      </listitem>
     </itemizedlist>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>dotnet-runtime</term>
    <listitem>
     <itemizedlist>
      <listitem>
       <para>
        URL:
        <link xlink:href="registry.suse.com/bci/dotnet-runtime">registry.suse.com/bci/dotnet-runtime</link>
       </para>
      </listitem>
      <listitem>
       <para>
        Tags: 3.1, 5.0, 6.0
       </para>
      </listitem>
      <listitem>
       <para>
        Includes the .NET runtime from Microsoft and the Microsoft .NET
        repository.
       </para>
      </listitem>
     </itemizedlist>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>dotnet-aspnet</term>
    <listitem>
     <itemizedlist>
      <listitem>
       <para>
        URL:
        <link xlink:href="registry.suse.com/bci/dotnet-aspnet">registry.suse.com/bci/dotnet-aspnet</link>
       </para>
      </listitem>
      <listitem>
       <para>
        Tags: 3.1, 5.0, 6.0
       </para>
      </listitem>
      <listitem>
       <para>
        Ships with the ASP.NET runtime from Microsoft and the Microsoft .NET
        repository.
       </para>
      </listitem>
     </itemizedlist>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>dotnet-sdk</term>
    <listitem>
     <itemizedlist>
      <listitem>
       <para>
        URL:
        <link xlink:href="registry.suse.com/suse/dotnet-sdk">registry.suse.com/suse/dotnet-sdk</link>
       </para>
      </listitem>
      <listitem>
       <para>
        Tags: 3.1, 5.0, 6.0
       </para>
      </listitem>
      <listitem>
       <para>
        Comes with the .NET and ASP.NET SDK from Microsoft as well as the
        Microsoft .NET repository.
       </para>
      </listitem>
     </itemizedlist>
    </listitem>
   </varlistentry>
      <varlistentry>
    <term>rust</term>
    <listitem>
     <itemizedlist>
      <listitem>
       <para>
        URL:
        <link xlink:href="registry.suse.com/bci/rust">registry.suse.com/bci/rust</link>
       </para>
      </listitem>
      <listitem>
       <para>
        Tags: 1.56, 1.57, 1.58, 1.59
       </para>
      </listitem>
      <listitem>
       <para>
        Ships with the Rust compiler and the <package>cargo</package> package manager.
       </para>
      </listitem>
     </itemizedlist>
    </listitem>
   </varlistentry>
  </variablelist>
 </section>
 <section xml:id="bci-package-manager">
  <title>Package manager</title>
  <para>
  The default package manager in &sle; is Zypper. Similar to APT in Debian and APK in Alpine Linux, Zypper offers a command-line interface for all package management tasks. Below is a brief overview of commonly used container-related Zypper commands.
  </para>
  <variablelist>
   <varlistentry>
    <term>Install packages</term>
    <listitem>
     <para>
      <command>zypper --non-interactive install <replaceable>PACKAGE_NAME</replaceable></command>
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Add a repository</term>
    <listitem>
     <para>
      <command>zypper --non-interactive addrepo <replaceable>REPOSITORY_URL</replaceable>;</command>
      <command>zypper --non-interactive refresh</command>
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Update all packages</term>
    <listitem>
     <para>
      <command>zypper --non-interactive update</command>
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Remove a package</term>
    <listitem>
     <para>
      <command>zypper --non-interactive remove --clean-deps <replaceable>PACKAGE_NAME</replaceable></command> (the <option>--clean-deps</option> flag ensures that no longer required dependencies are removed as well)
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Clean up temporary files</term>
    <listitem>
     <para>
      <command>zypper clean</command>
     </para>
    </listitem>
   </varlistentry>
   </variablelist>
   <para>
   For more information on using Zypper, refer to <link xlink:href="https://documentation.suse.com/sles-15/html/SLES-all/cha-sw-cl.html#sec-zypper"/>.
   </para>
   <para>
   All the described commands use the <option>--non-interactive</option> flag to skip confirmations, since you cannot approve these manually during container builds. Keep in mind that you must use the flag with any command that modifies the system. Also note that <option>--non-interactive</option> is not a "yes to all" flag. Instead, <option>--non-interactive</option> confirms what is considered to be the intention of the user. For example, an installation command with the <option>--non-interactive</option> option fails if it needs to import new repository signing keys, as that is something that the user should verify themselves.
   </para>
 </section>
 <section xml:id="bci-task-examples">
  <title>Common patterns</title>
  <para>
  Here are a few examples that can give you an idea of how to accomplish certain tasks in &bcia; compared to Debian.
  </para>
  <variablelist>
   <varlistentry>
    <term>Remove orphaned packages</term>
    <listitem>
     <itemizedlist>
      <listitem>
       <para>
        Debian: <command>apt-get autoremove -y</command>
       </para>
      </listitem>
      <listitem>
       <para>
        &bcia;: Not required as long as you remove installed packages using the  <command>zypper --non-interactive remove --clean-deps <replaceable>PACKAGE_NAME</replaceable></command>
       </para>
      </listitem>
      </itemizedlist>
      </listitem>
      </varlistentry>
      <varlistentry>
    <term>Obtain container's architecture</term>
    <listitem>
     <itemizedlist>
      <listitem>
       <para>
        Debian: <command>dpkgArch="$(dpkg --print-architecture | awk -F- '{ print $NF }')"</command>
       </para>
      </listitem>
      <listitem>
       <para>
        &bcia;: <command>arch="$(uname -p|sed 's/x86_64/amd64/')"</command>
       </para>
      </listitem>
      </itemizedlist>
      </listitem>
      </varlistentry>
      <varlistentry>
    <term>Install packages required for compilation</term>
    <listitem>
     <itemizedlist>
      <listitem>
       <para>
        Debian: <command>apt-get install -y build-essential</command>
       </para>
      </listitem>
      <listitem>
       <para>
        &bcia;: <command>zypper -n in gcc gcc-c++ make</command>
       </para>
      </listitem>
      </itemizedlist>
      </listitem>
      </varlistentry>
      <varlistentry>
    <term>Verify GnuPG signatures</term>
    <listitem>
     <itemizedlist>
      <listitem>
       <para>
        Debian: <command>gpg --batch --verify <replaceable>SIGNATURE_URL</replaceable> <replaceable>FILE_TO_VERIFY</replaceable></command>
       </para>
      </listitem>
      <listitem>
       <para>
        &bcia;: <command>zypper -n in dirmngr; gpg --batch --verify <replaceable>SIGNATURE_URL</replaceable> <replaceable>FILE_TO_VERIFY</replaceable>; zypper -n remove --clean-deps dirmngr; zypper -n clean</command>
       </para>
      </listitem>
      </itemizedlist>
      </listitem>
      </varlistentry>
      </variablelist>
  </section>
 <section xml:id="bci-package-naming">
  <title>Package naming conventions</title>
  <para>
   &sle; package naming conventions differ from Debian, Ubuntu, and Alpine, and they are closer to those of &rhel;. The main difference is that development packages of libraries (that is, packages containing headers and build description files) are named <package><replaceable>PACKAGE</replaceable>-devel</package> in &sle;, as opposed to <package><replaceable>PACKAGE</replaceable>-dev</package> as they are in Debian and Ubuntu. When in doubt, search for the package directly using the following command: <command>docker run --rm registry.suse.com/bci/bci-base:<replaceable>OS_VERSION</replaceable> zypper search <replaceable>PACKAGE_NAME</replaceable></command> (replace <replaceable>OS_VERSION</replaceable> with the appropriate service version number, for example: <literal>15.3</literal> or <literal>15.4</literal>).
   </para>
  <para>
  </para>
 </section>
 <section xml:id="bci-gpg-keys">
  <title>Adding GPG signing keys</title>
  <para>
   Adding external repositories to a container or container image normally requires importing the GPG key used for signing the packages. This can be done with the <command>rpm --import <replaceable>KEY_URL</replaceable></command> command. This adds the key to the RPM database, and all packages from the repository can be installed afterwards.
  </para>
  </section>
</article>
