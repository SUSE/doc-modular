<?xml version="1.0" encoding="UTF-8"?>
<!-- This file originates from the project https://github.com/openSUSE/doc-kit -->
<!-- This file can be edited downstream. -->
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook51-profile.xsl"
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE article
[
  <!ENTITY % entities SYSTEM "generic-entities.ent">
    %entities;
]>
<!--filename:
* use hyphens as separators
* use topic type as prefix (task|concept|reference)
* content must be obvious from filename-->
<!--Root ID
* use topic type as prefix (task|concept|reference)
* use nouns
e.g. concept-fencing-->
<!--IDs
* must not reflect structure-->
<!--metadata
* product foo
* product version xyz
* topic category/ies
* target group(s)
* initially published
* last modified-->
<article xml:id="concept-bci" xml:lang="en"
 role="concept"
 xmlns="http://docbook.org/ns/docbook" version="5.1"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink">
 <info>
  <title>Introduction to &slsa; &bci;</title>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker>
    <dm:url>https://bugzilla.suse.com/enter_bug.cgi</dm:url>
    <dm:component>Smart Docs</dm:component>
    <dm:product>Documentation</dm:product>
    <dm:assignee>assignee@suse.com</dm:assignee>
   </dm:bugtracker>
   <dm:translation>no</dm:translation>
  </dm:docmanager>
 </info>
 <section xml:id="environment-bci">
  <!--to create unique section IDs, amend the TOPIC-ID (without prefix)-->
  <!--example: environment-time-synchronization-ntp-->
  <title>Environment</title>
  <para>
   This document applies to the following products and product versions:
  </para>
  <itemizedlist>
   <listitem>
    <para>
     &sles;&nbsp;15&nbsp;SP4
    </para>
   </listitem>
  </itemizedlist>
 </section>
 <section xml:id="decision-card-bci">
  <title>Decision card</title>
  <variablelist>
   <varlistentry>
    <term>WHAT</term>
    <listitem>
     <para>
      A set of container images based on &sls; 15
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>WHY</term>
    <listitem>
     <para>
      Because you need containers to develop and deploy applications
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>WHERE</term>
    <listitem>
     <para>
      <link xlink:href="https://registry.suse.com/">registry.suse.com</link>
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>EFFORT</term>
    <listitem>
     <para>
      It only takes 10 minutes of reading time
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>GOAL</term>
    <listitem>
     <para>
      Learn what &bci; are and what you can use them for
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </section>
 <section xml:id="what-is-bci">
  <!--to create unique section IDs, amend the TOPIC-ID (without prefix)-->
  <!--example: how-it-works-ntp-time-synchronization-->
  <title>What are &bci;?</title>
  <para>
   &bci; (&bcia;) are minimal &sls; 15-based images that you can use to
   develop, deploy, and share applications. There are two types of &bcia;:
  </para>
  <itemizedlist>
   <listitem>
    <para>
     General-purpose &bcia; can be used for building custom container images
     and for deploying applications.
    </para>
   </listitem>
   <listitem>
    <para>
     Language stack &bcia; provide minimal environments for developing and
     deploying applications in specific programming languages.
    </para>
   </listitem>
  </itemizedlist>
  <para>
   In addition to that, we will provide Application Container Images based on
   &bcia; featuring popular containerized applications like Nginx, PostgreSQL,
   MariaDB and <link xlink:href="https://github.com/SUSE/rmt">RMT</link>.
  </para>
 </section>
 <section xml:id="highlihts-bci">
  <!--to create unique section IDs, amend the TOPIC-ID (without prefix)-->
  <!--example: benefits-ntp-time-synchronization-->
  <title>Highlights</title>
  <itemizedlist>
   <listitem>
    <para>
     &bcia; are fully compatible with &sls;, but <emphasis>they do not require
     a subscription to run and distribute them.</emphasis>
    </para>
   </listitem>
   <listitem>
    <para>
     &bcia; automatically run in FIPS-compatible mode when the host operating
     system is running in FIPS mode.
    </para>
   </listitem>
   <listitem>
    <para>
     Each &bcia; includes the RPM database, which makes it possible to audit
     the contents of the container image. You can use the RPM database to
     determine the specific version of the RPM package any given file belongs
     to. This allows you to ensure that a container image is not susceptible to
     known and already fixed vulnerabilities.
    </para>
   </listitem>
   <listitem>
    <para>
     All &bcia; (except for those without <systemitem>zypper</systemitem>) come
     with the <systemitem>container-suseconnect</systemitem> service. This
     gives containers that run on a registered &slsa; host access to the full
     &slsa; repositories. <systemitem>container-suseconnect</systemitem> is
     invoked automatically when you run <systemitem>zypper</systemitem> for the
     first time, and the service adds the correct &slsa; repositories into the
     running container. On an unregistered &slsa; host or on a non-&slsa; host,
     the service does nothing.
    </para>
   </listitem>
  </itemizedlist>
 </section>
 <section xml:id="general-purpose-bci">
  <title>General-purpose &bcia;</title>
  <para>
   There are three general purpose &bcia;, and each container image comes with
   a minimum set of packages to keep its size low. You can use a general
   purpose &bcia; either as a starting point for building custom container
   images, or as a platform for deploying specific software.
  </para>
  <variablelist>
   <title>General-purpose &bcia;</title>
   <varlistentry>
    <term>bci-base</term>
    <listitem>
     <itemizedlist>
      <listitem>
       <para>
        <link xlink:href="registry.suse.com/bci/bci-base:15.3">registry.suse.com/bci/bci-base:15.3</link>
       </para>
      </listitem>
      <listitem>
       <para>
        The general purpose base container image. It comes with
        <systemitem>zypper</systemitem> and the free
        <systemitem>SLE_BCI</systemitem> repository preinstalled. It can be
        extended by installing additional packages, and it can be used for
        running workloads intended for &slsa; in containerized environments.
       </para>
      </listitem>
     </itemizedlist>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>bci-minimal</term>
    <listitem>
     <itemizedlist>
      <listitem>
       <para>
        <link xlink:href="registry.suse.com/bci/bci-minimal:15.3">registry.suse.com/bci/bci-minimal:15.3</link>
       </para>
      </listitem>
      <listitem>
       <para>
        A slimmer version of the <literal>bci-base</literal> container image
        with <systemitem>rpm</systemitem> but without the full
        <systemitem>zypper</systemitem> stack. This container image is suitable
        for deployment of a single application that is available as a RPM
        package.
       </para>
      </listitem>
     </itemizedlist>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>bci-micro</term>
    <listitem>
     <itemizedlist>
      <listitem>
       <para>
        <link xlink:href="registry.suse.com/bci/bci-micro:15.3">registry.suse.com/bci/bci-micro:15.3</link>
       </para>
      </listitem>
      <listitem>
       <para>
        An even slimmer version of the <literal>bci-base</literal> container
        image without <systemitem>rpm</systemitem> and
        <systemitem>zypper</systemitem>. This container can act as a deployment
        target for static binaries or other pre-built artifacts.
       </para>
      </listitem>
     </itemizedlist>
    </listitem>
   </varlistentry>
  </variablelist>
 </section>
 <section xml:id="language-stack-bci">
  <title>Language stack &bcia;</title>
  <para>
   Language stack &bcia; are built on top of the BCI-Base
   general-purpose &bcia;. Each container image comes with the
   <systemitem>zypper</systemitem> stack and the free
   <literal>SLE_BCI</literal> repository. Additionally, each image includes
   most common tools for building and deploying applications in the specific
   language environment. This includes tools like a compiler or interpreter as
   well as the language specific package manager.
  </para>
  <variablelist>
   <varlistentry>
    <term>python</term>
    <listitem>
     <itemizedlist>
      <listitem>
       <para>
        URL:
        <link xlink:href="registry.suse.com/bci/python">registry.suse.com/bci/python</link>
       </para>
      </listitem>
      <listitem>
       <para>
        Tags: 3.6, 3.9, 3.10
       </para>
      </listitem>
      <listitem>
       <para>
        Ships with the <package>python3</package> version
        from the tag and <package>pip3</package>, <package>curl</package>, <package>git</package> tools. 
       </para>
      </listitem>
     </itemizedlist>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>node</term>
    <listitem>
     <itemizedlist>
      <listitem>
       <para>
        URL:
        <link xlink:href="registry.suse.com/bci/node">registry.suse.com/bci/node</link>
       </para>
      </listitem>
      <listitem>
       <para>
        Tags: 12, 14, 16
       </para>
      </listitem>
      <listitem>
       <para>
        Comes with <package>nodejs</package> version from the tag,
        <package>npm</package> and <package>git</package>. The
        <package>yarm</package> package manager can be installed with the
        <command>npm install -g yarn</command> command.
       </para>
      </listitem>
     </itemizedlist>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>openjdk</term>
    <listitem>
     <itemizedlist>
      <listitem>
       <para>
        URL:
        <link xlink:href="registry.suse.com/bci/openjdk">registry.suse.com/bci/openjdk</link>
       </para>
      </listitem>
      <listitem>
       <para>
        Tags: 11
       </para>
      </listitem>
      <listitem>
       <para>
        Ships with the OpenJDK runtime. Designed for deploying Java
        applications.
       </para>
      </listitem>
     </itemizedlist>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>openjdk-devel</term>
    <listitem>
     <itemizedlist>
      <listitem>
       <para>
        URL:
        <link xlink:href="registry.suse.com/bci/openjdk-devel">registry.suse.com/bci/openjdk-devel</link>
       </para>
      </listitem>
      <listitem>
       <para>
        Tags: 11
       </para>
      </listitem>
      <listitem>
       <para>
        Includes the development part of OpenJDK in addition to the OpenJDK
        runtime. Instead of Bash, the default entry point is the
        <systemitem>jshell</systemitem> shell.
       </para>
      </listitem>
     </itemizedlist>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>ruby</term>
    <listitem>
     <itemizedlist>
      <listitem>
       <para>
        URL:
        <link xlink:href="registry.suse.com/bci/ruby">registry.suse.com/bci/ruby</link>
       </para>
      </listitem>
      <listitem>
       <para>
        Tags: 2.5
       </para>
      </listitem>
      <listitem>
       <para>
        A standard development environment based on Ruby 2.5, featuring
        <package>ruby</package>, <package>gem</package> and
        <package>bundler</package> as well as <package>git</package> and
        <package>curl</package>.
       </para>
      </listitem>
     </itemizedlist>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>golang</term>
    <listitem>
     <itemizedlist>
      <listitem>
       <para>
        URL:
        <link xlink:href="registry.suse.com/bci/golang">registry.suse.com/bci/golang</link>
       </para>
      </listitem>
      <listitem>
       <para>
        Tags: 1.16, 1.17
       </para>
      </listitem>
      <listitem>
       <para>
        Ships with the <package>go</package> compiler version specified in the
        tag.
       </para>
      </listitem>
     </itemizedlist>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>dotnet-runtime</term>
    <listitem>
     <itemizedlist>
      <listitem>
       <para>
        URL:
        <link xlink:href="registry.suse.com/suse/dotnet-runtime">registry.suse.com/suse/dotnet-runtime</link>
       </para>
      </listitem>
      <listitem>
       <para>
        Tags: 3.1, 5.0, 6.0
       </para>
      </listitem>
      <listitem>
       <para>
        Includes the .NET runtime from Microsoft and the Microsoft .NET
        repository.
       </para>
      </listitem>
     </itemizedlist>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>dotnet-aspnet</term>
    <listitem>
     <itemizedlist>
      <listitem>
       <para>
        URL:
        <link xlink:href="registry.suse.com/suse/dotnet-aspnet">registry.suse.com/suse/dotnet-aspnet</link>
       </para>
      </listitem>
      <listitem>
       <para>
        Tags: 3.1, 5.0, 6.0
       </para>
      </listitem>
      <listitem>
       <para>
        Ships with the ASP.NET runtime from Microsoft and the Microsoft .NET
        repository.
       </para>
      </listitem>
     </itemizedlist>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>dotnet-sdk</term>
    <listitem>
     <itemizedlist>
      <listitem>
       <para>
        URL:
        <link xlink:href="registry.suse.com/suse/dotnet-sdk">registry.suse.com/suse/dotnet-sdk</link>
       </para>
      </listitem>
      <listitem>
       <para>
        Tags: 3.1, 5.0, 6.0
       </para>
      </listitem>
      <listitem>
       <para>
        Comes with the .NET and ASP.NET SDK from Microsoft as well as the
        Microsoft .NET repository.
       </para>
      </listitem>
     </itemizedlist>
    </listitem>
   </varlistentry>
  </variablelist>
 </section>
 <section xml:id="status-lifecycle-bci">
  <title>Important note on status and lifecycle</title>
  <para>
   All container images, except for base, are currently classified as tech
   preview, and SUSE doesn't provide official support for them. This
   information is visible on the web on
   <link xlink:href="https://registry.suse.com">registry.suse.com</link>. In
   addition to that, it is also indicated via the
   <literal>com.suse.techpreview</literal> label whether a container image
   still has the tech preview status. You can use the skopeo and jq utilities
   to check the status of the desired &bcia; as follows:
  </para>
<screen>skopeo inspect docker://registry.suse.com/bci/bci-micro:15.3 | jq '.Labels["com.suse.techpreview"]'
skopeo inspect docker://registry.suse.com/bci/bci-base:15.3 | jq '.Labels["com.suse.techpreview"]'
null</screen>
  <para>
   In the example above, the <literal>com.suse.techpreview</literal> label is
   set to 1 in the <literal>bci-micro</literal> container image, indicating
   that the image still has the tech preview status. Unlike like the general
   purpose &bcia;, the language stack &bcia; may not follow the lifecycle of
   the &slea; distribution: they are supported as long as the respective
   language stack receives support. In other words, new versions of &bcia;
   (indicated by the OCI tags) may be released during the lifecycle of a &slea;
   Service Pack, while older versions may become unsupported. Refer to
   <link xlink:href="https://suse.com/lifecycle">suse.com/lifecycle</link> to
   find out whether the container in question is still under support.
  </para>
 </section>
 <section xml:id="getting-started-bci">
  <title>Getting started</title>
  <para>
   The &bcia; are available as OCI-compatible container images directly from
   <link xlink:href="https://registry.suse.com">registry.suse.com</link> and
   can be used like any other container image. For example, using one of the
   general purpose containers:
  </para>
<screen>&prompt.user;podman run --rm -it registry.suse.com/bci/bci-base:15.3 grep '^NAME' /etc/os-release
NAME="SLES"</screen>
  <para>
   Alternatively, you can use &bcia; in Dockerfile as follows:
  </para>
<screen>FROM registry.suse.com/bci/bci-base:15.3
RUN zypper -n in python3 &amp;&amp; \
    echo "Hello Green World!" > index.html
ENTRYPOINT ["/usr/bin/python3", "-m", "http.server"]
EXPOSE 8000</screen>
  <para>
   You can then build container images using the <command>docker build
   .</command> or <command>buildah bud .</command> commands:
  </para>
<screen>&prompt.user;docker build .
Sending build context to Docker daemon  2.048kB
Step 1/4 : FROM registry.suse.com/bci/bci-base:15.3
 ---> e34487b4c4e1
Step 2/4 : RUN zypper -n in python3 &amp;&amp;     echo "Hello Green World!" > index.html
 ---> Using cache
 ---> 9b527dfa45e8
Step 3/4 : ENTRYPOINT ["/usr/bin/python3", "-m", "http.server"]
 ---> Using cache
 ---> 953080e91e1e
Step 4/4 : EXPOSE 8000
 ---> Using cache
 ---> 48b33ec590a6
Successfully built 48b33ec590a6
 
&prompt.user;docker run -p 8000:8000 --rm -d 48b33ec590a6
575ad7edf43e11c2c9474055f7f6b7a221078739fc8ce5765b0e34a0c899b46a
 
&prompt.user;curl localhost:8000
Hello Green World!</screen>
 </section>
</article>
