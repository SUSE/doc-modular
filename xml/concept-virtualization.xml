<?xml version="1.0" encoding="UTF-8"?>
<!-- This file originates from the project https://github.com/openSUSE/doc-kit -->
<!-- This file can be edited downstream. -->
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook51-profile.xsl"
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE article
[
  <!ENTITY % entities SYSTEM "generic-entities.ent">
    %entities;
]>
<article xml:id="concept-virtualization" xml:lang="en"
 role="concept"
 xmlns="http://docbook.org/ns/docbook" version="5.1"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink">
 <info>
  <title>Virtualization: Basic concept</title>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker>
    <dm:url>https://bugzilla.suse.com/enter_bug.cgi</dm:url>
    <dm:component>Smart Docs</dm:component>
    <dm:product>Documentation</dm:product>
    <dm:assignee>tbazant@suse.com</dm:assignee>
   </dm:bugtracker>
   <dm:translation>no</dm:translation>
  </dm:docmanager>
 </info>
 <section xml:id="environment-virtualization">
  <title>Environment</title>
  <para>
   This document applies to the following products and product versions:
  </para>
  <itemizedlist>
   <listitem>
    <para>
     &sles;&nbsp;15&nbsp;SP3, 15&nbsp;SP2, 15&nbsp;SP1, 15&nbsp;GA,
     12&nbsp;SP5, 12&nbsp;SP4, 12&nbsp;SP3
    </para>
   </listitem>
  </itemizedlist>
 </section>
<!-- replaces https://susedoc.github.io/doc-sle/main/html/SLES-virtualization/chap-virtualization-introduction.html -->
 <section xml:id="what-is-virtualization">
  <title>What is virtualization?</title>
  <para>
   Virtualization is a technology that provides a way for a machine (&vmhost;)
   to run another operating system (&vmguest;) on top of the host operating
   system.
  </para>
 </section>
 <section xml:id="how-it-works-virtualization">
  <title>How does virtualization work?</title>
  <para>
   The primary component of &vmhost; that enables virtualization is a
   <emphasis>hypervisor</emphasis>. Hypervisor is a layer of software that runs
   directly on &vmhost;'s hardware. It controls platform resources, sharing
   them among multiple &vmguest;s and their operating systems by presenting
   virtualized hardware interfaces to each &vmguest;. &productname; offers two
   types of hypervisors: &kvm; and &xen;.
  </para>
  <figure xml:id="virtualization-schema">
   <title>A general schema of virtualization</title>
   <mediaobject>
    <imageobject role="html">
     <imagedata fileref="virtualization-schema.png"/>
    </imageobject>
    <imageobject role="fo">
     <imagedata fileref="virtualization-schema.png" width="85%"/>
    </imageobject>
   </mediaobject>
  </figure>
  <section xml:id="virtualization-modes">
<!-- replaces https://susedoc.github.io/doc-sle/main/html/SLES-virtualization/chap-virtualization-introduction.html#sec-virtualization-introduction-fvpv -->
   <title>Virtualization modes</title>
   <para>
    There are two basic modes of hosting &vmguest;s on virtual
    machines&mdash;full virtualization mode or paravirtual mode.
   </para>
   <variablelist>
    <varlistentry xml:id="virtualization-mode-full">
     <term>Full virtualization (FV)</term>
     <listitem>
      <para>
       FV lets virtual machines run unmodified operating systems, for example,
       Windows* Server 2003. It uses either Binary Translation or
       hardware-assisted virtualization technology, such as AMD* Virtualization
       or Intel* Virtualization Technology, to improve performance on processors
       that support it. In FV mode, &vmguest; is also called <emphasis>Hardware
       Virtual Machine</emphasis> (HVM).
      </para>
      <tip>
       <para>
        Some guest operating systems hosted in full virtualization mode can be
        configured to use drivers from the SUSE Virtual Machine Drivers Pack
        (VMDP) instead of drivers included in the operating system. Running
        virtual machine drivers improves performance on guest
        operating systems, such as Windows Server 2003.
       </para>
      </tip>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Paravirtualization (PV)</term>
     <listitem>
      <para>
       PV usually requires that guest operating systems are modified for the
       virtualization environment. &vmguest;s running in paravirtual mode have
       better performance than those running under full virtualization.
       Operating systems currently modified to run in paravirtual mode are
       called <emphasis>paravirtualized</emphasis> operating systems and
       include &sls;.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>PV on HVM (PVHVM)</term>
     <listitem>
      <para>
       PVHVM enhances HVM (see <xref linkend="virtualization-mode-full"/>) with
       paravirtualized drivers, and paravirtualized interrupt and timer
       handling.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </section>
  <section xml:id="virtualization-scenarios">
<!-- replaces https://susedoc.github.io/doc-sle/main/html/SLES-virtualization/cha-virtualization-scenarios.html -->
   <title>Virtualization scenarios</title>
   <para>
    Virtualization can provide the following capabilities to your
    organization:
   </para>
   <variablelist>
    <varlistentry>
     <term>Server consolidation</term>
     <listitem>
      <para>
       Many servers can be replaced by one physical server, so that
       hardware is consolidated, and guest operating systems are converted to
       virtual machines. This also supports running legacy software on new
       hardware.
      </para>
      <itemizedlist>
       <listitem>
        <para>
         Better usage of resources that were not running at 100%.
        </para>
       </listitem>
       <listitem>
        <para>
         Fewer server locations needed.
        </para>
       </listitem>
       <listitem>
        <para>
         More efficient use of computer resources with multiple workloads on the
         same server.
        </para>
       </listitem>
       <listitem>
        <para>
         Simplification of data center infrastructure.
        </para>
       </listitem>
       <listitem>
        <para>
         Simplifies moving workloads to other hosts, avoiding service downtime.
        </para>
       </listitem>
       <listitem>
        <para>
         Faster and more agile virtual machine provisioning.
        </para>
       </listitem>
       <listitem>
        <para>
         Multiple guest operating systems can run on a single host.
        </para>
       </listitem>
      </itemizedlist>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Isolation</term>
     <listitem>
      <para>
       Guest operating systems are fully isolated from the host running them.
       Therefore, if there are problems inside virtual machines, the host is
       not harmed. Also, problems inside one VM do not affect other VMs. No
       data is shared between VMs.
      </para>
      <itemizedlist>
       <listitem>
        <para>
         Secure Boot can be used for VMs.
        </para>
       </listitem>
       <listitem>
        <para>
         KSM should be avoided.
        </para>
       </listitem>
       <listitem>
        <para>
         Individual CPU cores can be assigned to VMs.
        </para>
       </listitem>
       <listitem>
        <para>
         Hyper-threading (HT) should be disabled to avoid potential security
         issues.
        </para>
       </listitem>
       <listitem>
        <para>
         VMs should not share networks, storage, or network hardware.
        </para>
       </listitem>
       <listitem>
        <para>
         Use of advanced hypervisor features such as PCI pass-through or NUMA
         will adversely affect VM migration capabilities.
        </para>
       </listitem>
       <listitem>
        <para>
         Use of paravirtualization and <literal>virtio</literal> drivers will
         generally improve VM performance and efficiency.
        </para>
       </listitem>
      </itemizedlist>
      <para>
       AMD provides some specific features regarding the security of
       virtualization.
<!-- link to the SEV doc? -->
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Disaster recovery</term>
     <listitem>
      <para>
       The hypervisor can make snapshots of VMs, enabling restoration to a
       known good state, or to any desired earlier state. Since virtualized
       operating systems are less dependent on hardware configuration than those running
       directly on bare metal, these snapshots can be restored onto different
       server hardware so long as it is running the same hypervisor.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>Dynamic load balancing</term>
     <listitem>
      <para>
       Live migration can be used to load-balance your services
       across your infrastructure, by moving VMs from busy hosts to those with
       spare capacity, on demand.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </section>
 </section>
 <section xml:id="benefits-virtualization">
  <title>Benefits of virtualization</title>
  <para>
   Virtualization brings a lot of advantages while providing the same service
   as a hardware server.
  </para>
  <para>
   Virtualization reduces the cost of your infrastructure. Servers are mainly
   used to provide a service to a customer. A virtualized operating system can
   provide the same service but with the following advantages:
  </para>
  <itemizedlist mark="bullet" spacing="normal">
   <listitem>
    <para>
     Less hardware: You can run several operating system on one host, so all
     hardware maintenance will be reduced.
    </para>
   </listitem>
   <listitem>
    <para>
     Less power/cooling: Less hardware means you do not need to invest more in
     electric power, backup power, and cooling if you need more service.
    </para>
   </listitem>
   <listitem>
    <para>
     Save space: Your data center space will be saved because you do not need
     more hardware servers (less servers than service running).
    </para>
   </listitem>
   <listitem>
    <para>
     Less management: Using a &vmguest; simplifies the administration of your
     infrastructure.
    </para>
   </listitem>
   <listitem>
    <para>
     Agility and productivity: Virtualization provides
     <emphasis>migration</emphasis> capabilities, <emphasis>live
     migration</emphasis> and <emphasis>snapshots</emphasis>. These features
     reduce downtime, and bring an easy way to move your service from one place
     to another without any service interruption.
    </para>
   </listitem>
  </itemizedlist>
 </section>
 <section xml:id="related-virtualization">
  <title>Related topics</title>
  <itemizedlist>
   <listitem>
    <para>
     Virtualization limits and support.
    </para>
   </listitem>
   <listitem>
    <para>
     Introduction to &kvm; virtualization.
    </para>
   </listitem>
   <listitem>
    <para>
     Introduction to &xen; virtualization.
    </para>
   </listitem>
   <listitem>
    <para>
     What is KSM.
    </para>
   </listitem>
   <listitem>
    <para>
     Virtual machine drivers.
    </para>
   </listitem>
   <listitem>
    <para>
     Hardware-assisted virtualization.
    </para>
   </listitem>
  </itemizedlist>
 </section>
</article>
