<?xml version="1.0" encoding="UTF-8"?>
<!-- This file originates from the project https://github.com/openSUSE/doc-kit -->
<!-- This file can be edited downstream. -->
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook51-profile.xsl"
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE article
[
  <!ENTITY % entities SYSTEM "generic-entities.ent">
    %entities;
]>
<article xml:id="concept-zypper" xml:lang="en"
 role="concept"
 xmlns="http://docbook.org/ns/docbook" version="5.1"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink">
 <info>
  <title>Zypper package manager</title>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker>
    <dm:url>https://bugzilla.suse.com/enter_bug.cgi</dm:url>
    <dm:component>Documentation</dm:component>
    <dm:product>PUBLIC SUSE Linux Enterprise Server 15 SP3</dm:product>
    <dm:assignee>dmitri.popov@suse.com</dm:assignee>
   </dm:bugtracker>
   <dm:translation>no</dm:translation>
  </dm:docmanager>
 </info>
 <section xml:id="environment-zypper">
  <title>Environment</title>
  <para>
   This document applies to the following products and product versions:
  </para>
  <itemizedlist>
   <listitem>
    <para>
     &sles;&nbsp;15&nbsp;SP3, 15&nbsp;SP2, 15&nbsp;SP1, 15&nbsp;GA,
     12&nbsp;SP5, 12&nbsp;SP4, 12&nbsp;SP3
    </para>
   </listitem>
   <listitem>
    <para>
     &sles4sap;&nbsp;15&nbsp;SP3, 15&nbsp;SP2, 15&nbsp;SP1, 15&nbsp;GA,
     12&nbsp;SP5, 12&nbsp;SP4, 12&nbsp;SP3
    </para>
   </listitem>
   <listitem>
    <para>
     &sleha;&nbsp;15&nbsp;SP3, 15&nbsp;SP2, 15&nbsp;SP1, 15&nbsp;GA,
     12&nbsp;SP5, 12&nbsp;SP4, 12&nbsp;SP3
    </para>
   </listitem>
   <listitem>
    <para>
     &slehpc;&nbsp;15&nbsp;SP3, 15&nbsp;SP2, 15&nbsp;SP1, 15&nbsp;GA
    </para>
   </listitem>
   <listitem>
    <para>
     &sled;&nbsp;15&nbsp;SP3, 15&nbsp;SP2, 15&nbsp;SP1, 15&nbsp;GA,
     12&nbsp;SP5, 12&nbsp;SP4, 12&nbsp;SP3
    </para>
   </listitem>
   <listitem>
    <para>
     &slert;&nbsp;15&nbsp;SP3, 15&nbsp;SP2, 15&nbsp;SP1, 15&nbsp;GA,
     12&nbsp;SP5, 12&nbsp;SP4, 12&nbsp;SP3
    </para>
   </listitem>
  </itemizedlist>
 </section>
 <section xml:id="what-is-zypper">
  <title>What is &zypper;?</title>
  <para>
   &zypper; is a command-line package manager for installing, updating and
   removing packages. It can also be used to manage repositories.
  </para>
 </section>
 <section xml:id="how-it-works-zypper">
  <title>How does &zypper; work?</title>
  <para>
   &zypper; works and behaves as a regular command-line tool. It features
   subcommmands, arguments, and options that can be used to perform specific
   tasks.
  </para>
 </section>
 <section xml:id="benefits-zypper">
  <title>Benefits of &zypper;</title>
  <para>
   &zypper; offers several benefits compared to graphical package managers.
  </para>
  <itemizedlist>
   <listitem>
    <para>
     Being a command-line tool, &zypper; is faster in use and light on
     resources.
    </para>
   </listitem>
   <listitem>
    <para>
     &zypper; actions can be scripted.
    </para>
   </listitem>
   <listitem>
    <para>
     &zypper; can be used on systems that do not have graphical desktop
     environments. This makes it suitable for use with servers and remote
     machines.
    </para>
   </listitem>
  </itemizedlist>
 </section>
 <section xml:id="general-usage-zypper">
  <title>General usage</title>
  <para>
   The general syntax of &zypper; is:
  </para>
<screen>zypper [<replaceable>GLOBAL_OPTIONS</replaceable>]&nbsp;<replaceable>SUBCOMMAND</replaceable>&nbsp;[<replaceable>SUBCOMMAND_OPTIONS</replaceable>]&nbsp;[<replaceable>ARGUMENTS</replaceable>]</screen>
  <para>
   The components enclosed in brackets are not required. See <command>zypper
   help</command> for a list of general options and all subcommands. To get help
   for a specific subcommand, type <command>zypper help</command>
   <replaceable>SUBCOMMAND</replaceable>.
  </para>
  <variablelist>
   <varlistentry>
    <term>Zypper subcommands</term>
    <listitem>
     <para>
      The simplest way to execute &zypper; is to type its name, followed by a
      command. For example, to apply all needed patches to the system, use:
     </para>
<screen>&prompt.sudo;zypper patch</screen>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Global options</term>
    <listitem>
     <para>
      Additionally, you can choose from one or more global options by typing
      them immediately before the command:
     </para>
<screen>&prompt.sudo;zypper --non-interactive patch</screen>
     <para>
      In the above example, the option <option>--non-interactive</option> means
      that the command is run without asking anything (automatically applying
      the default answers).
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Command-specific options</term>
    <listitem>
     <para>
      To use options that are specific to a particular command, type them
      immediately after the command:
     </para>
<screen>&prompt.sudo;zypper patch --auto-agree-with-licenses</screen>
     <para>
      In the above example, <option>--auto-agree-with-licenses</option> is used
      to apply all needed patches to a system without you being asked to
      confirm any licenses. Instead, license will be accepted automatically.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>Arguments</term>
    <listitem>
     <para>
      Some commands require one or more arguments. For example, when using the
      command <command>install</command>, you need to specify one or more packages
      you want to <emphasis>install</emphasis>:
     </para>
<screen>&prompt.sudo;zypper install mplayer</screen>
     <para>
      Some options also require a single argument. The following command will
      list all known patterns:
     </para>
<screen>&prompt.user;zypper search --type pattern</screen>
    </listitem>
   </varlistentry>
  </variablelist>
  <para>
   You can combine all of the above. For example, the following command will
   install the <package>mc</package> and <package>vim</package> packages from
   the <literal>factory</literal> repository while being verbose:
  </para>
<screen>&prompt.sudo;zypper --verbose install --from factory mc vim</screen>
  <para>
   The <option>--from</option> option keeps all repositories enabled (for
   solving any dependencies) while requesting the package from the specified
   repository. The option <option>--repo</option> is an alias for <option>--from</option>,
   and you may use either one.
  </para>
  <para>
   Most &zypper; commands have a <literal>dry-run</literal> option that does a
   simulation of the given command. It can be used for test purposes:
  </para>
<screen>&prompt.sudo;zypper remove --dry-run MozillaFirefox</screen>
  <para>
   &zypper; supports the global <option>--userdata
   <replaceable>STRING</replaceable></option> option. You can specify a string
   with this option, which gets written to &zypper;'s log files and plug-ins
   (such as the Btrfs plug-in). It can be used to mark and identify
   transactions in log files.
  </para>
<screen>&prompt.sudo;zypper --userdata <replaceable>STRING</replaceable> patch</screen>
 </section>
 <section xml:id="general-usage-zypper-subcommands">
  <title>Using Zypper subcommands</title>
  <para>
   &zypper; subcommands are executables that are stored in the directory
   <filename>/usr/lib/zypper/commands</filename>. If a subcommand is not found
   in this directory, &zypper; automatically searches the rest of your <envar>$PATH</envar>
   for it. This enables writing your own local extensions and storing them in
   userspace.
  </para>
  <para>
   Executing subcommands in the &zypper; shell, and using global &zypper; options
   are not supported.
  </para>
  <para>
   List your available subcommands:
  </para>
<screen>&prompt.user;zypper help subcommand
[...]
Available zypper subcommands in '/usr/lib/zypper/commands'

  appstream-cache
  lifecycle
  migration
  search-packages

Zypper subcommands available from elsewhere on your $PATH

  &lt;none> </screen>
  <para>
   View the help screen for a subcommand:
  </para>
<screen>&prompt.user;zypper help appstream-cache</screen>
 </section>
 <section xml:id="related-zypper">
  <title>Related topics</title>
  <!--to create unique section IDs, amend the TOPIC-ID (without prefix)-->
  <!--example: related-ntp-time-synchronization-->
  <itemizedlist>
   <listitem>
    <para>
     Installing and removing software with &zypper;
    </para>
   </listitem>
   <listitem>
    <para>
     Updating software with &zypper;
    </para>
   </listitem>
  </itemizedlist>
 </section>
</article>
