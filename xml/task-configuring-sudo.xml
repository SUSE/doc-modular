<?xml version="1.0" encoding="UTF-8"?>
<!-- This file originates from the project https://github.com/openSUSE/doc-kit -->
<!-- This file can be edited downstream. -->
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook51-profile.xsl"
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE article
[
  <!ENTITY % entities SYSTEM "generic-entities.ent">
    %entities;
]>
<!--metadata
 *product all
 * product version all
 * topic category/ies architecture, system administration
 * target group(s) all
 * initially published 08-2021
 * last modified-->

 <remark>2021-09-13 jufa: as this topic presents mostly concept info, I propose
to either find and add more procedures or move this content to
concept-sudo.xml</remark>
 
 <article xml:id="task-configuring-sudo" xml:lang="en" role="task"
 xmlns="http://docbook.org/ns/docbook" version="5.1"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink">
 <info><title>configuring &sudo;</title>
  <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
   <dm:bugtracker>
    <dm:url>https://bugzilla.suse.com/enter_bug.cgi</dm:url>
    <dm:component>Documentation</dm:component>
    <dm:product>SLE</dm:product>
    <dm:assignee>assignee@suse.com</dm:assignee>
   </dm:bugtracker>
   <dm:translation>no</dm:translation>
  </dm:docmanager>
  <keywordset>
   <keyword>sudo</keyword>
   <keyword>su</keyword>
   <keyword>root user</keyword>
   <keyword>sudo configuration</keyword>
   <keyword>visudo</keyword>
  </keywordset>
 </info>
 <section xml:id="task-configuring-sudo-environment">
  <title>Environment</title>
  <para>
   This document applies to the following products and product
   versions:
  </para>
  <itemizedlist>
   <listitem>
    <para>&sles;&nbsp;15&nbsp;SP3, 15&nbsp;SP2, 15&nbsp;SP1, 15&nbsp;GA,
     12&nbsp;SP5, 12&nbsp;SP4, 12&nbsp;SP3</para>
   </listitem>
   <listitem>
    <para>&sles4sap;&nbsp;15&nbsp;SP3, 15&nbsp;SP2, 15&nbsp;SP1, 15&nbsp;GA,
     12&nbsp;SP5, 12&nbsp;SP4, 12&nbsp;SP3</para>
   </listitem>
   <listitem>
    <para>&sleha;&nbsp;15&nbsp;SP3, 15&nbsp;SP2, 15&nbsp;SP1, 15&nbsp;GA,
     12&nbsp;SP5, 12&nbsp;SP4, 12&nbsp;SP3</para>
   </listitem>
   <listitem>
    <para>&slehpc;&nbsp;15&nbsp;SP3, 15&nbsp;SP2, 15&nbsp;SP1, 15&nbsp;GA</para>
   </listitem>
   <listitem>
    <para>&sled;&nbsp;15&nbsp;SP3, 15&nbsp;SP2, 15&nbsp;SP1, 15&nbsp;GA,
     12&nbsp;SP5, 12&nbsp;SP4, 12&nbsp;SP3</para>
   </listitem>
   <listitem>
    <para>&slert;&nbsp;15&nbsp;SP3, 15&nbsp;SP2, 15&nbsp;SP1, 15&nbsp;GA,
     12&nbsp;SP5, 12&nbsp;SP4, 12&nbsp;SP3</para>
   </listitem>
  </itemizedlist>
 </section>
  
 <section xml:id="task-configuring-sudo-intro">
  <title>Introduction</title>
  <remark>jufa: do we want to have this section always called Introduction?
   otherwise I could start with the sub-section right here</remark>
  <para>
   &sudo; provides a wide range on configurable options. The following
   article explains how &sudo; can be configured to your needs.
  </para>
 
  <section xml:id="task-configuring-sudo-intro-sudoers-config">
   <title>
    <filename>sudoers</filename> configuration files
   </title>
   <para>
    The main policy configuration file for &sudo; is
     <filename>/etc/sudoers</filename>.
   </para>
   <note>
    <title>
     Ignored files in <filename>/etc/sudoers.d</filename>
    </title>
    <para>
     The <literal>#includedir</literal> directive in
      <filename>/etc/sudoers</filename> ignores files that end with the
      <literal>~</literal> (tilde) character or contain the
     <literal>.</literal> (dot) character.
    </para>
   </note>
   <para>
    Keep in mind that the <filename>/etc/sudoers</filename> file is
    supplied by the system packages, and modifications done directly in the file
    may break updates. Therefore, it is recommended to put custom configuration
    into files in the <filename>/etc/sudoers.d/</filename> directory. Use the
    following command to create or edit a file: </para>
   <screen>sudo visudo -f /etc/sudoers.d/<replaceable>NAME</replaceable></screen>
   <note>
    <para>
     As it is possible to lock yourself out of the system if the file is
     malformed, it is strongly recommended to use <command>visudo</command> for
     editing. It prevents editing conflicts and checks for syntax errors before
     saving the modifications. If you have locked yourself out, refer to <xref
     linkend="troubleshooting-task-config-sudo-unlock"/>.
    </para>
   </note>
   <para>
    You can use another editor instead of vi by setting the
     <envar>EDITOR</envar> environment variable, for example:
   </para>
   <screen>sudo EDITOR=<replaceable>/usr/bin/nano</replaceable> visudo</screen>
  </section>
  
  <section xml:id="task-configuring-sudo-intro-syntax">
   <title>Basic sudoers configuration syntax</title>
   <para>
    The sudoers configuration files contain two types of options: strings
    and flags. While strings can contain any value, flags can be turned either
    ON or OFF. The most important syntax constructs for sudoers configuration
    files are as follows:
   </para>
   <screen>
    # Everything on a line after # is ignored <co xml:id="co-sudo-syntax-comment"/>
    Defaults !insults # Disable the insults flag <co xml:id="co-sudo-syntax-flag"/>
    Defaults env_keep += "DISPLAY HOME" # Add DISPLAY and HOME to env_keep
    &exampleuser_plain; ALL = NOPASSWD: /usr/bin/frobnicate, PASSWD: /usr/bin/journalctl <co xml:id="co-sudo-syntax-rule"/>
   </screen>
   <calloutlist>
    <callout arearefs="co-sudo-syntax-comment">
     <para>
      There are two exceptions: <literal>#include</literal> and
       <literal>#includedir</literal> are regular commands.
     </para>
    </callout>
    <callout arearefs="co-sudo-syntax-flag">
     <para>
      Remove the <literal>!</literal> character to set the desired flag to
      ON.
     </para>
    </callout>
    <callout arearefs="co-sudo-syntax-rule">
     <para>
      See <xref linkend="sec-sudo-conf-rule"/>.
     </para>
    </callout>
   </calloutlist>
   <variablelist xml:id="tab-adm-sudo-options">
    <title>Useful flags and options</title>
    <varlistentry>
     <term>
      <literal>targetpw</literal>
     </term>
     <listitem>
      <para> This flag controls whether the invoking user is required to enter
       the password of the target user (ON) (for example &rootuser;) or the
       invoking user (OFF). </para>
      <screen>Defaults targetpw # Turn targetpw flag ON</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <literal>rootpw</literal>
     </term>
     <listitem>
      <para> If set, &sudo; prompts for the &rootuser; password. The default is
       OFF. </para>
      <screen>Defaults !rootpw # Turn rootpw flag OFF</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <literal>env_reset</literal>
     </term>
     <listitem>
      <para> If set, &sudo; constructs a minimal environment with
        <envar>TERM</envar>, <envar>PATH</envar>, <envar>HOME</envar>,
        <envar>MAIL</envar>, <envar>SHELL</envar>, <envar>LOGNAME</envar>,
        <envar>USER</envar>, <envar>USERNAME</envar>, and <envar>SUDO_*</envar>.
       Additionally, variables listed in <literal>env_keep</literal> are
       imported from the calling environment. The default is ON. </para>
      <screen>Defaults env_reset # Turn env_reset flag ON</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <literal>env_keep</literal>
     </term>
     <listitem>
      <para> List of environment variables to keep when the
        <literal>env_reset</literal> flag is ON. </para>
      <screen>
       # Set env_keep to contain EDITOR and PROMPT
       Defaults env_keep = "EDITOR PROMPT"
       Defaults env_keep += "JRE_HOME" # Add JRE_HOME
       Defaults env_keep -= "JRE_HOME" # Remove JRE_HOME
      </screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>
      <literal>env_delete</literal>
     </term>
     <listitem>
      <para> List of environment variables to remove when the
        <literal>env_reset</literal> flag is OFF. </para>
      <screen>
       # Set env_delete to contain EDITOR and PROMPT
       Defaults env_delete = "EDITOR PROMPT"
       Defaults env_delete += "JRE_HOME" # Add JRE_HOME
       Defaults env_delete -= "JRE_HOME" # Remove JRE_HOME
      </screen>
     </listitem>
    </varlistentry>
   </variablelist>
   <para> The <literal>Defaults</literal> token can also be used to create
    aliases for a collection of users, hosts, and commands. Furthermore, it is
    possible to apply an option only to a specific set of users. </para>
   <para> For detailed information about the <filename>/etc/sudoers</filename>
    configuration file, consult <command>man 5 sudoers</command>. </para>
  </section>
  
  <section xml:id="task-configuring-sudo-intro-sudoers-rules">
   <title>Basic sudoers rules</title>
   <para>
    Each rule follows the following scheme (<literal>[]</literal> marks
    optional parts):
   </para>
   <screen>
    #Who      Where         As whom      Tag                What
    User_List Host_List = [(User_List)] [NOPASSWD:|PASSWD:] Cmnd_List
   </screen>
   <variablelist>
    <title>sudoers rule syntax</title>
    <varlistentry>
     <term><literal>User_List</literal>
     </term>
     <listitem>
      <para> One or several (separated by comma) identifiers: either a user
       name, a group in the format <literal>%GROUPNAME</literal>, or a user ID
       in the format <literal>#UID</literal>. Negation can be specified with the
        <literal>!</literal> prefix. </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>Host_List</literal>
     </term>
     <listitem>
      <para> One or several (separated by comma) identifiers: either a (fully
       qualified) host name or an IP address. Negation can be specified with the
        <literal>!</literal> prefix. <literal>ALL</literal> is a common choice
       for <literal>Host_List</literal>. </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>NOPASSWD:|PASSWD:</literal>
     </term>
     <listitem>
      <para>
       The user is not prompted for a password when running commands
       matching <literal>Cmd_List</literal> after <literal>NOPASSWD:</literal>.
      </para>
      <para>
       <literal>PASSWD</literal> is the default. It only needs to be specified
       when both <literal>PASSWD</literal> and <literal>NOPASSWD</literal> are
       on the same line: </para>
      <screen>&exampleuser_plain; ALL = PASSWD: /usr/bin/foo, NOPASSWD: /usr/bin/bar</screen>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><literal>Cmnd_List</literal>
     </term>
     <listitem>
      <para>
       One or several (separated by comma) specifiers: A path to an
       executable, followed by an optional allowed argument.
      </para>
      <screen>
       /usr/bin/foo     # Anything allowed
       /usr/bin/foo bar # Only "/usr/bin/foo bar" allowed
       /usr/bin/foo ""  # No arguments allowed
      </screen>
     </listitem>
    </varlistentry>
   </variablelist>
   <para>
    <literal>ALL</literal> can be used as <literal>User_List</literal>,
     <literal>Host_List</literal>, and <literal>Cmnd_List</literal>.
   </para>
   <para>
    A rule that allows &exampleuser; to run all commands as root without
    entering a password:
   </para>
   <screen>&exampleuser_plain; ALL = NOPASSWD: ALL</screen>
   <para>
    A rule that allows &exampleuser; to run <command>systemctl restart
    apache2</command>:
   </para>
   <screen>&exampleuser_plain; ALL = /usr/bin/systemctl restart apache2</screen>
   <para>
    A rule that allows &exampleuser; to run <command>wall</command> as
     <systemitem>admin</systemitem> with no arguments:
   </para>
   <screen>&exampleuser_plain; ALL = (admin) /usr/bin/wall ""</screen>
   <warning>
    <title>Unsafe rules</title>
    <para>
     <emphasis>Do not</emphasis> use rules like <literal>ALL ALL = ALL</literal>
     without <literal>Defaults targetpw</literal>. Otherwise anyone can run
     commands as &rootuser;.
    </para>
   </warning>
  </section>
 </section>
  
 <section xml:id="task-configuring-sudo-requirements">
  <title>Requirements</title>
  <para>
   To use &sudo;, you need to have the <productname>sudo</productname>
   package installed which is usually availabe by default on your
    <productname>Linux</productname> distribution.
  </para>
 </section>
 
  <section xml:id="task-configuring-sudo-edit-config-files">
  <title>Editing the configuration files</title>
   <remark>2021-09-13 jufa: either add more instructions here or move entire
   content of this xml to concept-sudo.xml</remark>
  <para>
   For more information on the <command>visudo</command> command, run
    <command>man 8 visudo</command>.
  </para>
 </section>
 
 <section xml:id="task-configuring-sudo-related">
  <title>Related topics</title>
  <itemizedlist>
   <listitem>
    <para>
     <citetitle>&sudo;: basic concept</citetitle>
    </para>
    <!-- <para>
     &sudo;: basic concept <xref linkend="concept-sudo-basics"/>
    </para> -->
   </listitem>
   <listitem>
    <para>
     <citetitle>Working with &sudo;</citetitle>
    </para>
    <!-- <para> Working with &sudo; <xref linkend="task-working-sudo"/>
    </para> -->
   </listitem>
  </itemizedlist>
 </section>
</article>
