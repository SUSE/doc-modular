<?xml version="1.0" encoding="UTF-8"?>
<!-- This file originates from the project https://github.com/openSUSE/doc-kit -->
<!-- This file can be edited downstream. -->
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook51-profile.xsl"
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE article
[
  <!ENTITY % entities SYSTEM "generic-entities.ent">
    %entities;
]>
<article xml:id="task-convert-yaml-to-json" xml:lang="en"
 role="task"
 xmlns="http://docbook.org/ns/docbook" version="5.1"
 xmlns:its="http://www.w3.org/2005/11/its"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>Converting YAML formatted files into JSON</title>
  <section xml:id="introduction-convert-yaml-to-json">
    <title>Introduction</title>
    <para>
      JSON is a universal file format for storing structured data.
      Applications, for example, &ignition;, use it to store and retrieve their
      configuration. Because JSON's syntax is complex and hard to read for
      human beings, you can write the configuration in a more friendly format
      called YAML and then convert it into JSON.
    </para>
  </section>
  <section xml:id="sec-converting-config">
    <title>Converting YAML files into JSON format</title>
    <para>
      The tool that converts &ignition;-specific vocabularies in YAML files
      into JSON format is <literal>butane</literal>. It also verifies the
      syntax of the YAML file to catch potential errors in the structure. For
      the latest version of <literal>butane</literal>, add the following
      repository:
    </para>
<screen>
&prompt.sudo; zypper ar -f \
  https://download.opensuse.org/repositories/devel:/kubic:/ignition/openSUSE_Tumbleweed/ \
  devel_kubic_ignition
</screen>
    <para>
      Replace <literal>openSUSE_Tumbleweed</literal> with one of the following
      (depending on your distribution):
    </para>
    <itemizedlist>
      <listitem>
        <para>
          <literal>'openSUSE_Leap_$releasever'</literal>
        </para>
      </listitem>
      <listitem>
        <para>
          <literal>15.3</literal>
        </para>
      </listitem>
    </itemizedlist>
    <para>
      Now you can install the <literal>butane</literal> tool:
    </para>
<screen>&prompt.sudo; zypper ref &amp;&amp; zypper in butane</screen>
    <para>
      After the installation is complete, you can invoke
      <literal>butane</literal> by running:
    </para>
<screen>&prompt.user; butane -p -o config.ign config.fcc</screen>
    <itemizedlist>
      <listitem>
        <para>
          <filename>config.fcc</filename> is the path to the YAML configuration
          file.
        </para>
      </listitem>
      <listitem>
        <para>
          <filename>config.ign</filename> is the path to the output JSON
          configuration file.
        </para>
      </listitem>
      <listitem>
        <para>
          The <option>-p</option> command option adds line breaks to the output
          file and thus makes it more readable.
        </para>
      </listitem>
    </itemizedlist>
  </section>
  <section xml:id="summary-convert-yaml-to-json">
    <title>Summary</title>
    <para>
      After you completed the described steps, you can write and store
      configuration files in YAML format while providing them in JSON format if
      applications, for example, &ignition;, require it.
    </para>
  </section>
  <section xml:id="related-convert-yaml-to-json">
    <title>Related topics</title>
    <itemizedlist>
      <listitem>
        <para>
          Configuration using &ignition; is described in
          <xref
     linkend="concept-configure-ignition"/>.
        </para>
      </listitem>
      <listitem>
        <para>
          Examples of the &ignition; configuration are included in
          <xref
     linkend="reference-ignition-configuration"/>.
        </para>
      </listitem>
    </itemizedlist>
  </section>
</article>
