<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook51-profile.xsl"
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE article
[
  <!ENTITY % entities SYSTEM "generic-entities.ent">
    %entities;
]>

<article xml:id="task-send-termination-signals-systemd" xml:lang="en"
 role="task"
 xmlns="http://docbook.org/ns/docbook" version="5.1"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink">

 <info>
   <title>Sending termination signals to &systemd; services</title>
   <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
    <dm:bugtracker>
     <dm:url>https://bugzilla.suse.com/enter_bug.cgi</dm:url>
     <dm:component>Smart Docs</dm:component>
     <dm:product>Documentation</dm:product>
     <dm:assignee>carla.schroder@suse.com</dm:assignee>
    </dm:bugtracker>
    <dm:translation>no</dm:translation>
   </dm:docmanager>
 </info>

<section xml:id="environment-send-termination-signals-systemd">
 <title>Environment</title>
  <para>This document applies to the following products and product versions:</para>
  <itemizedlist>
  <listitem>
   <para>&sles;&nbsp;15&nbsp;SP3, 15&nbsp;SP2, 15&nbsp;SP1, 15&nbsp;GA, 12&nbsp;SP5, 12&nbsp;SP4, 12&nbsp;SP3</para>
  </listitem>
  <listitem>
   <para>&sles4sap;&nbsp;15&nbsp;SP3, 15&nbsp;SP2, 15&nbsp;SP1, 15&nbsp;GA, 12&nbsp;SP5, 12&nbsp;SP4, 12&nbsp;SP3</para>
  </listitem>
  <listitem>
   <para>&sleha;&nbsp;15&nbsp;SP3, 15&nbsp;SP2, 15&nbsp;SP1, 15&nbsp;GA, 12&nbsp;SP5, 12&nbsp;SP4, 12&nbsp;SP3</para>
  </listitem>
  <listitem>
   <para>&slehpc;&nbsp;15&nbsp;SP3, 15&nbsp;SP2, 15&nbsp;SP1, 15&nbsp;GA</para>
  </listitem>
  <listitem>
   <para>&sled;&nbsp;15&nbsp;SP3, 15&nbsp;SP2, 15&nbsp;SP1, 15&nbsp;GA, 12&nbsp;SP5, 12&nbsp;SP4, 12&nbsp;SP3</para>
  </listitem>
  <listitem>
   <para>&slert;&nbsp;15&nbsp;SP3, 15&nbsp;SP2, 15&nbsp;SP1, 15&nbsp;GA, 12&nbsp;SP5, 12&nbsp;SP4, 12&nbsp;SP3</para>
  </listitem>
 </itemizedlist>
</section>

 <section xml:id="introduction-send-termination-signals-systemd">
  <title>Introduction</title>
   <para>
    &systemd;'s organization of confining each service into a cgroup makes it
    possible to clearly identify all parent and child processes of a service,
    and therefore allows you to send a signal to each of these processes.
    You may send a signal to a &systemd; service, or to individual processes
    that belong to a service.
   </para>
 </section>

 <section xml:id="requirements-send-termination-signals-systemd">
  <title>Requirements</title>
  <itemizedlist>
   <listitem>
    <para>
      The <command>systemctl</command> command.
    </para>
   </listitem>
   <listitem>
    <para>
      The <command>systemd-cgls</command> command.
    </para>
   </listitem>
   <listitem>
    <para>
     Knowledge of how processes work in Linux.
    </para>
   </listitem>
  </itemizedlist>
  <para>
     The following examples demonstrate how to identify processes that
     belong to a &systemd; service, and how to stop processes
     with native &systemd; commands.
  </para>
 </section>

 <section xml:id="send-termination-signals-systemd">
  <title>Identifying and stopping processes in &systemd; services</title>
  <para>
   The <command>systemd-cgls</command> command displays all processes that
   belong to a &systemd; service, and <command>systemctl
   <replaceable>SIGNAL</replaceable> <replaceable>PROCESS</replaceable>
   </command> stops them.
  </para>
  <note xml:id="sec-boot-systemd-dbus">
   <title>Important notes on the D-Bus service</title>
   <para>
    The D-Bus service is the message bus for communication between &systemd; clients and the systemd manager that is running as pid 1.
    Even though <systemitem class="daemon">dbus</systemitem> is a stand-alone daemon, it is an integral part of the init infrastructure.
   </para>
   <para>
    Terminating <systemitem class="daemon">dbus</systemitem> or restarting it in the running system is similar to an attempt to terminate or restart pid 1.
    It will break &systemd; client/server communication and make most &systemd; functions unusable.
   </para>
   <para>
    Therefore, terminating or restarting <systemitem
     class="daemon">dbus</systemitem> is neither recommended nor supported.
   </para>
   <para>
    Updating the <systemitem>dbus</systemitem> or <systemitem>dbus</systemitem>-related packages requires a reboot.
    When in doubt whether a reboot is necessary, run the <command>sudo zypper ps -s</command>.
    If <literal>dbus</literal> appears among the listed services, you need to reboot the system.
   </para>
   <para>
    Keep in mind that <systemitem>dbus</systemitem> is updated even when automatic updates are configured to skip the packages that require reboot.
   </para>
  </note>
  <itemizedlist>
   <listitem>
    <para>
     List all cgroups and their processes:
    </para>
    <screen>&prompt.user;<command>systemd-cgls</command></screen>
   </listitem>
   <listitem>
    <para>
     Display all processes that belong to a particular service, for example,:
     the <literal>libvirtd.service</literal> service:
    </para>
    <screen>&prompt.user;<command>systemd-cgls -u libvirtd.service</command>
    </screen>
   </listitem>
   <listitem>
    <para>
     Send a termination signal to the service.
     <systemitem>SIGTERM</systemitem> (15) is the default:
    </para>
    <screen>&prompt.sudo;<command>systemctl kill <replaceable>SERVICE_NAME</replaceable></command></screen>
   </listitem>
   <listitem>
    <para>
     Send a different signal to a service with the <option>-s</option>
     option, such as <systemitem>SIGKILL</systemitem> (9):
    </para>
<screen>&prompt.sudo;<command>systemctl kill -s <replaceable>9</replaceable> <replaceable>SERVICE_NAME</replaceable></command></screen>
   </listitem>
   <listitem>
    <para>
      By default the <command>kill</command> command sends the signal to
      <option>all</option> processes of the specified cgroup.
      You can restrict it to the <option>control</option> or the
      <option>main</option> process.
      The latter is, for example, useful to force a service to reload its
      configuration by sending <systemitem>SIGHUP</systemitem>:
     </para>
<screen>&prompt.sudo;<command>systemctl kill -s SIGHUP --kill-who=main <replaceable>SERVICE_NAME</replaceable></command></screen>
    </listitem>
  </itemizedlist>
 </section>

 <section xml:id="summary-termination-signals-systemd">
  <title>Summary</title>
  <para>
   This article details how to find all processes that belong to
   a &systemd; service, and how to stop them with native &systemd;
   commands.
  </para>
 </section>

 <section xml:id="troubleshooting-termination-signals-systemd">
  <title>Troubleshooting</title>
  <para>If anything goes wrong, the answers are most likely in the
    &systemd; logging journal, <systemitem>journalctl</systemitem>.
  </para>
  <variablelist>
   <varlistentry>
    <term>How to find answers in <systemitem>journalctl</systemitem>?</term>
    <listitem>
     <para>
      By default, the <command>journalctl</command> command displays oldest
      entries first. View the most recent entries:
     </para>
     <screen>&prompt.user;<command>journalctl -r</command></screen>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>How to filter the journal to find the entries you want to see?</term>
    <listitem>
     <para>
       A quick way is with <command>grep</command>, for example:
     </para>
<screen>&prompt.user;<command>journalctl -r | grep SERVICE_NAME</command>
  </screen>
    </listitem>
   </varlistentry>
  </variablelist>
 </section>

 <section xml:id="related-termination-signals-systemd">
  <title>Related topics</title>
  <itemizedlist>
   <listitem>
    <para>
     man 7 signal
    </para>
   </listitem>
   <listitem>
    <para>
     man 1 systemd-cgls
    </para>
   </listitem>
   <listitem>
    <para>
     man 1 journalctl
    </para>
   </listitem>
   <listitem>
    <para>
     Section FOO of the FOO Guide
    </para>
   </listitem>
  </itemizedlist>
 </section>
</article>
