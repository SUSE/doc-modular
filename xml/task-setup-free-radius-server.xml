<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="urn:x-suse:xslt:profiling:docbook51-profile.xsl"
 type="text/xml"
 title="Profiling step"?>
<!DOCTYPE article
[
  <!ENTITY % entities SYSTEM "generic-entities.ent">
    %entities;
]>

<article xml:id="task-setup-free-radius-server" xml:lang="en"
 role="task"
 xmlns="http://docbook.org/ns/docbook" version="5.1"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink">

 <info>
   <title>Setting up a FreeRADIUS server</title>
   <dm:docmanager xmlns:dm="urn:x-suse:ns:docmanager">
    <dm:bugtracker>
     <dm:url>https://bugzilla.suse.com/enter_bug.cgi</dm:url>
     <dm:component>Documentation</dm:component>
     <dm:product>PUBLIC SUSE Linux Enterprise Server 15 SP3</dm:product>
     <dm:assignee>carla.schroder@suse.com</dm:assignee>
    </dm:bugtracker>
    <dm:translation>no</dm:translation>
   </dm:docmanager>
 </info>

<section xml:id="environment-setup-free-radius-server">
 <title>Environment</title>
  <para>
    This document applies to the following products and product versions:
  </para>
  <itemizedlist>
  <listitem>
   <para>&sles;&nbsp;15&nbsp;SP3, 15&nbsp;SP2, 15&nbsp;SP1, 15&nbsp;GA, 12&nbsp;SP5, 12&nbsp;SP4, 12&nbsp;SP3</para>
  </listitem>
  <listitem>
   <para>&sles4sap;&nbsp;15&nbsp;SP3, 15&nbsp;SP2, 15&nbsp;SP1, 15&nbsp;GA, 12&nbsp;SP5, 12&nbsp;SP4, 12&nbsp;SP3</para>
  </listitem>
  <listitem>
   <para>&sleha;&nbsp;15&nbsp;SP3, 15&nbsp;SP2, 15&nbsp;SP1, 15&nbsp;GA, 12&nbsp;SP5, 12&nbsp;SP4, 12&nbsp;SP3</para>
  </listitem>
  <listitem>
   <para>&slehpc;&nbsp;15&nbsp;SP3, 15&nbsp;SP2, 15&nbsp;SP1, 15&nbsp;GA</para>
  </listitem>
  <listitem>
   <para>&sled;&nbsp;15&nbsp;SP3, 15&nbsp;SP2, 15&nbsp;SP1, 15&nbsp;GA, 12&nbsp;SP5, 12&nbsp;SP4, 12&nbsp;SP3</para>
  </listitem>
  <listitem>
   <para>&slert;&nbsp;15&nbsp;SP3, 15&nbsp;SP2, 15&nbsp;SP1, 15&nbsp;GA, 12&nbsp;SP5, 12&nbsp;SP4, 12&nbsp;SP3</para>
  </listitem>
 </itemizedlist>
</section>

 <section xml:id="introduction-setup-free-radius-server">
  <title>Introduction</title>
   <para>
     The RADIUS (Remote Authentication Dial-In User Service) protocol has
     long been a standard service for manage network access. FreeRADIUS
     is the open source RADIUS server implementation.
   </para>
   <para>
     FreeRADIUS performs
     authentication, authorization, and accounting (AAA) for very
     large businesses such as Internet service providers and cellular
     network providers, and is also popular for small networks. It
     authenticates users and devices, authorizes those users and
     devices for certain network services, and tracks use of services for
     billing and auditing. You do not have to use all three of the AAA
     protocols, only the ones you need. For example, you may not need
     accounting but only client authentication, or perhaps all you need is
     accounting, because client authorization is managed by something else.
   </para>
   <para>
      It is extremely efficient and manages thousands of requests per second
      on modest hardware.
   </para>
   <para>
      RADIUS operates over a distributed architecture, and runs separately
      from the Network Access Server (NAS). User access data is stored on a
      central RADIUS server that is available to multiple NAS devices. The NAS
      provide the physical access to the network, such as a managed
      Ethernet switch, or a wireless access point.
   </para>
 </section>

 <section xml:id="requirements-setup-free-radius-server">
  <title>Requirements</title>
  <itemizedlist>
   <listitem>
    <para>
     A separate machine from your NAS to install FreeRADIUS on.
    </para>
   </listitem>
   <listitem>
    <para>
     The <systemitem class="resource">freeradius-server</systemitem> and
     <systemitem class="resource">freeradius-server-utils</systemitem>
     packages installed on this machine.
    </para>
   </listitem>
   <listitem>
     <para>
     Install
     <systemitem class="resource">freeradius-server-utils</systemitem> on a
     another machine on your network, for testing client functions.
   </para>
   </listitem>
  </itemizedlist>
 </section>

 <section xml:id="free-radius-test-system">
  <title>Installation and testing</title>
   <para>
    The following steps set up a simple test system. When you have
    verified that the server is operating correctly and you are ready to
    create a production configuration, you will have several undo steps
    to perform before starting your production configuration.
   </para>

   <procedure>
    <step>
     <para>
      Enter <filename>/etc/raddb/certs</filename>, then run
      the <filename>bootstrap</filename> script to create a set of test
      certificates:
    </para>
    <screen>&prompt.root;<command>zypper in freeradius-server freeradius-server-utils</command>
&prompt.root;<command>cd /etc/raddb/certs</command>
&prompt.root;<command>./bootstrap</command></screen>
    </step>
    <step>
    <para>
     When the <filename>bootstrap</filename> script has completed, start the server in debugging mode:
    </para>
    <screen>&prompt.root;<command>radiusd -X</command>
[...]
Listening on auth address * port 1812 bound to server default
Listening on acct address * port 1813 bound to server default
Listening on auth address :: port 1812 bound to server default
Listening on acct address :: port 1813 bound to server default
Listening on auth address 127.0.0.1 port 18120 bound to server inner-tunnel
Listening on proxy address * port 54435
Listening on proxy address :: port 58415
Ready to process requests
</screen>
    </step>
    <step>
   <para>
    When you see the "Listening" and "Ready to process requests" lines,
    your server has started correctly. If it does not start, read the
    output carefully because it tells you what went wrong. You may direct
    the output to a text file with <command>tee</command>:
    </para>
    <screen>&prompt.user;<command>radiusd -X | tee radiusd.text</command></screen>
    </step>
    <step>
    <para>
     The next step is to test authentication with a test client and user.
     The client is a client of the RADIUS server, such as a wireless
     access point or switch. Clients are configured in
     <filename>/etc/raddb/client.conf</filename>. Human users are
     configured in
     <filename>/etc/raddb/mods-config/files/authorize</filename>.
    </para>
    <para>
      Open
      <filename>/etc/raddb/mods-config/files/authorize</filename> and
      uncomment the following lines:
    </para>
        <screen>bob   Cleartext-Password := "hello"
Reply-Message := "Hello, %{User-Name}" </screen>
    </step>
    <step>
    <para>
        A test client, <literal>client localhost</literal>, is provided in
        <filename>/etc/raddb/client.conf</filename>, with a secret of
        <literal>testing123</literal>. Open a second terminal, and as an
        unprivileged user use the <command>radtest</command> command to log
        in as bob:
    </para>
    <screen>&prompt.user;<command>radtest bob hello 127.0.0.1 0 testing123</command>
Sent Access-Request Id 241 from 0.0.0.0:35234 to 127.0.0.1:1812 length 73
        User-Name = "bob"
        User-Password = "hello"
        NAS-IP-Address = 127.0.0.1
        NAS-Port = 0
        Message-Authenticator = 0x00
        Cleartext-Password = "hello"
Received Access-Accept Id 241 from 127.0.0.1:1812 to 0.0.0.0:0 length 20
   </screen>
 </step>
 <step>
    <para>
        In your <literal>radius -X</literal> terminal, a successful login looks like this:
    </para>
    <screen>(3) pap: Login attempt with password
(3) pap: Comparing with "known good" Cleartext-Password
(3) pap: User authenticated successfully
(3)     [pap] = ok
[...]
(3) Sent Access-Accept Id 241 from 127.0.0.1:1812 to 127.0.0.1:35234 length 0
(3) Finished request
Waking up in 4.9 seconds.
(3) Cleaning up request packet ID 241 with timestamp +889
</screen>
   </step>
   <step>
    <para>
      Now run one more login test from a different computer on your
      network. Create a client configuration on your server by uncommenting
      and modifying the following entry in
      <filename>/etc/raddb/client.conf</filename>, using the IP address of
      your test client machine:
    </para>
    <screen>client private-network-1 {
  ipaddr          = <replaceable>192.0.2.0/24</replaceable>
  secret          = testing123-1
  }
  </screen>

    <para>
      On the client machine, install
      <systemitem class="resource">freeradius-server-utils</systemitem>.
      Try logging in from the client as <literal>bob</literal>, using the
      <command>radtest</command> command. It
      is better to use the IP address of the RADIUS server rather than the
      hostname because it is faster:
    </para>
    <screen>&prompt.user;<command>radtest bob hello &wsIip; 0 testing123-1</command></screen>
   </step>
   </procedure>
   <para>
     If the client connection test fails, see
     <xref linkend="troubleshooting-free-radius-test-system"/>.
   </para>
  </section>

 <section xml:id="summary-free-radius-test-system">
  <title>Summary</title>
  <para>
    You now know how to set up a basic FreeRADIUS configuration
    for testing.
  </para>
 </section>

 <section xml:id="troubleshooting-free-radius-test-system">
  <title>Troubleshooting</title>
    <para>
      There are several test users and test clients provided. Make sure that
      your server has the correct firewall settings. If your test logins fail,
      review all the output to learn what went wrong. The configuration files
      are full of useful information, and we recommend studying them.
    </para>
 </section>

 <section xml:id="next-free-radius-test-system">
  <title>Next steps</title>
    <para>
      When you are satisfied with your testing and ready to
      create a production configuration, remove all the test certificates
      in <filename>/etc/raddb/certs</filename> and replace them with your
      own certificates, comment out all the test users and clients, and
      stop <command>radiusd</command> by pressing
      <keycombo><keycap>Ctrl</keycap><keycap>c</keycap></keycombo>. Manage
      the <literal>radiusd.service</literal> with
      <command>systemctl</command>, just like any other service.
    </para>
    <para>
      To learn how to fit a FreeRADIUS server in your network, see
      <link xlink:href="https://freeradius.org/documentation/"/>
      and
      <link xlink:href="https://networkradius.com/freeradius-documentation/"/>
      for in-depth references and howtos.
    </para>
 </section>
</article>
